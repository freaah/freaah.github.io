{"ast":null,"code":"import { useMemo as $50cCT$useMemo, useRef as $50cCT$useRef, useEffect as $50cCT$useEffect } from \"react\";\nimport { useOverlayTriggerState as $50cCT$useOverlayTriggerState } from \"@react-stately/overlays\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $8796f90736e175cb$var$TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\nconst $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;\nlet $8796f90736e175cb$var$tooltips = {};\nlet $8796f90736e175cb$var$tooltipId = 0;\nlet $8796f90736e175cb$var$globalWarmedUp = false;\nlet $8796f90736e175cb$var$globalWarmUpTimeout = null;\nlet $8796f90736e175cb$var$globalCooldownTimeout = null;\nfunction $8796f90736e175cb$export$4d40659c25ecb50b() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    delay = $8796f90736e175cb$var$TOOLTIP_DELAY,\n    closeDelay = $8796f90736e175cb$var$TOOLTIP_COOLDOWN\n  } = props;\n  let {\n    isOpen: isOpen,\n    open: open,\n    close: close\n  } = (0, $50cCT$useOverlayTriggerState)(props);\n  let id = (0, $50cCT$useMemo)(() => \"\".concat(++$8796f90736e175cb$var$tooltipId), []);\n  let closeTimeout = (0, $50cCT$useRef)(null);\n  let closeCallback = (0, $50cCT$useRef)(close);\n  let ensureTooltipEntry = () => {\n    $8796f90736e175cb$var$tooltips[id] = hideTooltip;\n  };\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in $8796f90736e175cb$var$tooltips) if (hideTooltipId !== id) {\n      $8796f90736e175cb$var$tooltips[hideTooltipId](true);\n      delete $8796f90736e175cb$var$tooltips[hideTooltipId];\n    }\n  };\n  let showTooltip = () => {\n    if (closeTimeout.current) clearTimeout(closeTimeout.current);\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    $8796f90736e175cb$var$globalWarmedUp = true;\n    open();\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n    if ($8796f90736e175cb$var$globalCooldownTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = null;\n    }\n  };\n  let hideTooltip = immediate => {\n    if (immediate || closeDelay <= 0) {\n      if (closeTimeout.current) clearTimeout(closeTimeout.current);\n      closeTimeout.current = null;\n      closeCallback.current();\n    } else if (!closeTimeout.current) closeTimeout.current = setTimeout(() => {\n      closeTimeout.current = null;\n      closeCallback.current();\n    }, closeDelay);\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n    if ($8796f90736e175cb$var$globalWarmedUp) {\n      if ($8796f90736e175cb$var$globalCooldownTimeout) clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {\n        delete $8796f90736e175cb$var$tooltips[id];\n        $8796f90736e175cb$var$globalCooldownTimeout = null;\n        $8796f90736e175cb$var$globalWarmedUp = false;\n      }, Math.max($8796f90736e175cb$var$TOOLTIP_COOLDOWN, closeDelay));\n    }\n  };\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp) $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n      $8796f90736e175cb$var$globalWarmedUp = true;\n      showTooltip();\n    }, delay);else if (!isOpen) showTooltip();\n  };\n  (0, $50cCT$useEffect)(() => {\n    closeCallback.current = close;\n  }, [close]);\n  (0, $50cCT$useEffect)(() => {\n    return () => {\n      if (closeTimeout.current) clearTimeout(closeTimeout.current);\n      let tooltip = $8796f90736e175cb$var$tooltips[id];\n      if (tooltip) delete $8796f90736e175cb$var$tooltips[id];\n    };\n  }, [id]);\n  return {\n    isOpen: isOpen,\n    open: immediate => {\n      if (!immediate && delay > 0 && !closeTimeout.current) warmupTooltip();else showTooltip();\n    },\n    close: hideTooltip\n  };\n}\nexport { $8796f90736e175cb$export$4d40659c25ecb50b as useTooltipTriggerState };","map":{"version":3,"names":["$8796f90736e175cb$var$TOOLTIP_DELAY","$8796f90736e175cb$var$TOOLTIP_COOLDOWN","$8796f90736e175cb$var$tooltips","$8796f90736e175cb$var$tooltipId","$8796f90736e175cb$var$globalWarmedUp","$8796f90736e175cb$var$globalWarmUpTimeout","$8796f90736e175cb$var$globalCooldownTimeout","$8796f90736e175cb$export$4d40659c25ecb50b","props","arguments","length","undefined","delay","closeDelay","isOpen","open","close","$50cCT$useOverlayTriggerState","id","$50cCT$useMemo","concat","closeTimeout","$50cCT$useRef","closeCallback","ensureTooltipEntry","hideTooltip","closeOpenTooltips","hideTooltipId","showTooltip","current","clearTimeout","immediate","setTimeout","Math","max","warmupTooltip","$50cCT$useEffect","tooltip"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-stately\\tooltip\\dist\\packages\\@react-stately\\tooltip\\src\\useTooltipTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {useEffect, useMemo, useRef} from 'react';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\n\nconst TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\nconst TOOLTIP_COOLDOWN = 500;\n\nexport interface TooltipTriggerState {\n  /** Whether the tooltip is currently showing. */\n  isOpen: boolean,\n  /**\n   * Shows the tooltip. By default, the tooltip becomes visible after a delay\n   * depending on a global warmup timer. The `immediate` option shows the\n   * tooltip immediately instead.\n   */\n  open(immediate?: boolean): void,\n  /** Hides the tooltip. */\n  close(immediate?: boolean): void\n}\n\nlet tooltips = {};\nlet tooltipId = 0;\nlet globalWarmedUp = false;\nlet globalWarmUpTimeout: ReturnType<typeof setTimeout> | null = null;\nlet globalCooldownTimeout: ReturnType<typeof setTimeout> | null = null;\n\n/**\n * Manages state for a tooltip trigger. Tracks whether the tooltip is open, and provides\n * methods to toggle this state. Ensures only one tooltip is open at a time and controls\n * the delay for showing a tooltip.\n */\nexport function useTooltipTriggerState(props: TooltipTriggerProps = {}): TooltipTriggerState {\n  let {delay = TOOLTIP_DELAY, closeDelay = TOOLTIP_COOLDOWN} = props;\n  let {isOpen, open, close} = useOverlayTriggerState(props);\n  let id = useMemo(() => `${++tooltipId}`, []);\n  let closeTimeout = useRef<ReturnType<typeof setTimeout> | null>(null);\n  let closeCallback = useRef<() => void>(close);\n\n  let ensureTooltipEntry = () => {\n    tooltips[id] = hideTooltip;\n  };\n\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in tooltips) {\n      if (hideTooltipId !== id) {\n        tooltips[hideTooltipId](true);\n        delete tooltips[hideTooltipId];\n      }\n    }\n  };\n\n  let showTooltip = () => {\n    if (closeTimeout.current) {\n      clearTimeout(closeTimeout.current);\n    }\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    globalWarmedUp = true;\n    open();\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalCooldownTimeout) {\n      clearTimeout(globalCooldownTimeout);\n      globalCooldownTimeout = null;\n    }\n  };\n\n  let hideTooltip = (immediate?: boolean) => {\n    if (immediate || closeDelay <= 0) {\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n      closeTimeout.current = null;\n      closeCallback.current();\n    } else if (!closeTimeout.current) {\n      closeTimeout.current = setTimeout(() => {\n        closeTimeout.current = null;\n        closeCallback.current();\n      }, closeDelay);\n    }\n\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalWarmedUp) {\n      if (globalCooldownTimeout) {\n        clearTimeout(globalCooldownTimeout);\n      }\n      globalCooldownTimeout = setTimeout(() => {\n        delete tooltips[id];\n        globalCooldownTimeout = null;\n        globalWarmedUp = false;\n      }, Math.max(TOOLTIP_COOLDOWN, closeDelay));\n    }\n  };\n\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !globalWarmUpTimeout && !globalWarmedUp) {\n      globalWarmUpTimeout = setTimeout(() => {\n        globalWarmUpTimeout = null;\n        globalWarmedUp = true;\n        showTooltip();\n      }, delay);\n    } else if (!isOpen) {\n      showTooltip();\n    }\n  };\n\n  useEffect(() => {\n    closeCallback.current = close;\n  }, [close]);\n\n\n  useEffect(() => {\n    return () => {\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n      let tooltip = tooltips[id];\n      if (tooltip) {\n        delete tooltips[id];\n      }\n    };\n  }, [id]);\n\n  return {\n    isOpen,\n    open: (immediate) => {\n      if (!immediate && delay > 0 && !closeTimeout.current) {\n        warmupTooltip();\n      } else {\n        showTooltip();\n      }\n    },\n    close: hideTooltip\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}