{"ast":null,"code":"'use client';\n\nimport * as PlasmicQuery from '@plasmicapp/query';\nimport * as React from 'react';\nimport React__default, { useState, useCallback, createContext, useContext, isValidElement, cloneElement } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction isString(x) {\n  return typeof x === \"string\";\n}\nfunction ensure(x, msg) {\n  if (msg === void 0) {\n    msg = \"\";\n  }\n  if (x === null || x === undefined) {\n    debugger;\n    msg = (isString(msg) ? msg : msg()) || \"\";\n    throw new Error(\"Value must not be undefined or null\".concat(msg ? \"- \".concat(msg) : \"\"));\n  } else {\n    return x;\n  }\n}\nfunction useForceUpdate() {\n  var _a = useState(0),\n    setTick = _a[1];\n  var update = useCallback(function () {\n    setTick(function (tick) {\n      return tick + 1;\n    });\n  }, []);\n  return update;\n}\nif (globalThis.__PlasmicHostVersion == null) {\n  globalThis.__PlasmicHostVersion = \"3\";\n}\nvar rootChangeListeners = [];\nvar PlasmicRootNodeWrapper = /** @class */function () {\n  function PlasmicRootNodeWrapper(value) {\n    var _this = this;\n    this.value = value;\n    this.set = function (val) {\n      _this.value = val;\n      rootChangeListeners.forEach(function (f) {\n        return f();\n      });\n    };\n    this.get = function () {\n      return _this.value;\n    };\n  }\n  return PlasmicRootNodeWrapper;\n}();\nvar plasmicRootNode = new PlasmicRootNodeWrapper(null);\nfunction getHashParams() {\n  return new URLSearchParams(location.hash.replace(/^#/, \"?\"));\n}\nfunction getPlasmicOrigin() {\n  var params = getHashParams();\n  return ensure(params.get(\"origin\"), \"Missing information from Plasmic window.\");\n}\nfunction getStudioHash() {\n  var hashParams = getHashParams();\n  if (hashParams.has(\"studioHash\")) {\n    return hashParams.get(\"studioHash\");\n  }\n  var urlParams = new URL(location.href).searchParams;\n  return urlParams.get(\"studio-hash\");\n}\nfunction renderStudioIntoIframe() {\n  var script = document.createElement(\"script\");\n  var plasmicOrigin = getPlasmicOrigin();\n  var hash = getStudioHash();\n  script.src = \"\".concat(plasmicOrigin, \"/static/js/studio\").concat(hash ? \".\".concat(hash, \".js\") : \".js\");\n  document.body.appendChild(script);\n}\nvar renderCount = 0;\nfunction setPlasmicRootNode(node) {\n  // Keep track of renderCount, which we use as key to ErrorBoundary, so\n  // we can reset the error on each render\n  renderCount++;\n  plasmicRootNode.set(node);\n}\n/**\n * React context to detect whether the component is rendered on Plasmic editor.\n * If not, return false.\n * If so, return an object with more information about the component\n */\nvar PlasmicCanvasContext = React.createContext(false);\nvar usePlasmicCanvasContext = function () {\n  return React.useContext(PlasmicCanvasContext);\n};\nfunction _PlasmicCanvasHost() {\n  var _a, _b;\n  // If window.parent is null, then this is a window whose containing iframe\n  // has been detached from the DOM (for the top window, window.parent === window).\n  // In that case, we shouldn't do anything.  If window.parent is null, by the way,\n  // location.hash will also be null.\n  var isFrameAttached = !!window.parent;\n  var isCanvas = !!((_a = location.hash) === null || _a === void 0 ? void 0 : _a.match(/\\bcanvas=true\\b/));\n  var isLive = !!((_b = location.hash) === null || _b === void 0 ? void 0 : _b.match(/\\blive=true\\b/)) || !isFrameAttached;\n  var shouldRenderStudio = isFrameAttached && !document.querySelector(\"#plasmic-studio-tag\") && !isCanvas && !isLive;\n  var forceUpdate = useForceUpdate();\n  React.useLayoutEffect(function () {\n    rootChangeListeners.push(forceUpdate);\n    return function () {\n      var index = rootChangeListeners.indexOf(forceUpdate);\n      if (index >= 0) {\n        rootChangeListeners.splice(index, 1);\n      }\n    };\n  }, [forceUpdate]);\n  React.useEffect(function () {\n    if (shouldRenderStudio && isFrameAttached && window.parent !== window) {\n      renderStudioIntoIframe();\n    }\n  }, [shouldRenderStudio, isFrameAttached]);\n  React.useEffect(function () {\n    if (!shouldRenderStudio && !document.querySelector(\"#getlibs\") && isLive) {\n      var scriptElt = document.createElement(\"script\");\n      scriptElt.id = \"getlibs\";\n      scriptElt.src = getPlasmicOrigin() + \"/static/js/getlibs.js\";\n      scriptElt.async = false;\n      scriptElt.onload = function () {\n        var _a, _b;\n        (_b = (_a = window).__GetlibsReadyResolver) === null || _b === void 0 ? void 0 : _b.call(_a);\n      };\n      document.head.append(scriptElt);\n    }\n  }, [shouldRenderStudio]);\n  var _c = React.useState(function () {\n      return deriveCanvasContextValue();\n    }),\n    canvasContextValue = _c[0],\n    setCanvasContextValue = _c[1];\n  React.useEffect(function () {\n    if (isCanvas) {\n      var listener_1 = function () {\n        setCanvasContextValue(deriveCanvasContextValue());\n      };\n      window.addEventListener(\"hashchange\", listener_1);\n      return function () {\n        return window.removeEventListener(\"hashchange\", listener_1);\n      };\n    }\n    return undefined;\n  }, [isCanvas]);\n  if (!isFrameAttached) {\n    return null;\n  }\n  if (isCanvas || isLive) {\n    var appDiv = document.querySelector(\"#plasmic-app.__wab_user-body\");\n    if (!appDiv) {\n      appDiv = document.createElement(\"div\");\n      appDiv.id = \"plasmic-app\";\n      appDiv.classList.add(\"__wab_user-body\");\n      document.body.prepend(appDiv);\n    }\n    return ReactDOM.createPortal(React.createElement(ErrorBoundary, {\n      key: \"\".concat(renderCount)\n    }, React.createElement(PlasmicCanvasContext.Provider, {\n      value: canvasContextValue\n    }, plasmicRootNode.get())), appDiv, \"plasmic-app\");\n  }\n  if (shouldRenderStudio && window.parent === window) {\n    return React.createElement(\"iframe\", {\n      src: \"https://docs.plasmic.app/app-content/app-host-ready#appHostUrl=\".concat(encodeURIComponent(location.href)),\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        border: \"none\",\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: 99999999\n      }\n    });\n  }\n  return null;\n}\nvar PlasmicCanvasHost = function (props) {\n  var enableWebpackHmr = props.enableWebpackHmr;\n  var _a = React.useState(null),\n    node = _a[0],\n    setNode = _a[1];\n  React.useEffect(function () {\n    setNode(React.createElement(_PlasmicCanvasHost, null));\n  }, []);\n  return React.createElement(React.Fragment, null, !enableWebpackHmr && React.createElement(DisableWebpackHmr, null), node);\n};\nvar renderErrorListeners = [];\nfunction registerRenderErrorListener(listener) {\n  renderErrorListeners.push(listener);\n  return function () {\n    var index = renderErrorListeners.indexOf(listener);\n    if (index >= 0) {\n      renderErrorListeners.splice(index, 1);\n    }\n  };\n}\nvar ErrorBoundary = /** @class */function (_super) {\n  __extends(ErrorBoundary, _super);\n  function ErrorBoundary(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {};\n    return _this;\n  }\n  ErrorBoundary.getDerivedStateFromError = function (error) {\n    return {\n      error: error\n    };\n  };\n  ErrorBoundary.prototype.componentDidCatch = function (error) {\n    renderErrorListeners.forEach(function (listener) {\n      return listener(error);\n    });\n  };\n  ErrorBoundary.prototype.render = function () {\n    if (this.state.error) {\n      return React.createElement(\"div\", null, \"Error: \", \"\".concat(this.state.error.message));\n    } else {\n      return React.createElement(React.Fragment, null, this.props.children);\n    }\n  };\n  return ErrorBoundary;\n}(React.Component);\nfunction DisableWebpackHmr() {\n  if (process.env.NODE_ENV === \"production\") {\n    return null;\n  }\n  return React.createElement(\"script\", {\n    type: \"text/javascript\",\n    dangerouslySetInnerHTML: {\n      __html: \"\\n      if (typeof window !== \\\"undefined\\\") {\\n        const RealEventSource = window.EventSource;\\n        window.EventSource = function(url, config) {\\n          if (/[^a-zA-Z]hmr($|[^a-zA-Z])/.test(url)) {\\n            console.warn(\\\"Plasmic: disabled EventSource request for\\\", url);\\n            return {\\n              onerror() {}, onmessage() {}, onopen() {}, close() {}\\n            };\\n          } else {\\n            return new RealEventSource(url, config);\\n          }\\n        }\\n      }\\n      \"\n    }\n  });\n}\nfunction deriveCanvasContextValue() {\n  var _a;\n  var hash = window.location.hash;\n  if (hash && hash.length > 0) {\n    // create URLsearchParams skipping the initial # character\n    var params = new URLSearchParams(hash.substring(1));\n    if (params.get(\"canvas\") === \"true\") {\n      var globalVariants = params.get(\"globalVariants\");\n      return {\n        componentName: (_a = params.get(\"componentName\")) !== null && _a !== void 0 ? _a : null,\n        globalVariants: globalVariants ? JSON.parse(globalVariants) : {},\n        interactive: params.get(\"interactive\") === \"true\"\n      };\n    }\n  }\n  return false;\n}\nvar INTERNAL_CC_CANVAS_SELECTION_PROP = \"__plasmic_selection_prop__\";\nfunction usePlasmicCanvasComponentInfo(props) {\n  return React.useMemo(function () {\n    // Inside Plasmic Studio, code components will receive an additional prop\n    // that contains selection information for that specific code component.\n    // This hook will return that selection information which is useful for\n    // changing the behavior of the code component when it is selected, making\n    // it easier to interact with code components and slots that aren't always\n    // visible in the canvas. (e.g. automatically opening a modal when it's selected)\n    var selectionInfo = props === null || props === void 0 ? void 0 : props[INTERNAL_CC_CANVAS_SELECTION_PROP];\n    if (selectionInfo) {\n      return {\n        isSelected: selectionInfo.isSelected,\n        selectedSlotName: selectionInfo.selectedSlotName\n      };\n    }\n    return null;\n  }, [props]);\n}\nvar tuple = function () {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return args;\n};\nvar DataContext = createContext(undefined);\nfunction mkMetaName(name) {\n  return \"__plasmic_meta_\".concat(name);\n}\nfunction mkMetaValue(meta) {\n  return meta;\n}\nfunction applySelector(rawData, selector) {\n  if (!selector) {\n    return undefined;\n  }\n  var curData = rawData;\n  for (var _i = 0, _a = selector.split(\".\"); _i < _a.length; _i++) {\n    var key = _a[_i];\n    curData = curData === null || curData === void 0 ? void 0 : curData[key];\n  }\n  return curData;\n}\nfunction useSelector(selector) {\n  var rawData = useDataEnv();\n  return applySelector(rawData, selector);\n}\nfunction useSelectors(selectors) {\n  if (selectors === void 0) {\n    selectors = {};\n  }\n  var rawData = useDataEnv();\n  return Object.fromEntries(Object.entries(selectors).filter(function (_a) {\n    var key = _a[0],\n      selector = _a[1];\n    return !!key && !!selector;\n  }).map(function (_a) {\n    var key = _a[0],\n      selector = _a[1];\n    return tuple(key, applySelector(rawData, selector));\n  }));\n}\nfunction useDataEnv() {\n  return useContext(DataContext);\n}\nfunction DataProvider(_a) {\n  var _b;\n  var _c;\n  var name = _a.name,\n    data = _a.data,\n    hidden = _a.hidden,\n    advanced = _a.advanced,\n    label = _a.label,\n    children = _a.children;\n  var existingEnv = (_c = useDataEnv()) !== null && _c !== void 0 ? _c : {};\n  if (!name) {\n    return React__default.createElement(React__default.Fragment, null, children);\n  } else {\n    return React__default.createElement(DataContext.Provider, {\n      value: __assign(__assign({}, existingEnv), (_b = {}, _b[name] = data, _b[mkMetaName(name)] = mkMetaValue({\n        hidden: hidden,\n        advanced: advanced,\n        label: label\n      }), _b))\n    }, children);\n  }\n}\n/**\n * This transforms `{ \"...slug\": \"a/b/c\" }` into `{ \"slug\": [\"a\", \"b\", \"c\"] }.\n */\nfunction fixCatchallParams(params) {\n  var newParams = {};\n  for (var _i = 0, _a = Object.entries(params); _i < _a.length; _i++) {\n    var _b = _a[_i],\n      key = _b[0],\n      value = _b[1];\n    if (!value) {\n      continue;\n    }\n    if (key.startsWith(\"...\")) {\n      newParams[key.slice(3)] = typeof value === \"string\" ? value.replace(/^\\/|\\/$/g, \"\").split(\"/\") : value;\n    } else {\n      newParams[key] = value;\n    }\n  }\n  return newParams;\n}\nfunction mkPathFromRouteAndParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  var path = route;\n  for (var _i = 0, _a = Object.entries(params); _i < _a.length; _i++) {\n    var _b = _a[_i],\n      key = _b[0],\n      value = _b[1];\n    if (typeof value === \"string\") {\n      path = path.replace(\"[\".concat(key, \"]\"), value);\n    } else if (Array.isArray(value)) {\n      if (path.includes(\"[[...\".concat(key, \"]]\"))) {\n        path = path.replace(\"[[...\".concat(key, \"]]\"), value.join(\"/\"));\n      } else if (path.includes(\"[...\".concat(key, \"]\"))) {\n        path = path.replace(\"[...\".concat(key, \"]\"), value.join(\"/\"));\n      }\n    }\n  }\n  return path;\n}\nfunction PageParamsProvider(_a) {\n  var children = _a.children,\n    route = _a.route,\n    deprecatedRoute = _a.path,\n    _b = _a.params,\n    params = _b === void 0 ? {} : _b,\n    _c = _a.query,\n    query = _c === void 0 ? {} : _c;\n  route = route !== null && route !== void 0 ? route : deprecatedRoute;\n  params = fixCatchallParams(params);\n  var $ctx = useDataEnv() || {};\n  var path = route ? mkPathFromRouteAndParams(route, params) : undefined;\n  return React__default.createElement(DataProvider, {\n    name: \"pageRoute\",\n    data: route,\n    label: \"Page route\",\n    advanced: true\n  }, React__default.createElement(DataProvider, {\n    name: \"pagePath\",\n    data: path,\n    label: \"Page path\"\n  }, React__default.createElement(DataProvider, {\n    name: \"params\",\n    data: __assign(__assign({}, $ctx.params), params),\n    label: \"Page URL path params\"\n  }, React__default.createElement(DataProvider, {\n    name: \"query\",\n    data: __assign(__assign({}, $ctx.query), query),\n    label: \"Page URL query params\"\n  }, children))));\n}\nfunction DataCtxReader(_a) {\n  var children = _a.children;\n  var $ctx = useDataEnv();\n  return children($ctx);\n}\nvar root$7 = globalThis;\nroot$7.__PlasmicFetcherRegistry = [];\nfunction registerFetcher(fetcher, meta) {\n  root$7.__PlasmicFetcherRegistry.push({\n    fetcher: fetcher,\n    meta: meta\n  });\n}\nvar GlobalActionsContext = React__default.createContext(undefined);\nfunction GlobalActionsProvider(props) {\n  var contextName = props.contextName,\n    children = props.children,\n    actions = props.actions;\n  var existingActions = useGlobalActions();\n  var namespacedActions = React__default.useMemo(function () {\n    return Object.fromEntries(Object.entries(actions).map(function (_a) {\n      var key = _a[0],\n        val = _a[1];\n      return [\"\".concat(contextName, \".\").concat(key), val];\n    }));\n  }, [contextName, actions]);\n  return React__default.createElement(GlobalActionsContext.Provider, {\n    value: __assign(__assign({}, existingActions), namespacedActions)\n  }, children);\n}\nfunction useGlobalActions() {\n  var _a;\n  return (_a = React__default.useContext(GlobalActionsContext)) !== null && _a !== void 0 ? _a : {};\n}\nvar PlasmicLinkContext = React__default.createContext(undefined);\nfunction usePlasmicLinkMaybe() {\n  return React__default.useContext(PlasmicLinkContext);\n}\nvar AnchorLink = React__default.forwardRef(function AnchorLink(props, ref) {\n  return React__default.createElement(\"a\", __assign({}, props, {\n    ref: ref\n  }));\n});\nfunction usePlasmicLink() {\n  var Link = React__default.useContext(PlasmicLinkContext);\n  if (Link) {\n    return Link;\n  } else {\n    return AnchorLink;\n  }\n}\nfunction PlasmicLinkProvider(props) {\n  var Link = props.Link,\n    children = props.children;\n  return React__default.createElement(PlasmicLinkContext.Provider, {\n    value: Link\n  }, children);\n}\nvar root$6 = globalThis;\n// A compile-time error will occur if a new field is added to the StateHelper\n// interface but not included in the keys array of state helper.\nvar stateHelpersKeys = [\"initFunc\", \"onChangeArgsToValue\", \"onMutate\"];\nif (root$6.__PlasmicComponentRegistry == null) {\n  root$6.__PlasmicComponentRegistry = [];\n}\nfunction registerComponent(component, meta) {\n  // Check for duplicates\n  if (root$6.__PlasmicComponentRegistry.some(function (r) {\n    return r.component === component && r.meta.name === meta.name;\n  })) {\n    return;\n  }\n  root$6.__PlasmicComponentRegistry.push({\n    component: component,\n    meta: meta\n  });\n}\nvar root$5 = globalThis;\nif (root$5.__PlasmicFunctionsRegistry == null) {\n  root$5.__PlasmicFunctionsRegistry = [];\n}\nfunction registerFunction(fn, meta) {\n  // Check for duplicates\n  if (root$5.__PlasmicFunctionsRegistry.some(function (r) {\n    return r.function === fn && r.meta.name === meta.name && r.meta.namespace == meta.namespace;\n  })) {\n    return;\n  }\n  root$5.__PlasmicFunctionsRegistry.push({\n    function: fn,\n    meta: meta\n  });\n}\nvar root$4 = globalThis;\nif (root$4.__PlasmicContextRegistry == null) {\n  root$4.__PlasmicContextRegistry = [];\n}\nfunction registerGlobalContext(component, meta) {\n  // Check for duplicates\n  if (root$4.__PlasmicContextRegistry.some(function (r) {\n    return r.component === component && r.meta.name === meta.name;\n  })) {\n    return;\n  }\n  root$4.__PlasmicContextRegistry.push({\n    component: component,\n    meta: meta\n  });\n}\nvar root$3 = globalThis;\nif (root$3.__PlasmicTokenRegistry == null) {\n  root$3.__PlasmicTokenRegistry = [];\n}\nfunction registerToken(token) {\n  root$3.__PlasmicTokenRegistry.push(token);\n}\nvar root$2 = globalThis;\nif (root$2.__PlasmicTraitRegistry == null) {\n  root$2.__PlasmicTraitRegistry = [];\n}\nfunction registerTrait(trait, meta) {\n  root$2.__PlasmicTraitRegistry.push({\n    trait: trait,\n    meta: meta\n  });\n}\nvar _a$1, _b;\nfunction repeatedElement(index, elt) {\n  return repeatedElementFn(index, elt);\n}\nvar repeatedElementFn = function (index, elt) {\n  if (Array.isArray(elt)) {\n    return elt.map(function (v) {\n      return repeatedElementFn(index, v);\n    });\n  }\n  if (elt && isValidElement(elt) && typeof elt !== \"string\") {\n    return cloneElement(elt);\n  }\n  return elt;\n};\nvar root$1 = globalThis;\nvar setRepeatedElementFn = (_b = (_a$1 = root$1 === null || root$1 === void 0 ? void 0 : root$1.__Sub) === null || _a$1 === void 0 ? void 0 : _a$1.setRepeatedElementFn) !== null && _b !== void 0 ? _b : function (fn) {\n  repeatedElementFn = fn;\n};\nvar PlasmicTranslatorContext = React__default.createContext(undefined);\nfunction usePlasmicTranslator() {\n  var _t = React__default.useContext(PlasmicTranslatorContext);\n  var translator = _t ? typeof _t === \"function\" ? _t : _t.translator : undefined;\n  return translator;\n}\nvar hostModule = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataContext: DataContext,\n  DataCtxReader: DataCtxReader,\n  DataProvider: DataProvider,\n  GlobalActionsContext: GlobalActionsContext,\n  GlobalActionsProvider: GlobalActionsProvider,\n  PageParamsProvider: PageParamsProvider,\n  PlasmicCanvasContext: PlasmicCanvasContext,\n  PlasmicCanvasHost: PlasmicCanvasHost,\n  PlasmicLinkProvider: PlasmicLinkProvider,\n  PlasmicTranslatorContext: PlasmicTranslatorContext,\n  applySelector: applySelector,\n  mkMetaName: mkMetaName,\n  mkMetaValue: mkMetaValue,\n  registerComponent: registerComponent,\n  registerFunction: registerFunction,\n  registerGlobalContext: registerGlobalContext,\n  registerToken: registerToken,\n  registerTrait: registerTrait,\n  repeatedElement: repeatedElement,\n  stateHelpersKeys: stateHelpersKeys,\n  unstable_registerFetcher: registerFetcher,\n  useDataEnv: useDataEnv,\n  useGlobalActions: useGlobalActions,\n  usePlasmicCanvasComponentInfo: usePlasmicCanvasComponentInfo,\n  usePlasmicCanvasContext: usePlasmicCanvasContext,\n  usePlasmicLink: usePlasmicLink,\n  usePlasmicLinkMaybe: usePlasmicLinkMaybe,\n  usePlasmicTranslator: usePlasmicTranslator,\n  useSelector: useSelector,\n  useSelectors: useSelectors\n});\nvar hostVersion = \"1.0.208\";\nvar _a;\nvar root = globalThis;\nif (root.__Sub == null) {\n  // Creating a side effect here by logging, so that vite won't\n  // ignore this block for whatever reason. Hiding this for now\n  // as users are complaining; will have to check if this has\n  // been fixed with vite.\n  // console.log(\"Plasmic: Setting up app host dependencies\");\n  root.__Sub = __assign({\n    React: React,\n    ReactDOM: ReactDOM,\n    PlasmicQuery: PlasmicQuery,\n    hostModule: hostModule,\n    hostVersion: hostVersion,\n    hostUtils: {\n      setPlasmicRootNode: setPlasmicRootNode,\n      registerRenderErrorListener: registerRenderErrorListener,\n      setRepeatedElementFn: setRepeatedElementFn\n    },\n    // For backwards compatibility:\n    setPlasmicRootNode: setPlasmicRootNode,\n    registerRenderErrorListener: registerRenderErrorListener,\n    setRepeatedElementFn: setRepeatedElementFn\n  }, hostModule);\n} else {\n  console.warn(\"Encountered likely duplicate host version: \".concat(root.__Sub.hostVersion, \" vs \").concat(hostVersion));\n  root.__Sub.duplicateHostVersions = (_a = root.__Sub.duplicateHostVersions) !== null && _a !== void 0 ? _a : [];\n  root.__Sub.duplicateHostVersions.push(hostVersion);\n}\nexport { DataContext, DataCtxReader, DataProvider, GlobalActionsContext, GlobalActionsProvider, PageParamsProvider, PlasmicCanvasContext, PlasmicCanvasHost, PlasmicLinkProvider, PlasmicTranslatorContext, applySelector, mkMetaName, mkMetaValue, registerComponent, registerFunction, registerGlobalContext, registerToken, registerTrait, repeatedElement, stateHelpersKeys, registerFetcher as unstable_registerFetcher, useDataEnv, useGlobalActions, usePlasmicCanvasComponentInfo, usePlasmicCanvasContext, usePlasmicLink, usePlasmicLinkMaybe, usePlasmicTranslator, useSelector, useSelectors };","map":{"version":3,"names":["isString","x","ensure","msg","undefined","Error","concat","useForceUpdate","_a","useState","setTick","update","useCallback","tick","globalThis","__PlasmicHostVersion","rootChangeListeners","PlasmicRootNodeWrapper","value","_this","set","val","forEach","f","get","plasmicRootNode","getHashParams","URLSearchParams","location","hash","replace","getPlasmicOrigin","params","getStudioHash","hashParams","has","urlParams","URL","href","searchParams","renderStudioIntoIframe","script","document","createElement","plasmicOrigin","src","body","appendChild","renderCount","setPlasmicRootNode","node","PlasmicCanvasContext","React","createContext","usePlasmicCanvasContext","useContext","_PlasmicCanvasHost","isFrameAttached","window","parent","isCanvas","match","isLive","_b","shouldRenderStudio","querySelector","forceUpdate","useLayoutEffect","push","index","indexOf","splice","useEffect","scriptElt","id","async","onload","__GetlibsReadyResolver","call","head","append","_c","deriveCanvasContextValue","canvasContextValue","setCanvasContextValue","listener_1","addEventListener","removeEventListener","appDiv","classList","add","prepend","ReactDOM","createPortal","ErrorBoundary","key","Provider","encodeURIComponent","style","width","height","border","position","top","left","zIndex","PlasmicCanvasHost","props","enableWebpackHmr","setNode","Fragment","DisableWebpackHmr","renderErrorListeners","registerRenderErrorListener","listener","_super","__extends","state","getDerivedStateFromError","error","prototype","componentDidCatch","render","message","children","Component","process","env","NODE_ENV","type","dangerouslySetInnerHTML","__html","length","substring","globalVariants","componentName","JSON","parse","interactive","INTERNAL_CC_CANVAS_SELECTION_PROP","usePlasmicCanvasComponentInfo","useMemo","selectionInfo","isSelected","selectedSlotName","tuple","args","_i","arguments","DataContext","mkMetaName","name","mkMetaValue","meta","applySelector","rawData","selector","curData","split","useSelector","useDataEnv","useSelectors","selectors","Object","fromEntries","entries","filter","map","DataProvider","data","hidden","advanced","label","existingEnv","React__default","__assign","fixCatchallParams","newParams","startsWith","slice","mkPathFromRouteAndParams","route","path","Array","isArray","includes","join","PageParamsProvider","deprecatedRoute","query","$ctx","DataCtxReader","root$7","__PlasmicFetcherRegistry","registerFetcher","fetcher","GlobalActionsContext","GlobalActionsProvider","contextName","actions","existingActions","useGlobalActions","namespacedActions","PlasmicLinkContext","usePlasmicLinkMaybe","AnchorLink","forwardRef","ref","usePlasmicLink","Link","PlasmicLinkProvider","root$6","stateHelpersKeys","__PlasmicComponentRegistry","registerComponent","component","some","r","root$5","__PlasmicFunctionsRegistry","registerFunction","fn","function","namespace","root$4","__PlasmicContextRegistry","registerGlobalContext","root$3","__PlasmicTokenRegistry","registerToken","token","root$2","__PlasmicTraitRegistry","registerTrait","trait","repeatedElement","elt","repeatedElementFn","v","isValidElement","cloneElement","root$1","setRepeatedElementFn","_a$1","__Sub","PlasmicTranslatorContext","usePlasmicTranslator","_t","translator","hostVersion","root","PlasmicQuery","hostModule","hostUtils","console","warn","duplicateHostVersions"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\lang-utils.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\useForceUpdate.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\canvas-host.tsx","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\common.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\data.tsx","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\fetcher.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\global-actions.tsx","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\link.tsx","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\registerComponent.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\registerFunction.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\registerGlobalContext.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\registerToken.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\registerTrait.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\repeatedElement.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\translation.tsx","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\version.ts","C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\host\\src\\index.ts"],"sourcesContent":["function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\ntype StringGen = string | (() => string);\n\nexport function ensure<T>(x: T | null | undefined, msg: StringGen = \"\"): T {\n  if (x === null || x === undefined) {\n    debugger;\n    msg = (isString(msg) ? msg : msg()) || \"\";\n    throw new Error(\n      `Value must not be undefined or null${msg ? `- ${msg}` : \"\"}`\n    );\n  } else {\n    return x;\n  }\n}\n","import { useCallback, useState } from \"react\";\n\nexport default function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick((tick) => tick + 1);\n  }, []);\n  return update;\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ensure } from \"./lang-utils\";\nimport useForceUpdate from \"./useForceUpdate\";\n\ndeclare global {\n  interface Window {\n    __PlasmicHostVersion: string;\n  }\n}\n\nif ((globalThis as any).__PlasmicHostVersion == null) {\n  (globalThis as any).__PlasmicHostVersion = \"3\";\n}\n\nconst rootChangeListeners: (() => void)[] = [];\nclass PlasmicRootNodeWrapper {\n  constructor(private value: null | React.ReactElement) {}\n  set = (val: null | React.ReactElement) => {\n    this.value = val;\n    rootChangeListeners.forEach((f) => f());\n  };\n  get = () => this.value;\n}\n\nconst plasmicRootNode = new PlasmicRootNodeWrapper(null);\n\nfunction getHashParams() {\n  return new URLSearchParams(location.hash.replace(/^#/, \"?\"));\n}\n\nfunction getPlasmicOrigin() {\n  const params = getHashParams();\n  return ensure(\n    params.get(\"origin\"),\n    \"Missing information from Plasmic window.\"\n  );\n}\n\nfunction getStudioHash() {\n  const hashParams = getHashParams();\n  if (hashParams.has(\"studioHash\")) {\n    return hashParams.get(\"studioHash\");\n  }\n  const urlParams = new URL(location.href).searchParams;\n  return urlParams.get(\"studio-hash\");\n}\n\nfunction renderStudioIntoIframe() {\n  const script = document.createElement(\"script\");\n  const plasmicOrigin = getPlasmicOrigin();\n  const hash = getStudioHash();\n  script.src = `${plasmicOrigin}/static/js/studio${\n    hash ? `.${hash}.js` : `.js`\n  }`;\n  document.body.appendChild(script);\n}\n\nlet renderCount = 0;\nexport function setPlasmicRootNode(node: React.ReactElement | null) {\n  // Keep track of renderCount, which we use as key to ErrorBoundary, so\n  // we can reset the error on each render\n  renderCount++;\n  plasmicRootNode.set(node);\n}\n\nexport interface PlasmicCanvasContextValue {\n  componentName: string | null;\n  globalVariants: Record<string, string>;\n  interactive?: boolean;\n}\n\n/**\n * React context to detect whether the component is rendered on Plasmic editor.\n * If not, return false.\n * If so, return an object with more information about the component\n */\nexport const PlasmicCanvasContext = React.createContext<\n  PlasmicCanvasContextValue | false\n>(false);\nexport const usePlasmicCanvasContext = () =>\n  React.useContext(PlasmicCanvasContext);\n\nfunction _PlasmicCanvasHost() {\n  // If window.parent is null, then this is a window whose containing iframe\n  // has been detached from the DOM (for the top window, window.parent === window).\n  // In that case, we shouldn't do anything.  If window.parent is null, by the way,\n  // location.hash will also be null.\n  const isFrameAttached = !!window.parent;\n  const isCanvas = !!location.hash?.match(/\\bcanvas=true\\b/);\n  const isLive = !!location.hash?.match(/\\blive=true\\b/) || !isFrameAttached;\n  const shouldRenderStudio =\n    isFrameAttached &&\n    !document.querySelector(\"#plasmic-studio-tag\") &&\n    !isCanvas &&\n    !isLive;\n  const forceUpdate = useForceUpdate();\n  React.useLayoutEffect(() => {\n    rootChangeListeners.push(forceUpdate);\n    return () => {\n      const index = rootChangeListeners.indexOf(forceUpdate);\n      if (index >= 0) {\n        rootChangeListeners.splice(index, 1);\n      }\n    };\n  }, [forceUpdate]);\n  React.useEffect(() => {\n    if (shouldRenderStudio && isFrameAttached && window.parent !== window) {\n      renderStudioIntoIframe();\n    }\n  }, [shouldRenderStudio, isFrameAttached]);\n  React.useEffect(() => {\n    if (!shouldRenderStudio && !document.querySelector(\"#getlibs\") && isLive) {\n      const scriptElt = document.createElement(\"script\");\n      scriptElt.id = \"getlibs\";\n      scriptElt.src = getPlasmicOrigin() + \"/static/js/getlibs.js\";\n      scriptElt.async = false;\n      scriptElt.onload = () => {\n        (window as any).__GetlibsReadyResolver?.();\n      };\n      document.head.append(scriptElt);\n    }\n  }, [shouldRenderStudio]);\n\n  const [canvasContextValue, setCanvasContextValue] = React.useState(() =>\n    deriveCanvasContextValue()\n  );\n\n  React.useEffect(() => {\n    if (isCanvas) {\n      const listener = () => {\n        setCanvasContextValue(deriveCanvasContextValue());\n      };\n      window.addEventListener(\"hashchange\", listener);\n      return () => window.removeEventListener(\"hashchange\", listener);\n    }\n    return undefined;\n  }, [isCanvas]);\n  if (!isFrameAttached) {\n    return null;\n  }\n  if (isCanvas || isLive) {\n    let appDiv = document.querySelector(\"#plasmic-app.__wab_user-body\");\n    if (!appDiv) {\n      appDiv = document.createElement(\"div\");\n      appDiv.id = \"plasmic-app\";\n      appDiv.classList.add(\"__wab_user-body\");\n      document.body.prepend(appDiv);\n    }\n    return ReactDOM.createPortal(\n      <ErrorBoundary key={`${renderCount}`}>\n        <PlasmicCanvasContext.Provider value={canvasContextValue}>\n          {plasmicRootNode.get()}\n        </PlasmicCanvasContext.Provider>\n      </ErrorBoundary>,\n      appDiv,\n      \"plasmic-app\"\n    );\n  }\n  if (shouldRenderStudio && window.parent === window) {\n    return (\n      <iframe\n        src={`https://docs.plasmic.app/app-content/app-host-ready#appHostUrl=${encodeURIComponent(\n          location.href\n        )}`}\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          border: \"none\",\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          zIndex: 99999999,\n        }}\n      ></iframe>\n    );\n  }\n  return null;\n}\n\ninterface PlasmicCanvasHostProps {\n  /**\n   * Webpack hmr uses EventSource to\tlisten to hot reloads, but that\n   * resultsin a persistent\tconnection from\teach window.  In Plasmic\n   * Studio, if a project is configured to use app-hosting with a\n   * nextjs or gatsby server running in dev mode, each artboard will\n   * be holding a persistent connection to the dev server.\n   * Because browsers\thave a limit to\thow many connections can\n   * be held\tat a time by domain, this means\tafter X\tartboards, new\n   * artboards will freeze and not load.\n   *\n   * By default, <PlasmicCanvasHost /> will globally mutate\n   * window.EventSource to avoid using EventSource for HMR, which you\n   * typically don't need for your custom host page.  If you do still\n   * want to retain HRM, then youc an pass enableWebpackHmr={true}.\n   */\n  enableWebpackHmr?: boolean;\n}\n\nexport const PlasmicCanvasHost: React.FunctionComponent<\n  PlasmicCanvasHostProps\n> = (props) => {\n  const { enableWebpackHmr } = props;\n  const [node, setNode] = React.useState<React.ReactElement<any, any> | null>(\n    null\n  );\n  React.useEffect(() => {\n    setNode(<_PlasmicCanvasHost />);\n  }, []);\n  return (\n    <>\n      {!enableWebpackHmr && <DisableWebpackHmr />}\n      {node}\n    </>\n  );\n};\n\ntype RenderErrorListener = (err: Error) => void;\nconst renderErrorListeners: RenderErrorListener[] = [];\nexport function registerRenderErrorListener(listener: RenderErrorListener) {\n  renderErrorListeners.push(listener);\n  return () => {\n    const index = renderErrorListeners.indexOf(listener);\n    if (index >= 0) {\n      renderErrorListeners.splice(index, 1);\n    }\n  };\n}\n\ninterface ErrorBoundaryProps {\n  children?: React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n}\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  componentDidCatch(error: Error) {\n    renderErrorListeners.forEach((listener) => listener(error));\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {`${this.state.error.message}`}</div>;\n    } else {\n      return <>{this.props.children}</>;\n    }\n  }\n}\n\nfunction DisableWebpackHmr() {\n  if (process.env.NODE_ENV === \"production\") {\n    return null;\n  }\n  return (\n    <script\n      type=\"text/javascript\"\n      dangerouslySetInnerHTML={{\n        __html: `\n      if (typeof window !== \"undefined\") {\n        const RealEventSource = window.EventSource;\n        window.EventSource = function(url, config) {\n          if (/[^a-zA-Z]hmr($|[^a-zA-Z])/.test(url)) {\n            console.warn(\"Plasmic: disabled EventSource request for\", url);\n            return {\n              onerror() {}, onmessage() {}, onopen() {}, close() {}\n            };\n          } else {\n            return new RealEventSource(url, config);\n          }\n        }\n      }\n      `,\n      }}\n    ></script>\n  );\n}\n\nfunction deriveCanvasContextValue(): PlasmicCanvasContextValue | false {\n  const hash = window.location.hash;\n  if (hash && hash.length > 0) {\n    // create URLsearchParams skipping the initial # character\n    const params = new URLSearchParams(hash.substring(1));\n    if (params.get(\"canvas\") === \"true\") {\n      const globalVariants = params.get(\"globalVariants\");\n      return {\n        componentName: params.get(\"componentName\") ?? null,\n        globalVariants: globalVariants ? JSON.parse(globalVariants) : {},\n        interactive: params.get(\"interactive\") === \"true\",\n      };\n    }\n  }\n  return false;\n}\n\nconst INTERNAL_CC_CANVAS_SELECTION_PROP = \"__plasmic_selection_prop__\";\n\nexport function usePlasmicCanvasComponentInfo(props: any) {\n  return React.useMemo(() => {\n    // Inside Plasmic Studio, code components will receive an additional prop\n    // that contains selection information for that specific code component.\n    // This hook will return that selection information which is useful for\n    // changing the behavior of the code component when it is selected, making\n    // it easier to interact with code components and slots that aren't always\n    // visible in the canvas. (e.g. automatically opening a modal when it's selected)\n    const selectionInfo = props?.[INTERNAL_CC_CANVAS_SELECTION_PROP];\n    if (selectionInfo) {\n      return {\n        isSelected: selectionInfo.isSelected as boolean,\n        selectedSlotName: selectionInfo.selectedSlotName as string | undefined,\n      };\n    }\n    return null;\n  }, [props]);\n}\n","export const tuple = <T extends any[]>(...args: T): T => args;\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { tuple } from \"./common\";\n\nexport type DataDict = Record<string, any>;\n\nexport const DataContext = createContext<DataDict | undefined>(undefined);\n\nexport type DataMeta = {\n  advanced?: boolean;\n  hidden?: boolean;\n  label?: string;\n};\n\nexport function mkMetaName(name: string) {\n  return `__plasmic_meta_${name}`;\n}\n\nexport function mkMetaValue(meta: Partial<DataMeta>): DataMeta {\n  return meta;\n}\n\nexport function applySelector(\n  rawData: DataDict | undefined,\n  selector: string | undefined\n): any {\n  if (!selector) {\n    return undefined;\n  }\n  let curData = rawData;\n  for (const key of selector.split(\".\")) {\n    curData = curData?.[key];\n  }\n  return curData;\n}\n\nexport type SelectorDict = Record<string, string | undefined>;\n\nexport function useSelector(selector: string | undefined): any {\n  const rawData = useDataEnv();\n  return applySelector(rawData, selector);\n}\n\nexport function useSelectors(selectors: SelectorDict = {}): any {\n  const rawData = useDataEnv();\n  return Object.fromEntries(\n    Object.entries(selectors)\n      .filter(([key, selector]) => !!key && !!selector)\n      .map(([key, selector]) => tuple(key, applySelector(rawData, selector)))\n  );\n}\n\nexport function useDataEnv() {\n  return useContext(DataContext);\n}\n\nexport interface DataProviderProps {\n  /**\n   * Key to set in data context.\n   */\n  name?: string;\n  /**\n   * Value to set for `name` in data context.\n   */\n  data?: any;\n  /**\n   * If true, hide this item in studio data picker.\n   */\n  hidden?: boolean;\n  /**\n   * If true, mark this item as advanced in studio.\n   */\n  advanced?: boolean;\n  /**\n   * Label to be shown in the studio data picker for easier navigation (data binding).\n   */\n  label?: string;\n  children?: ReactNode;\n}\n\nexport function DataProvider({\n  name,\n  data,\n  hidden,\n  advanced,\n  label,\n  children,\n}: DataProviderProps) {\n  const existingEnv = useDataEnv() ?? {};\n  if (!name) {\n    return <>{children}</>;\n  } else {\n    return (\n      <DataContext.Provider\n        value={{\n          ...existingEnv,\n          [name]: data,\n          [mkMetaName(name)]: mkMetaValue({ hidden, advanced, label }),\n        }}\n      >\n        {children}\n      </DataContext.Provider>\n    );\n  }\n}\n\n/**\n * This transforms `{ \"...slug\": \"a/b/c\" }` into `{ \"slug\": [\"a\", \"b\", \"c\"] }.\n */\nfunction fixCatchallParams(\n  params: Record<string, string | string[] | undefined>\n) {\n  const newParams: Record<string, string | string[]> = {};\n  for (const [key, value] of Object.entries(params)) {\n    if (!value) {\n      continue;\n    }\n    if (key.startsWith(\"...\")) {\n      newParams[key.slice(3)] =\n        typeof value === \"string\"\n          ? value.replace(/^\\/|\\/$/g, \"\").split(\"/\")\n          : value;\n    } else {\n      newParams[key] = value;\n    }\n  }\n  return newParams;\n}\n\nfunction mkPathFromRouteAndParams(\n  route: string,\n  params: Record<string, string | string[] | undefined>\n) {\n  if (!params) {\n    return route;\n  }\n  let path = route;\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === \"string\") {\n      path = path.replace(`[${key}]`, value);\n    } else if (Array.isArray(value)) {\n      if (path.includes(`[[...${key}]]`)) {\n        path = path.replace(`[[...${key}]]`, value.join(\"/\"));\n      } else if (path.includes(`[...${key}]`)) {\n        path = path.replace(`[...${key}]`, value.join(\"/\"));\n      }\n    }\n  }\n  return path;\n}\n\nexport interface PageParamsProviderProps {\n  children?: ReactNode;\n\n  /**\n   * Page route without params substituted (e.g. /products/[slug]).\n   */\n  route?: string;\n\n  /**\n   * Page params (e.g. { slug: \"jacket\" })\n   */\n  params?: Record<string, string | string[] | undefined>;\n\n  /**\n   * Page query params (e.g. { q: \"search term\" })\n   */\n  query?: Record<string, string | string[] | undefined>;\n\n  /**\n   * @deprecated Use `route` instead.\n   */\n  path?: string;\n}\n\nexport function PageParamsProvider({\n  children,\n  route,\n  path: deprecatedRoute,\n  params = {},\n  query = {},\n}: PageParamsProviderProps) {\n  route = route ?? deprecatedRoute;\n  params = fixCatchallParams(params);\n  const $ctx = useDataEnv() || {};\n  const path = route ? mkPathFromRouteAndParams(route, params) : undefined;\n  return (\n    <DataProvider\n      name={\"pageRoute\"}\n      data={route}\n      label={\"Page route\"}\n      advanced={true}\n    >\n      <DataProvider name={\"pagePath\"} data={path} label={\"Page path\"}>\n        <DataProvider\n          name={\"params\"}\n          data={{ ...$ctx.params, ...params }}\n          label={\"Page URL path params\"}\n        >\n          <DataProvider\n            name={\"query\"}\n            data={{ ...$ctx.query, ...query }}\n            label={\"Page URL query params\"}\n          >\n            {children}\n          </DataProvider>\n        </DataProvider>\n      </DataProvider>\n    </DataProvider>\n  );\n}\n\nexport function DataCtxReader({\n  children,\n}: {\n  children: ($ctx: DataDict | undefined) => ReactNode;\n}) {\n  const $ctx = useDataEnv();\n  return children($ctx) as ReactElement | null;\n}\n","import { PrimitiveType } from \"./prop-types\";\n\nconst root = globalThis as any;\n\nexport type Fetcher = (...args: any[]) => Promise<any>;\n\nexport interface FetcherMeta {\n  /**\n   * Any unique identifying string for this fetcher.\n   */\n  name: string;\n  /**\n   * The Studio-user-friendly display name.\n   */\n  displayName?: string;\n  /**\n   * The symbol to import from the importPath.\n   */\n  importName?: string;\n  args: { name: string; type: PrimitiveType }[];\n  returns: PrimitiveType;\n  /**\n   * Either the path to the fetcher relative to `rootDir` or the npm\n   * package name\n   */\n  importPath: string;\n  /**\n   * Whether it's a default export or named export\n   */\n  isDefaultExport?: boolean;\n}\n\nexport interface FetcherRegistration {\n  fetcher: Fetcher;\n  meta: FetcherMeta;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicFetcherRegistry: FetcherRegistration[];\n  }\n}\n\nroot.__PlasmicFetcherRegistry = [];\n\nexport function registerFetcher(fetcher: Fetcher, meta: FetcherMeta) {\n  root.__PlasmicFetcherRegistry.push({ fetcher, meta });\n}\n","import React from \"react\";\n\nexport type GlobalActionDict = Record<string, Function>;\n\nexport const GlobalActionsContext = React.createContext<\n  GlobalActionDict | undefined\n>(undefined);\n\nexport function GlobalActionsProvider(props: {\n  contextName: string;\n  children?: React.ReactNode;\n  actions: GlobalActionDict;\n}) {\n  const { contextName, children, actions } = props;\n  const existingActions = useGlobalActions();\n  const namespacedActions = React.useMemo(\n    () =>\n      Object.fromEntries(\n        Object.entries(actions).map(([key, val]) => [\n          `${contextName}.${key}`,\n          val,\n        ])\n      ),\n    [contextName, actions]\n  );\n  return (\n    <GlobalActionsContext.Provider\n      value={{\n        ...existingActions,\n        ...namespacedActions,\n      }}\n    >\n      {children}\n    </GlobalActionsContext.Provider>\n  );\n}\n\nexport function useGlobalActions() {\n  return React.useContext(GlobalActionsContext) ?? {};\n}\n","import React from \"react\";\n\nconst PlasmicLinkContext = React.createContext<\n  React.ComponentType<any> | undefined\n>(undefined);\n\nexport function usePlasmicLinkMaybe():\n  | React.ComponentType<React.ComponentProps<\"a\">>\n  | undefined {\n  return React.useContext(PlasmicLinkContext);\n}\n\nconst AnchorLink = React.forwardRef(function AnchorLink(\n  props: React.ComponentProps<\"a\">,\n  ref: React.Ref<HTMLAnchorElement>\n) {\n  return <a {...props} ref={ref} />;\n});\n\nexport function usePlasmicLink(): React.ComponentType<\n  React.ComponentProps<\"a\">\n> {\n  const Link = React.useContext(PlasmicLinkContext);\n  if (Link) {\n    return Link;\n  } else {\n    return AnchorLink as React.ComponentType<React.ComponentProps<\"a\">>;\n  }\n}\n\nexport function PlasmicLinkProvider(props: {\n  Link: React.ComponentType<any> | undefined;\n  children?: React.ReactNode;\n}) {\n  const { Link, children } = props;\n  return (\n    <PlasmicLinkContext.Provider value={Link}>\n      {children}\n    </PlasmicLinkContext.Provider>\n  );\n}\n","import { CodeComponentElement, CSSProperties } from \"./element-types\";\nimport {\n  ContextDependentConfig,\n  InferDataType,\n  ProjectData,\n  PropType,\n  RestrictPropType,\n  StudioOps,\n} from \"./prop-types\";\nimport { TupleUnion } from \"./type-utils\";\nexport type * from \"./prop-types\";\n\nconst root = globalThis as any;\n\nexport interface ActionProps<P> {\n  componentProps: P;\n  /**\n   * `contextData` can be `null` if the prop controls are rendering before\n   * the component instance itself (it will re-render once the component\n   * calls `setControlContextData`)\n   */\n  contextData: InferDataType<P> | null;\n  /**\n   * Operations available to the editor that allow modifying the entire component.\n   */\n  studioOps: StudioOps;\n  /**\n   * Metadata from the studio project.\n   */\n  projectData: ProjectData;\n  /**\n   * The document that the component will be rendered into; instead of using\n   * `document` directly (for, say, `document.querySelector()` etc.), you\n   * should use this instead.\n   */\n  studioDocument: typeof document;\n}\n\nexport type Action<P> =\n  | {\n      type: \"button-action\";\n      label: string;\n      onClick: (props: ActionProps<P>) => void;\n      hidden?: ContextDependentConfig<P, boolean>;\n    }\n  | {\n      type: \"custom-action\";\n      control: React.ComponentType<ActionProps<P>>;\n      hidden?: ContextDependentConfig<P, boolean>;\n    };\n\ntype DistributedKeyOf<T> = T extends any ? keyof T : never;\n\ninterface ComponentTemplate<P>\n  extends Omit<CodeComponentElement<P>, \"type\" | \"name\"> {\n  /**\n   * A preview picture for the template.\n   */\n  previewImg?: string;\n}\n\nexport interface ComponentTemplates<P> {\n  [name: string]: ComponentTemplate<P>;\n}\n\nexport type StateSpec<P> = {\n  onChangeProp: string;\n\n  /**\n   * If true, will hide the state on studio.\n   */\n  hidden?: ContextDependentConfig<P, boolean>;\n\n  /**\n   * If true, will hide the state in a collapsed section; good for states that\n   * should not usually be used.\n   */\n  advanced?: ContextDependentConfig<P, boolean>;\n} & (\n  | {\n      type: \"readonly\";\n      variableType: \"text\";\n      initVal?: string;\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"number\";\n      initVal?: number;\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"boolean\";\n      initVal?: boolean;\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"array\";\n      initVal?: any[];\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"object\";\n      initVal?: object;\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"dateString\";\n      initVal?: string;\n    }\n  | {\n      type: \"readonly\";\n      variableType: \"dateRangeStrings\";\n      initVal?: [string, string];\n    }\n  | {\n      type: \"writable\";\n      variableType:\n        | \"text\"\n        | \"number\"\n        | \"boolean\"\n        | \"array\"\n        | \"object\"\n        | \"dateString\"\n        | \"dateRangeStrings\";\n      valueProp: string;\n    }\n);\n\nexport interface StateHelpers<P, T> {\n  initFunc?: ($props: P) => T;\n  onChangeArgsToValue?: (...args: any) => T;\n  onMutate?: (stateValue: T, $ref: any) => void;\n}\n\n// A compile-time error will occur if a new field is added to the StateHelper\n// interface but not included in the keys array of state helper.\nexport const stateHelpersKeys: TupleUnion<keyof StateHelpers<any, any>> = [\n  \"initFunc\",\n  \"onChangeArgsToValue\",\n  \"onMutate\",\n];\n\nexport type ComponentHelpers<P> = {\n  states: Record<string, StateHelpers<P, any>>;\n};\n\nexport type ExternalComponentHelpers<P> = {\n  helpers: ComponentHelpers<P>;\n  importPath: string;\n} & (\n  | {\n      importName: string;\n    }\n  | {\n      isDefaultExport: true;\n    }\n);\n\nexport type StyleSection =\n  | \"visibility\"\n  | \"typography\"\n  | \"sizing\"\n  | \"spacing\"\n  | \"background\"\n  | \"transform\"\n  | \"transitions\"\n  | \"layout\"\n  | \"overflow\"\n  | \"border\"\n  | \"shadows\"\n  | \"effects\";\n\nexport interface CodeComponentMeta<P> {\n  /**\n   * Any unique string name used to identify that component. Each component\n   * should be registered with a different `meta.name`, even if they have the\n   * same name in the code.\n   */\n  name: string;\n  /**\n   * The name to be displayed for the component in Studio. Optional: if not\n   * specified, `meta.name` is used.\n   */\n  displayName?: string;\n  /**\n   * The description of the component to be shown in Studio.\n   */\n  description?: string;\n  /**\n   * A specific section to which the component should be displayed in Studio. By default, the component will be displayed in the \"Custom Components\" section.\n   * A new section will be created to display the components with the same `section` value.\n   */\n  section?: string;\n  /**\n   * A link to an image that will be displayed as a thumbnail of the component in the Studio, if the component has a `section` specified.\n   */\n  thumbnailUrl?: string;\n  /**\n   * The javascript name to be used when generating code. Optional: if not\n   * provided, `meta.name` is used.\n   */\n  importName?: string;\n  /**\n   * An object describing the component properties to be used in Studio.\n   * For each `prop`, there should be an entry `meta.props[prop]` describing\n   * its type.\n   */\n  props: { [prop in DistributedKeyOf<P>]?: RestrictPropType<P[prop], P> } & {\n    [prop: string]: PropType<P>;\n  };\n  /**\n   * An object describing the component states to be used in Studio.\n   */\n  states?: Record<string, StateSpec<P>>;\n  /**\n   * An object describing the components helpers to be used in Studio.\n   *   1. states helpers: Each state can receive an \"initFunc\" prop to initialize\n   *      the implicit state in Studio, and an \"onChangeArgsToValue\" prop to\n   *      transform the event handler arguments into a value\n   */\n  componentHelpers?: ExternalComponentHelpers<P>;\n  /**\n   * An array describing the component actions to be used in Studio.\n   */\n  actions?: Action<P>[];\n  /**\n   * Whether style sections should be shown in Studio. For styles to work, the\n   * component must accept a `className` prop. If unset, defaults to all styles.\n   * Set to `false` if this component cannot be styled (for example, if it doesn't\n   * render any DOM elements).\n   */\n  styleSections?: StyleSection[] | boolean;\n  /**\n   * Whether the element can be repeated in Studio. If unset, defaults to true.\n   */\n  isRepeatable?: boolean;\n  /**\n   * The path to be used when importing the component in the generated code.\n   * It can be the name of the package that contains the component, or the path\n   * to the file in the project (relative to the root directory).\n   */\n  importPath: string;\n  /**\n   *  Whether the component is the default export from that path. Optional: if\n   * not specified, it's considered `false`.\n   */\n  isDefaultExport?: boolean;\n  /**\n   * The prop that expects the CSS classes with styles to be applied to the\n   * component. Optional: if not specified, Plasmic will expect it to be\n   * `className`. Notice that if the component does not accept CSS classes, the\n   * component will not be able to receive styles from the Studio.\n   */\n  classNameProp?: string;\n  /**\n   * The prop that receives and forwards a React `ref`. Plasmic only uses `ref`\n   * to interact with components, so it's not used in the generated code.\n   * Optional: If not provided, the usual `ref` is used.\n   */\n  refProp?: string;\n  /**\n   * Default styles to start with when instantiating the component in Plasmic.\n   */\n  defaultStyles?: CSSProperties;\n  /**\n   * Component templates to start with on Plasmic.\n   */\n  templates?: ComponentTemplates<P>;\n  /**\n   * Registered name of parent component, used for grouping related components.\n   */\n  parentComponentName?: string;\n  /**\n   * Whether the component can be used as an attachment to an element.\n   */\n  isAttachment?: boolean;\n  /**\n   * Whether the component provides data to its slots using DataProvider.\n   */\n  providesData?: boolean;\n\n  /**\n   * If specified, then Figma components with the specified names will be mapped\n   * to this component when you paste Figma content into Plasmic\n   */\n  figmaMappings?: {\n    figmaComponentName: string;\n  }[];\n\n  /**\n   * If specified, then Figma components will have their properties transformed\n   * before being applied to this component. This is useful for transforming Figma\n   * properties to the format expected by the component.\n   */\n  figmaPropsTransform?: (\n    props: Record<string, string | number | boolean>\n  ) => Record<\n    string,\n    string | number | boolean | null | unknown[] | Record<string, unknown>\n  >;\n\n  /**\n   * If true, when an instance of this component is added, the element\n   * will always be named by the name of this component.\n   */\n  alwaysAutoName?: boolean;\n\n  /**\n   * If true, then won't be listed in the insert menu for content creators.\n   */\n  hideFromContentCreators?: boolean;\n\n  refActions?: Record<string, RefActionRegistration<P>>;\n\n  /**\n   * Optional function that takes in component props and context, and returns\n   * a string that will be used for labeling this element in the Outline panel\n   * on the left of the Studio.  This makes it easy to identify an element when\n   * looking at the tree.\n   */\n  treeLabel?: ContextDependentConfig<P, string>;\n\n  /**\n   * The value of the CSS display property used by this component.\n   * Plasmic passes in a class name prop to components to let users style them,\n   * but normally this does not include layout properties like display.\n   * However, if the user has set the components visibility to be visible\n   * (for instance, in the base variant it was set to not visible ie display none,\n   * but in a variant it's overridden to be visible), then Plasmic needs to know\n   * what display property to set.\n   * Defaults to \"flex\".\n   */\n  defaultDisplay?: string;\n\n  /**\n   * When true, when you click for the first time anywhere in the component including its slots, the component itself is\n   * selected, making it easier to select the component instead of slot contents. So for instance, setting this on a\n   * Button ensures that clicking on the Button’s text will still select the Button and not the text element in its\n   * slot. Clicking again will deep-select the slot content.\n   */\n  trapsFocus?: boolean;\n\n  /**\n   * An object registering code component's variants that should be allowed in Studio, when the component is\n   * used as the root of a Studio component.\n   */\n  variants?: Record<\n    string,\n    {\n      cssSelector: string;\n      displayName: string;\n    }\n  >;\n}\n\nexport type CodeComponentMode =\n  | \"advanced\"\n  | \"simplified\"\n  | \"database-schema-driven\";\n\n/**\n * @deprecated use CodeComponentMeta instead\n */\nexport type ComponentMeta<P> = CodeComponentMeta<P>;\n\nexport interface FunctionParam<P> {\n  name: string;\n  displayName?: string;\n  type: PropType<P>;\n}\n\nexport interface RefActionRegistration<P> {\n  displayName?: string;\n  description?: string;\n  argTypes: FunctionParam<P>[];\n}\n\nexport interface ComponentRegistration {\n  component: React.ComponentType<any>;\n  meta: CodeComponentMeta<any>;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicComponentRegistry: ComponentRegistration[];\n  }\n}\n\nif (root.__PlasmicComponentRegistry == null) {\n  root.__PlasmicComponentRegistry = [];\n}\n\nexport default function registerComponent<T extends React.ComponentType<any>>(\n  component: T,\n  meta: CodeComponentMeta<React.ComponentProps<T>>\n) {\n  // Check for duplicates\n  if (\n    root.__PlasmicComponentRegistry.some(\n      (r: ComponentRegistration) =>\n        r.component === component && r.meta.name === meta.name\n    )\n  ) {\n    return;\n  }\n  root.__PlasmicComponentRegistry.push({ component, meta });\n}\n","const root = globalThis as any;\n\nexport type StringType<T extends string = string> = \"string\" | `'${T}'`;\n\nexport type NumberType<T extends number = number> =\n  | \"number\"\n  | `${number extends T ? number : T}`;\n\nexport type BooleanType<T extends boolean = boolean> =\n  | \"boolean\"\n  | `${boolean extends T ? boolean : T}`;\n\nexport type NullType = \"null\";\n\nexport type UndefinedType = \"undefined\";\n\nexport type ArrayType = \"array\";\n\nexport type ObjectType = \"object\";\n\nexport type AnyType = \"any\";\n\nexport type VoidType = \"void\";\n\nexport type RestrictedType<T> = T extends string\n  ? StringType<T>\n  : T extends number\n  ? NumberType<T>\n  : T extends boolean\n  ? BooleanType<T>\n  : T extends null\n  ? NullType\n  : T extends undefined\n  ? UndefinedType\n  : T extends Array<any>\n  ? ArrayType\n  : T extends object\n  ? ObjectType\n  : AnyType;\n\nexport type OrType<T> = RestrictedType<T>[];\n\nexport type ParamType<T> = AnyType | RestrictedType<T> | OrType<T>;\n\nexport interface BaseParam<T> {\n  name: string;\n  type?: ParamType<T>;\n  description?: string;\n  isOptional?: boolean;\n  isRestParam?: boolean;\n}\n\n// Param name and optionally param type\nexport interface RequiredParam<T> extends BaseParam<T> {\n  isOptional?: false;\n  isRestParameter?: false;\n}\n\nexport interface OptionalParam<T> extends BaseParam<T | undefined> {\n  isRestParameter?: false;\n}\n\nexport interface RestParam<T> extends BaseParam<T> {\n  isOptional?: false;\n  isRestParameter: true;\n}\n\n// https://stackoverflow.com/questions/70684030/remove-all-optional-items-from-a-tuple-type\ntype RequiredParams<\n  T extends any[],\n  U extends any[] = []\n> = Partial<T> extends T\n  ? U\n  : T extends [infer F, ...infer R]\n  ? RequiredParams<R, [...U, F]>\n  : U;\n\ntype OptionalParams<T extends any[]> = T extends [\n  ...RequiredParams<T>,\n  ...infer R\n]\n  ? [...R]\n  : [];\n\ntype HandleRequiredParams<P extends any[]> = P extends [infer H, ...infer T]\n  ? [string | RequiredParam<H>, ...HandleRequiredParams<T>]\n  : [];\n\ntype HandleOptionalParams<P extends any[]> = P extends [infer H, ...infer T]\n  ? [] | [string | OptionalParam<H | undefined>, ...HandleOptionalParams<T>]\n  : P extends []\n  ? []\n  : P extends Array<infer T>\n  ? [] | [RestParam<T[]>]\n  : [];\n\nexport type HandleParams<P extends any[]> = [\n  ...HandleRequiredParams<RequiredParams<P>>,\n  ...HandleOptionalParams<Required<OptionalParams<P>>>\n];\n\nexport type HandleReturnType<T> = VoidType | ParamType<T>;\n\nexport interface CustomFunctionMeta<F extends (...args: any[]) => any> {\n  /**\n   * The javascript name of the function. Notice it must be unique across all\n   * other functions and function namespaces. If two functions have the same\n   * name, they should be registered with different `meta.namespace`.\n   */\n  name: string;\n  /**\n   * A namespace for organizing groups of functions. It's also used to handle\n   * function name collisions. If a function has a namespace, it will be used\n   * whenever accessing the function.\n   */\n  namespace?: string;\n  /**\n   * Documentation for the registered function.\n   */\n  description?: string;\n  /**\n   * An array containing the list of parameters names the function takes.\n   * Optionally they can also be registered with the expected param types.\n   */\n  params?: HandleParams<Parameters<F>>;\n  /**\n   * Return value information.\n   */\n  returnValue?: {\n    /**\n     * The function return type.\n     */\n    type?: HandleReturnType<ReturnType<F>>;\n    /**\n     * The function return value description.\n     */\n    description?: string;\n  };\n  /**\n   * Typescript function declaration. If specified, it ignores the types\n   * provided by `params` and `returnValue`.\n   */\n  typescriptDeclaration?: string;\n  /**\n   * The path to be used when importing the function in the generated code.\n   * It can be the name of the package that contains the function, or the path\n   * to the file in the project (relative to the root directory).\n   */\n  importPath: string;\n  /**\n   * Whether the function is the default export from that path. Optional: if\n   * not specified, it's considered `false`.\n   */\n  isDefaultExport?: boolean;\n}\n\nexport interface CustomFunctionRegistration {\n  function: (...args: any[]) => any;\n  meta: CustomFunctionMeta<any>;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicFunctionsRegistry: CustomFunctionRegistration[];\n  }\n}\n\nif (root.__PlasmicFunctionsRegistry == null) {\n  root.__PlasmicFunctionsRegistry = [];\n}\n\nexport default function registerFunction<F extends (...args: any[]) => any>(\n  fn: F,\n  meta: CustomFunctionMeta<F>\n) {\n  // Check for duplicates\n  if (\n    root.__PlasmicFunctionsRegistry.some(\n      (r: CustomFunctionRegistration) =>\n        r.function === fn &&\n        r.meta.name === meta.name &&\n        r.meta.namespace == meta.namespace\n    )\n  ) {\n    return;\n  }\n  root.__PlasmicFunctionsRegistry.push({ function: fn, meta });\n}\n","import {\n  BooleanType,\n  ChoiceType,\n  CustomType,\n  DataSourceType,\n  JSONLikeType,\n  NumberType,\n  StringType,\n} from \"./prop-types\";\nimport { FunctionParam } from \"./registerComponent\";\n\nconst root = globalThis as any;\n\n// Using just a subset of types from prop-types\nexport type PropType<P> =\n  | StringType<P>\n  | BooleanType<P>\n  | NumberType<P>\n  | JSONLikeType<P>\n  | ChoiceType<P>\n  | DataSourceType<P>\n  | CustomType<P>;\n\ntype RestrictPropType<T, P> = T extends string\n  ? StringType<P> | ChoiceType<P> | JSONLikeType<P> | CustomType<P>\n  : T extends boolean\n  ? BooleanType<P> | JSONLikeType<P> | CustomType<P>\n  : T extends number\n  ? NumberType<P> | JSONLikeType<P> | CustomType<P>\n  : PropType<P>;\n\ntype DistributedKeyOf<T> = T extends any ? keyof T : never;\n\nexport interface GlobalContextMeta<P> {\n  /**\n   * Any unique string name used to identify that context. Each context\n   * should be registered with a different `meta.name`, even if they have the\n   * same name in the code.\n   */\n  name: string;\n  /**\n   * The name to be displayed for the context in Studio. Optional: if not\n   * specified, `meta.name` is used.\n   */\n  displayName?: string;\n  /**\n   * The description of the context to be shown in Studio.\n   */\n  description?: string;\n  /**\n   * The javascript name to be used when generating code. Optional: if not\n   * provided, `meta.name` is used.\n   */\n  importName?: string;\n  /**\n   * An object describing the context properties to be used in Studio.\n   * For each `prop`, there should be an entry `meta.props[prop]` describing\n   * its type.\n   */\n  props: { [prop in DistributedKeyOf<P>]?: RestrictPropType<P[prop], P> } & {\n    [prop: string]: PropType<P>;\n  };\n  /**\n   * The path to be used when importing the context in the generated code.\n   * It can be the name of the package that contains the context, or the path\n   * to the file in the project (relative to the root directory).\n   */\n  importPath: string;\n  /**\n   *  Whether the context is the default export from that path. Optional: if\n   * not specified, it's considered `false`.\n   */\n  isDefaultExport?: boolean;\n  /**\n   * The prop that receives and forwards a React `ref`. Plasmic only uses `ref`\n   * to interact with components, so it's not used in the generated code.\n   * Optional: If not provided, the usual `ref` is used.\n   */\n  refProp?: string;\n  /**\n   * Whether the global context provides data to its children using DataProvider.\n   */\n  providesData?: boolean;\n\n  globalActions?: Record<string, GlobalActionRegistration<P>>;\n}\n\nexport interface GlobalContextRegistration {\n  component: React.ComponentType<any>;\n  meta: GlobalContextMeta<any>;\n}\n\nexport interface GlobalActionRegistration<P> {\n  displayName?: string;\n  description?: string;\n  parameters: FunctionParam<P>[];\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicContextRegistry: GlobalContextRegistration[];\n  }\n}\n\nif (root.__PlasmicContextRegistry == null) {\n  root.__PlasmicContextRegistry = [];\n}\n\nexport default function registerGlobalContext<\n  T extends React.ComponentType<any>\n>(component: T, meta: GlobalContextMeta<React.ComponentProps<T>>) {\n  // Check for duplicates\n  if (\n    root.__PlasmicContextRegistry.some(\n      (r: GlobalContextRegistration) =>\n        r.component === component && r.meta.name === meta.name\n    )\n  ) {\n    return;\n  }\n  root.__PlasmicContextRegistry.push({ component, meta });\n}\n","export type TokenType =\n  | \"color\"\n  | \"spacing\"\n  | \"font-family\"\n  | \"font-size\"\n  | \"line-height\"\n  | \"opacity\";\n\nexport interface TokenRegistration {\n  /**\n   * Name for this token; should be stable across updates\n   */\n  name: string;\n  /**\n   * Value for the token, which can either be a valid css value or a css reference\n   * to a css variable provided by your host app, like `var(--my-token)`\n   */\n  value: string;\n  /**\n   * Type of token\n   */\n  type: TokenType;\n  /**\n   * Optional display name to use for this token, if you'd like to use a friendlier\n   * name to display to Studio users\n   */\n  displayName?: string;\n  /**\n   * By default, if this token is a css variable reference like `var(--my-token)`,\n   * then it is assumed that `--my-token` is defined on `:root`.  If it is defined\n   * in another element, then you can pass in a selector for that element,\n   * like `.themeRoot`.\n   */\n  selector?: string;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicTokenRegistry: TokenRegistration[];\n  }\n}\n\nconst root = globalThis as any;\n\nif (root.__PlasmicTokenRegistry == null) {\n  root.__PlasmicTokenRegistry = [];\n}\n\nexport default function registerToken(token: TokenRegistration) {\n  root.__PlasmicTokenRegistry.push(token);\n}\n","const root = globalThis as any;\n\nexport interface BasicTrait {\n  label?: string;\n  type: \"text\" | \"number\" | \"boolean\";\n}\n\nexport interface ChoiceTrait {\n  label?: string;\n  type: \"choice\";\n  options: string[];\n}\n\nexport type TraitMeta = BasicTrait | ChoiceTrait;\n\nexport interface TraitRegistration {\n  trait: string;\n  meta: TraitMeta;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicTraitRegistry: TraitRegistration[];\n  }\n}\n\nif (root.__PlasmicTraitRegistry == null) {\n  root.__PlasmicTraitRegistry = [];\n}\n\nexport default function registerTrait(trait: string, meta: TraitMeta) {\n  root.__PlasmicTraitRegistry.push({\n    trait,\n    meta,\n  });\n}\n","import { cloneElement, isValidElement } from \"react\";\n\n/**\n * Allows elements to be repeated in Plasmic Studio.\n * @param index The index of the copy (starting at 0).\n * @param elt the React element to be repeated (or an array of such).\n */\nexport default function repeatedElement<T>(index: number, elt: T): T;\n/**\n * Allows elements to be repeated in Plasmic Studio.\n * @param isPrimary should be true for at most one instance of the element, and\n * indicates which copy of the element will be highlighted when the element is\n * selected in Studio.\n * @param elt the React element to be repeated (or an array of such).\n */\nexport default function repeatedElement<T>(isPrimary: boolean, elt: T): T;\nexport default function repeatedElement<T>(index: boolean | number, elt: T): T {\n  return repeatedElementFn(index as any, elt);\n}\n\nlet repeatedElementFn: typeof repeatedElement = (\n  index: boolean | number,\n  elt: any\n) => {\n  if (Array.isArray(elt)) {\n    return elt.map((v) => repeatedElementFn(index as any, v)) as any;\n  }\n  if (elt && isValidElement(elt) && typeof elt !== \"string\") {\n    return cloneElement(elt) as any;\n  }\n  return elt;\n};\n\nconst root = globalThis as any;\nexport const setRepeatedElementFn: (fn: typeof repeatedElement) => void =\n  root?.__Sub?.setRepeatedElementFn ??\n  function (fn: typeof repeatedElement) {\n    repeatedElementFn = fn;\n  };\n","import React from \"react\";\n\nexport type PlasmicTranslator = (\n  str: string,\n  opts?: {\n    components?: {\n      [key: string]: React.ReactElement;\n    };\n  }\n) => React.ReactNode;\n\nexport interface PlasmicI18NContextValue {\n  translator?: PlasmicTranslator;\n  tagPrefix?: string;\n}\n\nexport const PlasmicTranslatorContext = React.createContext<\n  PlasmicI18NContextValue | PlasmicTranslator | undefined\n>(undefined);\n\nexport function usePlasmicTranslator() {\n  const _t = React.useContext(PlasmicTranslatorContext);\n  const translator = _t\n    ? typeof _t === \"function\"\n      ? _t\n      : _t.translator\n    : undefined;\n  return translator;\n}\n","export const hostVersion = \"1.0.208\";\n","import * as PlasmicQuery from \"@plasmicapp/query\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { registerRenderErrorListener, setPlasmicRootNode } from \"./canvas-host\";\nimport * as hostModule from \"./exports\";\nimport { setRepeatedElementFn } from \"./repeatedElement\";\n// version.ts is automatically generated by `yarn build` and not committed.\nimport { hostVersion } from \"./version\";\n\n// All exports must come from \"./exports\"\nexport * from \"./exports\";\n\nconst root = globalThis as any;\n\nif (root.__Sub == null) {\n  // Creating a side effect here by logging, so that vite won't\n  // ignore this block for whatever reason. Hiding this for now\n  // as users are complaining; will have to check if this has\n  // been fixed with vite.\n  // console.log(\"Plasmic: Setting up app host dependencies\");\n  root.__Sub = {\n    React,\n    ReactDOM,\n    PlasmicQuery,\n    hostModule,\n    hostVersion,\n    hostUtils: {\n      setPlasmicRootNode,\n      registerRenderErrorListener,\n      setRepeatedElementFn,\n    },\n\n    // For backwards compatibility:\n    setPlasmicRootNode,\n    registerRenderErrorListener,\n    setRepeatedElementFn,\n    ...hostModule,\n  };\n} else {\n  console.warn(\n    `Encountered likely duplicate host version: ${root.__Sub.hostVersion} vs ${hostVersion}`\n  );\n  root.__Sub.duplicateHostVersions = root.__Sub.duplicateHostVersions ?? [];\n  root.__Sub.duplicateHostVersions.push(hostVersion);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAQA,CAACC,CAAM;EACtB,OAAO,OAAOA,CAAC,KAAK,QAAQ;AAC9B;AAIgB,SAAAC,MAAMA,CAAID,CAAuB,EAAEE,GAAmB;EAAnB,IAAAA,GAAA;IAAAA,GAAmB;EAAA;EACpE,IAAIF,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKG,SAAS,EAAE;IACjC;IACAD,GAAG,GAAG,CAACH,QAAQ,CAACG,GAAG,CAAC,GAAGA,GAAG,GAAGA,GAAG,EAAE,KAAK,EAAE;IACzC,MAAM,IAAIE,KAAK,CACb,qCAAsC,CAAAC,MAAA,CAAAH,GAAG,GAAG,IAAK,CAAAG,MAAA,CAAAH,GAAG,CAAE,GAAG,EAAE,CAAE,CAC9D;EACF,OAAM;IACL,OAAOF,CAAC;EACT;AACH;ACdc,SAAUM,cAAcA,CAAA;EAC9B,IAAAC,EAAA,GAAcC,QAAQ,CAAC,CAAC,CAAC;IAAtBC,OAAO,GAAAF,EAAA,GAAe;EAC/B,IAAMG,MAAM,GAAGC,WAAW,CAAC;IACzBF,OAAO,CAAC,UAACG,IAAI,EAAK;MAAA,OAAAA,IAAI,GAAG,CAAC;IAAA,EAAC;GAC5B,EAAE,EAAE,CAAC;EACN,OAAOF,MAAM;AACf;ACGA,IAAKG,UAAkB,CAACC,oBAAoB,IAAI,IAAI,EAAE;EACnDD,UAAkB,CAACC,oBAAoB,GAAG,GAAG;AAC/C;AAED,IAAMC,mBAAmB,GAAmB,EAAE;AAC9C,IAAAC,sBAAA;EACE,SAAAA,uBAAoBC,KAAgC;IAApD,IAAwDC,KAAA;IAApC,IAAK,CAAAD,KAAA,GAALA,KAAK;IACzB,IAAG,CAAAE,GAAA,GAAG,UAACC,GAA8B;MACnCF,KAAI,CAACD,KAAK,GAAGG,GAAG;MAChBL,mBAAmB,CAACM,OAAO,CAAC,UAACC,CAAC;QAAK,OAAAA,CAAC,EAAE;MAAA,EAAC;IACzC,CAAC;IACD,IAAG,CAAAC,GAAA,GAAG;MAAM,OAAAL,KAAI,CAACD,KAAK;IAAA;;EACxB,OAACD,sBAAA;AAAD,CAAC;AAED,IAAMQ,eAAe,GAAG,IAAIR,sBAAsB,CAAC,IAAI,CAAC;AAExD,SAASS,aAAaA,CAAA;EACpB,OAAO,IAAIC,eAAe,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC9D;AAEA,SAASC,gBAAgBA,CAAA;EACvB,IAAMC,MAAM,GAAGN,aAAa,EAAE;EAC9B,OAAOxB,MAAM,CACX8B,MAAM,CAACR,GAAG,CAAC,QAAQ,CAAC,EACpB,0CAA0C,CAC3C;AACH;AAEA,SAASS,aAAaA,CAAA;EACpB,IAAMC,UAAU,GAAGR,aAAa,EAAE;EAClC,IAAIQ,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;IAChC,OAAOD,UAAU,CAACV,GAAG,CAAC,YAAY,CAAC;EACpC;EACD,IAAMY,SAAS,GAAG,IAAIC,GAAG,CAACT,QAAQ,CAACU,IAAI,CAAC,CAACC,YAAY;EACrD,OAAOH,SAAS,CAACZ,GAAG,CAAC,aAAa,CAAC;AACrC;AAEA,SAASgB,sBAAsBA,CAAA;EAC7B,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,IAAMC,aAAa,GAAGb,gBAAgB,EAAE;EACxC,IAAMF,IAAI,GAAGI,aAAa,EAAE;EAC5BQ,MAAM,CAACI,GAAG,GAAG,GAAAvC,MAAA,CAAGsC,aAAa,uBAAAtC,MAAA,CAC3BuB,IAAI,GAAG,IAAAvB,MAAA,CAAIuB,IAAI,EAAK,SAAG,KAAK,CAC5B;EACFa,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;AACnC;AAEA,IAAIO,WAAW,GAAG,CAAC;AACb,SAAUC,kBAAkBA,CAACC,IAA+B;;;EAGhEF,WAAW,EAAE;EACbvB,eAAe,CAACL,GAAG,CAAC8B,IAAI,CAAC;AAC3B;AAQA;;;;AAIG;AACU,IAAAC,oBAAoB,GAAGC,KAAK,CAACC,aAAa,CAErD,KAAK;AACM,IAAAC,uBAAuB,GAAG,SAAAA,CAAA;EACrC,OAAAF,KAAK,CAACG,UAAU,CAACJ,oBAAoB,CAAC;AAAtC;AAEF,SAASK,kBAAkBA,CAAA;;;;;;EAKzB,IAAMC,eAAe,GAAG,CAAC,CAACC,MAAM,CAACC,MAAM;EACvC,IAAMC,QAAQ,GAAG,CAAC,EAAC,CAAApD,EAAA,GAAAoB,QAAQ,CAACC,IAAI,cAAArB,EAAA,uBAAAA,EAAA,CAAEqD,KAAK,CAAC,iBAAiB,CAAC;EAC1D,IAAMC,MAAM,GAAG,CAAC,EAAC,CAAAC,EAAA,GAAAnC,QAAQ,CAACC,IAAI,MAAE,QAAAkC,EAAA,uBAAAA,EAAA,CAAAF,KAAK,CAAC,eAAe,CAAC,KAAI,CAACJ,eAAe;EAC1E,IAAMO,kBAAkB,GACtBP,eAAe,IACf,CAACf,QAAQ,CAACuB,aAAa,CAAC,qBAAqB,CAAC,IAC9C,CAACL,QAAQ,IACT,CAACE,MAAM;EACT,IAAMI,WAAW,GAAG3D,cAAc,EAAE;EACpC6C,KAAK,CAACe,eAAe,CAAC;IACpBnD,mBAAmB,CAACoD,IAAI,CAACF,WAAW,CAAC;IACrC,OAAO;MACL,IAAMG,KAAK,GAAGrD,mBAAmB,CAACsD,OAAO,CAACJ,WAAW,CAAC;MACtD,IAAIG,KAAK,IAAI,CAAC,EAAE;QACdrD,mBAAmB,CAACuD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACrC;IACH,CAAC;EACH,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EACjBd,KAAK,CAACoB,SAAS,CAAC;IACd,IAAIR,kBAAkB,IAAIP,eAAe,IAAIC,MAAM,CAACC,MAAM,KAAKD,MAAM,EAAE;MACrElB,sBAAsB,EAAE;IACzB;EACH,CAAC,EAAE,CAACwB,kBAAkB,EAAEP,eAAe,CAAC,CAAC;EACzCL,KAAK,CAACoB,SAAS,CAAC;IACd,IAAI,CAACR,kBAAkB,IAAI,CAACtB,QAAQ,CAACuB,aAAa,CAAC,UAAU,CAAC,IAAIH,MAAM,EAAE;MACxE,IAAMW,SAAS,GAAG/B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAClD8B,SAAS,CAACC,EAAE,GAAG,SAAS;MACxBD,SAAS,CAAC5B,GAAG,GAAGd,gBAAgB,EAAE,GAAG,uBAAuB;MAC5D0C,SAAS,CAACE,KAAK,GAAG,KAAK;MACvBF,SAAS,CAACG,MAAM,GAAG;;QACjB,CAAAb,EAAA,IAACvD,EAAA,GAAAkD,MAAc,EAACmB,sBAAsB,cAAAd,EAAA,uBAAAA,EAAA,CAAAe,IAAA,CAAAtE,EAAA,CAAI;MAC5C,CAAC;MACDkC,QAAQ,CAACqC,IAAI,CAACC,MAAM,CAACP,SAAS,CAAC;IAChC;EACH,CAAC,EAAE,CAACT,kBAAkB,CAAC,CAAC;EAElB,IAAAiB,EAA8C,GAAA7B,KAAK,CAAC3C,QAAQ,CAAC;MACjE,OAAAyE,wBAAwB,EAAE;IAA1B,CAA0B,CAC3B;IAFMC,kBAAkB,GAAAF,EAAA;IAAEG,qBAAqB,GAAAH,EAAA,GAE/C;EAED7B,KAAK,CAACoB,SAAS,CAAC;IACd,IAAIZ,QAAQ,EAAE;MACZ,IAAMyB,UAAQ,GAAG,SAAAA,CAAA;QACfD,qBAAqB,CAACF,wBAAwB,EAAE,CAAC;MACnD,CAAC;MACDxB,MAAM,CAAC4B,gBAAgB,CAAC,YAAY,EAAED,UAAQ,CAAC;MAC/C,OAAO,YAAM;QAAA,OAAA3B,MAAM,CAAC6B,mBAAmB,CAAC,YAAY,EAAEF,UAAQ,CAAC;MAAlD,CAAkD;IAChE;IACD,OAAOjF,SAAS;EAClB,CAAC,EAAE,CAACwD,QAAQ,CAAC,CAAC;EACd,IAAI,CAACH,eAAe,EAAE;IACpB,OAAO,IAAI;EACZ;EACD,IAAIG,QAAQ,IAAIE,MAAM,EAAE;IACtB,IAAI0B,MAAM,GAAG9C,QAAQ,CAACuB,aAAa,CAAC,8BAA8B,CAAC;IACnE,IAAI,CAACuB,MAAM,EAAE;MACXA,MAAM,GAAG9C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtC6C,MAAM,CAACd,EAAE,GAAG,aAAa;MACzBc,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;MACvChD,QAAQ,CAACI,IAAI,CAAC6C,OAAO,CAACH,MAAM,CAAC;IAC9B;IACD,OAAOI,QAAQ,CAACC,YAAY,CAC1BzC,KAAA,CAAAT,aAAA,CAACmD,aAAa;MAACC,GAAG,EAAE,EAAG,CAAAzF,MAAA,CAAA0C,WAAW;IAAE,GAClCI,KAAA,CAAAT,aAAA,CAACQ,oBAAoB,CAAC6C,QAAQ;MAAC9E,KAAK,EAAEiE;IAAkB,CACrD,EAAA1D,eAAe,CAACD,GAAG,EAAE,CACQ,CAClB,EAChBgE,MAAM,EACN,aAAa,CACd;EACF;EACD,IAAIxB,kBAAkB,IAAIN,MAAM,CAACC,MAAM,KAAKD,MAAM,EAAE;IAClD,OACEN,KAAA,CAAAT,aAAA;MACEE,GAAG,EAAE,kEAAAvC,MAAA,CAAkE2F,kBAAkB,CACvFrE,QAAQ,CAACU,IAAI,CACd,CAAE;MACH4D,KAAK,EAAE;QACLC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE;MACT;IAAA,EACO;EAEb;EACD,OAAO,IAAI;AACb;AAqBO,IAAMC,iBAAiB,GAE1B,SAAAA,CAACC,KAAK;EACA,IAAAC,gBAAgB,GAAKD,KAAK,CAAAC,gBAAV;EAClB,IAAApG,EAAkB,GAAA4C,KAAK,CAAC3C,QAAQ,CACpC,IAAI,CACL;IAFMyC,IAAI,GAAA1C,EAAA;IAAEqG,OAAO,GAAArG,EAAA,GAEnB;EACD4C,KAAK,CAACoB,SAAS,CAAC;IACdqC,OAAO,CAACzD,KAAA,CAAAT,aAAA,CAACa,kBAAkB,OAAG,CAAC;GAChC,EAAE,EAAE,CAAC;EACN,OACEJ,KAAA,CAAAT,aAAA,CAAAS,KAAA,CAAA0D,QAAA,QACG,CAACF,gBAAgB,IAAIxD,KAAC,CAAAT,aAAA,CAAAoE,iBAAiB,EAAG,OAC1C7D,IAAI,CACJ;AAEP;AAGA,IAAM8D,oBAAoB,GAA0B,EAAE;AAChD,SAAUC,2BAA2BA,CAACC,QAA6B;EACvEF,oBAAoB,CAAC5C,IAAI,CAAC8C,QAAQ,CAAC;EACnC,OAAO;IACL,IAAM7C,KAAK,GAAG2C,oBAAoB,CAAC1C,OAAO,CAAC4C,QAAQ,CAAC;IACpD,IAAI7C,KAAK,IAAI,CAAC,EAAE;MACd2C,oBAAoB,CAACzC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACtC;EACH,CAAC;AACH;AAUA,IAAAyB,aAAA,0BAAAqB,MAAA;EAA4BC,SAG3B,CAAAtB,aAAA,EAAAqB,MAAA;EACC,SAAArB,cAAYa,KAAyB;IAArC,IACExF,KAAA,GAAAgG,MAAA,CAAArC,IAAA,OAAM6B,KAAK,CAAC,IAEb;IADCxF,KAAI,CAACkG,KAAK,GAAG,EAAE;;;EAGVvB,aAAwB,CAAAwB,wBAAA,GAA/B,UAAgCC,KAAY;IAC1C,OAAO;MAAEA,KAAK,EAAAA;IAAA,CAAE;GACjB;EAEDzB,aAAiB,CAAA0B,SAAA,CAAAC,iBAAA,GAAjB,UAAkBF,KAAY;IAC5BP,oBAAoB,CAAC1F,OAAO,CAAC,UAAC4F,QAAQ,EAAK;MAAA,OAAAA,QAAQ,CAACK,KAAK,CAAC;IAAf,CAAe,CAAC;GAC5D;EAEDzB,aAAA,CAAA0B,SAAA,CAAAE,MAAM,GAAN;IACE,IAAI,IAAI,CAACL,KAAK,CAACE,KAAK,EAAE;MACpB,OAAOnE,KAAA,CAAAT,aAAA,c,WAAa,EAAG,CAAArC,MAAA,KAAI,CAAC+G,KAAK,CAACE,KAAK,CAACI,OAAO,CAAE,CAAO;IACzD,OAAM;MACL,OAAOvE,KAAA,CAAAT,aAAA,CAAAS,KAAA,CAAA0D,QAAA,QAAG,IAAI,CAACH,KAAK,CAACiB,QAAQ,CAAI;IAClC;GACF;EACH,OAAC9B,aAAA;AAAD,CAAC,CAxB2B1C,KAAK,CAACyE,SAAS,CAwB1C;AAED,SAASd,iBAAiBA,CAAA;EACxB,IAAIe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAO,IAAI;EACZ;EACD,OACE5E,KACE,CAAAT,aAAA;IAAAsF,IAAI,EAAC,iBAAiB;IACtBC,uBAAuB,EAAE;MACvBC,MAAM,EAAE;IAeT;EAAA,EACO;AAEd;AAEA,SAASjD,wBAAwBA,CAAA;;EAC/B,IAAMrD,IAAI,GAAG6B,MAAM,CAAC9B,QAAQ,CAACC,IAAI;EACjC,IAAIA,IAAI,IAAIA,IAAI,CAACuG,MAAM,GAAG,CAAC,EAAE;;IAE3B,IAAMpG,MAAM,GAAG,IAAIL,eAAe,CAACE,IAAI,CAACwG,SAAS,CAAC,CAAC,CAAC,CAAC;IACrD,IAAIrG,MAAM,CAACR,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;MACnC,IAAM8G,cAAc,GAAGtG,MAAM,CAACR,GAAG,CAAC,gBAAgB,CAAC;MACnD,OAAO;QACL+G,aAAa,EAAE,CAAA/H,EAAA,GAAAwB,MAAM,CAACR,GAAG,CAAC,eAAe,CAAC,cAAAhB,EAAA,cAAAA,EAAA,GAAI,IAAI;QAClD8H,cAAc,EAAEA,cAAc,GAAGE,IAAI,CAACC,KAAK,CAACH,cAAc,CAAC,GAAG,EAAE;QAChEI,WAAW,EAAE1G,MAAM,CAACR,GAAG,CAAC,aAAa,CAAC,KAAK;OAC5C;IACF;EACF;EACD,OAAO,KAAK;AACd;AAEA,IAAMmH,iCAAiC,GAAG,4BAA4B;AAEhE,SAAUC,6BAA6BA,CAACjC,KAAU;EACtD,OAAOvD,KAAK,CAACyF,OAAO,CAAC;;;;;;;IAOnB,IAAMC,aAAa,GAAGnC,KAAK,KAAL,QAAAA,KAAK,uBAALA,KAAK,CAAGgC,iCAAiC,CAAC;IAChE,IAAIG,aAAa,EAAE;MACjB,OAAO;QACLC,UAAU,EAAED,aAAa,CAACC,UAAqB;QAC/CC,gBAAgB,EAAEF,aAAa,CAACE;OACjC;IACF;IACD,OAAO,IAAI;EACb,CAAC,EAAE,CAACrC,KAAK,CAAC,CAAC;AACb;ACvUO,IAAMsC,KAAK,GAAG,SAAAA,CAAA;EAAkB,IAAUC,IAAA;OAAV,IAAUC,EAAA,MAAVA,EAAU,GAAAC,SAAA,CAAAhB,MAAA,EAAVe,EAAU;IAAVD,IAAU,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAAQ,OAAAD,IAAI;AAAJ,CAAI;ICUhDG,WAAW,GAAGhG,aAAa,CAAuBjD,SAAS;AAQlE,SAAUkJ,UAAUA,CAACC,IAAY;EACrC,OAAO,kBAAAjJ,MAAA,CAAkBiJ,IAAI,CAAE;AACjC;AAEM,SAAUC,WAAWA,CAACC,IAAuB;EACjD,OAAOA,IAAI;AACb;AAEgB,SAAAC,aAAaA,CAC3BC,OAA6B,EAC7BC,QAA4B;EAE5B,IAAI,CAACA,QAAQ,EAAE;IACb,OAAOxJ,SAAS;EACjB;EACD,IAAIyJ,OAAO,GAAGF,OAAO;EACrB,KAAkB,IAAmBR,EAAA,MAAnB3I,EAAA,GAAAoJ,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,EAAnBX,EAAmB,GAAA3I,EAAA,CAAA4H,MAAA,EAAnBe,EAAA,EAAmB,EAAE;IAAlC,IAAMpD,GAAG,GAAAvF,EAAA,CAAA2I,EAAA;IACZU,OAAO,GAAGA,OAAO,KAAP,QAAAA,OAAO,uBAAPA,OAAO,CAAG9D,GAAG,CAAC;EACzB;EACD,OAAO8D,OAAO;AAChB;AAIM,SAAUE,WAAWA,CAACH,QAA4B;EACtD,IAAMD,OAAO,GAAGK,UAAU,EAAE;EAC5B,OAAON,aAAa,CAACC,OAAO,EAAEC,QAAQ,CAAC;AACzC;AAEM,SAAUK,YAAYA,CAACC,SAA4B;EAA5B,IAAAA,SAAA;IAAAA,SAA4B;EAAA;EACvD,IAAMP,OAAO,GAAGK,UAAU,EAAE;EAC5B,OAAOG,MAAM,CAACC,WAAW,CACvBD,MAAM,CAACE,OAAO,CAACH,SAAS,CAAC,CACtBI,MAAM,CAAC,UAAC9J,EAAe;QAAduF,GAAG,GAAAvF,EAAA;MAAEoJ,QAAQ,GAAApJ,EAAA;IAAM,QAAC,CAACuF,GAAG,IAAI,CAAC,CAAC6D,QAAQ;EAAnB,CAAmB,CAAC,CAChDW,GAAG,CAAC,UAAC/J,EAAe;QAAduF,GAAG,GAAAvF,EAAA;MAAEoJ,QAAQ,GAAApJ,EAAA;IAAM,OAAAyI,KAAK,CAAClD,GAAG,EAAE2D,aAAa,CAACC,OAAO,EAAEC,QAAQ,CAAC,CAAC;GAAA,CAAC,CAC1E;AACH;SAEgBI,UAAUA,CAAA;EACxB,OAAOzG,UAAU,CAAC8F,WAAW,CAAC;AAChC;AA0BM,SAAUmB,YAAYA,CAAChK,EAOT;;;EANlB,IAAA+I,IAAI,GAAA/I,EAAA,CAAA+I,IAAA;IACJkB,IAAI,GAAAjK,EAAA,CAAAiK,IAAA;IACJC,MAAM,GAAAlK,EAAA,CAAAkK,MAAA;IACNC,QAAQ,GAAAnK,EAAA,CAAAmK,QAAA;IACRC,KAAK,GAAApK,EAAA,CAAAoK,KAAA;IACLhD,QAAQ,GAAApH,EAAA,CAAAoH,QAAA;EAER,IAAMiD,WAAW,GAAG,CAAA5F,EAAA,GAAA+E,UAAU,EAAE,cAAA/E,EAAA,cAAAA,EAAA,GAAI,EAAE;EACtC,IAAI,CAACsE,IAAI,EAAE;IACT,OAAOuB,cAAA,CAAAnI,aAAA,CAAAmI,cAAA,CAAAhE,QAAA,QAAGc,QAAQ,CAAI;EACvB,OAAM;IACL,OACEkD,cAAC,CAAAnI,aAAA,CAAA0G,WAAW,CAACrD,QAAQ;MACnB9E,KAAK,EAAA6J,QAAA,CAAAA,QAAA,KACAF,WAAW,IAAA9G,EAAA,OAAAA,EAAA,CACbwF,IAAI,CAAG,GAAAkB,IAAI,EACX1G,EAAA,CAAAuF,UAAU,CAACC,IAAI,CAAC,CAAG,GAAAC,WAAW,CAAC;QAAEkB,MAAM,EAAAA,MAAA;QAAEC,QAAQ,EAAAA,QAAA;QAAEC,KAAK,EAAAA;MAAA,CAAE,CAAC,EAAA7G,EAAA;IAAA,GAG7D6D,QAAQ,CACY;EAE1B;AACH;AAEA;;AAEG;AACH,SAASoD,iBAAiBA,CACxBhJ,MAAqD;EAErD,IAAMiJ,SAAS,GAAsC,EAAE;EACvD,KAA2B,IAAsB9B,EAAA,MAAtB3I,EAAA,GAAA2J,MAAM,CAACE,OAAO,CAACrI,MAAM,CAAC,EAAtBmH,EAAsB,GAAA3I,EAAA,CAAA4H,MAAA,EAAtBe,EAAA,EAAsB,EAAE;IAAxC,IAAApF,EAAA,GAAAvD,EAAA,CAAA2I,EAAA,CAAY;MAAXpD,GAAG,GAAAhC,EAAA;MAAE7C,KAAK,GAAA6C,EAAA;IACpB,IAAI,CAAC7C,KAAK,EAAE;MACV;IACD;IACD,IAAI6E,GAAG,CAACmF,UAAU,CAAC,KAAK,CAAC,EAAE;MACzBD,SAAS,CAAClF,GAAG,CAACoF,KAAK,CAAC,CAAC,CAAC,CAAC,GACrB,OAAOjK,KAAK,KAAK,QAAQ,GACrBA,KAAK,CAACY,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACgI,KAAK,CAAC,GAAG,CAAC,GACxC5I,KAAK;IACZ,OAAM;MACL+J,SAAS,CAAClF,GAAG,CAAC,GAAG7E,KAAK;IACvB;EACF;EACD,OAAO+J,SAAS;AAClB;AAEA,SAASG,wBAAwBA,CAC/BC,KAAa,EACbrJ,MAAqD;EAErD,IAAI,CAACA,MAAM,EAAE;IACX,OAAOqJ,KAAK;EACb;EACD,IAAIC,IAAI,GAAGD,KAAK;EAChB,KAA2B,IAAsBlC,EAAA,MAAtB3I,EAAA,GAAA2J,MAAM,CAACE,OAAO,CAACrI,MAAM,CAAC,EAAtBmH,EAAsB,GAAA3I,EAAA,CAAA4H,MAAA,EAAtBe,EAAA,EAAsB,EAAE;IAAxC,IAAApF,EAAA,GAAAvD,EAAA,CAAA2I,EAAA,CAAY;MAAXpD,GAAG,GAAAhC,EAAA;MAAE7C,KAAK,GAAA6C,EAAA;IACpB,IAAI,OAAO7C,KAAK,KAAK,QAAQ,EAAE;MAC7BoK,IAAI,GAAGA,IAAI,CAACxJ,OAAO,CAAC,GAAI,CAAAxB,MAAA,CAAAyF,GAAG,EAAG,MAAE7E,KAAK,CAAC;IACvC,OAAM,IAAIqK,KAAK,CAACC,OAAO,CAACtK,KAAK,CAAC,EAAE;MAC/B,IAAIoK,IAAI,CAACG,QAAQ,CAAC,QAAAnL,MAAA,CAAQyF,GAAG,OAAI,CAAC,EAAE;QAClCuF,IAAI,GAAGA,IAAI,CAACxJ,OAAO,CAAC,QAAAxB,MAAA,CAAQyF,GAAG,OAAI,EAAE7E,KAAK,CAACwK,IAAI,CAAC,GAAG,CAAC,CAAC;MACtD,OAAM,IAAIJ,IAAI,CAACG,QAAQ,CAAC,OAAAnL,MAAA,CAAOyF,GAAG,MAAG,CAAC,EAAE;QACvCuF,IAAI,GAAGA,IAAI,CAACxJ,OAAO,CAAC,OAAAxB,MAAA,CAAOyF,GAAG,MAAG,EAAE7E,KAAK,CAACwK,IAAI,CAAC,GAAG,CAAC,CAAC;MACpD;IACF;EACF;EACD,OAAOJ,IAAI;AACb;AA0BM,SAAUK,kBAAkBA,CAACnL,EAMT;MALxBoH,QAAQ,GAAApH,EAAA,CAAAoH,QAAA;IACRyD,KAAK,GAAA7K,EAAA,CAAA6K,KAAA;IACCO,eAAe,GAAApL,EAAA,CAAA8K,IAAA;IACrBvH,EAAW,GAAAvD,EAAA,CAAAwB,MAAA;IAAXA,MAAM,GAAG+B,EAAA,gBAAE,GAAAA,EAAA;IACXkB,EAAA,GAAAzE,EAAA,CAAAqL,KAAU;IAAVA,KAAK,GAAA5G,EAAA,cAAG,EAAE,GAAAA,EAAA;EAEVoG,KAAK,GAAGA,KAAK,KAAL,QAAAA,KAAK,cAALA,KAAK,GAAIO,eAAe;EAChC5J,MAAM,GAAGgJ,iBAAiB,CAAChJ,MAAM,CAAC;EAClC,IAAM8J,IAAI,GAAG9B,UAAU,EAAE,IAAI,EAAE;EAC/B,IAAMsB,IAAI,GAAGD,KAAK,GAAGD,wBAAwB,CAACC,KAAK,EAAErJ,MAAM,CAAC,GAAG5B,SAAS;EACxE,OACE0K,cAAC,CAAAnI,aAAA,CAAA6H,YAAY;IACXjB,IAAI,EAAE,WAAW;IACjBkB,IAAI,EAAEY,KAAK;IACXT,KAAK,EAAE,YAAY;IACnBD,QAAQ,EAAE;EAAI,GAEdG,cAAA,CAAAnI,aAAA,CAAC6H,YAAY;IAACjB,IAAI,EAAE,UAAU;IAAEkB,IAAI,EAAEa,IAAI;IAAEV,KAAK,EAAE;EAAW,GAC5DE,cAAA,CAAAnI,aAAA,CAAC6H,YAAY,EACX;IAAAjB,IAAI,EAAE,QAAQ;IACdkB,IAAI,EAAAM,QAAA,CAAAA,QAAA,KAAOe,IAAI,CAAC9J,MAAM,CAAK,EAAAA,MAAM,CACjC;IAAA4I,KAAK,EAAE;EAAsB,GAE7BE,cAAC,CAAAnI,aAAA,CAAA6H,YAAY,EACX;IAAAjB,IAAI,EAAE,OAAO;IACbkB,IAAI,EAAAM,QAAA,CAAAA,QAAA,KAAOe,IAAI,CAACD,KAAK,GAAKA,KAAK,CAC/B;IAAAjB,KAAK,EAAE;EAAuB,CAE7B,EAAAhD,QAAQ,CACI,CACF,CACF,CACF;AAEnB;AAEM,SAAUmE,aAAaA,CAACvL,EAI7B;EAHC,IAAAoH,QAAQ,GAAApH,EAAA,CAAAoH,QAAA;EAIR,IAAMkE,IAAI,GAAG9B,UAAU,EAAE;EACzB,OAAOpC,QAAQ,CAACkE,IAAI,CAAwB;AAC9C;AC7NA,IAAME,MAAI,GAAGlL,UAAiB;AAyC9BkL,MAAI,CAACC,wBAAwB,GAAG,EAAE;AAElB,SAAAC,eAAeA,CAACC,OAAgB,EAAE1C,IAAiB;EACjEuC,MAAI,CAACC,wBAAwB,CAAC7H,IAAI,CAAC;IAAE+H,OAAO,EAAAA,OAAA;IAAE1C,IAAI,EAAAA;EAAA,CAAE,CAAC;AACvD;AC3Ca,IAAA2C,oBAAoB,GAAGtB,cAAK,CAACzH,aAAa,CAErDjD,SAAS;AAEL,SAAUiM,qBAAqBA,CAAC1F,KAIrC;EACS,IAAA2F,WAAW,GAAwB3F,KAAK,CAAA2F,WAA7B;IAAE1E,QAAQ,GAAcjB,KAAK,CAAAiB,QAAnB;IAAE2E,OAAO,GAAK5F,KAAK,CAAA4F,OAAV;EACtC,IAAMC,eAAe,GAAGC,gBAAgB,EAAE;EAC1C,IAAMC,iBAAiB,GAAG5B,cAAK,CAACjC,OAAO,CACrC;IACE,OAAAsB,MAAM,CAACC,WAAW,CAChBD,MAAM,CAACE,OAAO,CAACkC,OAAO,CAAC,CAAChC,GAAG,CAAC,UAAC/J,EAAU;UAATuF,GAAG,GAAAvF,EAAA;QAAEa,GAAG,GAAAb,EAAA;MAAM,QAC1C,EAAG,CAAAF,MAAA,CAAAgM,WAAW,EAAI,KAAAhM,MAAA,CAAAyF,GAAG,CAAE,EACvB1E,GAAG,CACJ;IAH2C,CAG3C,CAAC,CACH;EALD,CAKC,EACH,CAACiL,WAAW,EAAEC,OAAO,CAAC,CACvB;EACD,OACEzB,cAAA,CAAAnI,aAAA,CAACyJ,oBAAoB,CAACpG,QAAQ,EAC5B;IAAA9E,KAAK,EACA6J,QAAA,CAAAA,QAAA,KAAAyB,eAAe,GACfE,iBAAiB;EAAA,GAGrB9E,QAAQ,CACqB;AAEpC;SAEgB6E,gBAAgBA,CAAA;;EAC9B,OAAO,CAAAjM,EAAA,GAAAsK,cAAK,CAACvH,UAAU,CAAC6I,oBAAoB,CAAC,MAAI,QAAA5L,EAAA,cAAAA,EAAA,KAAE;AACrD;ACrCA,IAAMmM,kBAAkB,GAAG7B,cAAK,CAACzH,aAAa,CAE5CjD,SAAS,CAAC;SAEIwM,mBAAmBA,CAAA;EAGjC,OAAO9B,cAAK,CAACvH,UAAU,CAACoJ,kBAAkB,CAAC;AAC7C;AAEA,IAAME,UAAU,GAAG/B,cAAK,CAACgC,UAAU,CAAC,SAASD,UAAUA,CACrDlG,KAAgC,EAChCoG,GAAiC;EAEjC,OAAOjC,cAAA,CAAAnI,aAAA,MAAAoI,QAAA,KAAOpE,KAAK;IAAEoG,GAAG,EAAEA;EAAG,GAAI;AACnC,CAAC,CAAC;SAEcC,cAAcA,CAAA;EAG5B,IAAMC,IAAI,GAAGnC,cAAK,CAACvH,UAAU,CAACoJ,kBAAkB,CAAC;EACjD,IAAIM,IAAI,EAAE;IACR,OAAOA,IAAI;EACZ,OAAM;IACL,OAAOJ,UAA4D;EACpE;AACH;AAEM,SAAUK,mBAAmBA,CAACvG,KAGnC;EACS,IAAAsG,IAAI,GAAetG,KAAK,CAAAsG,IAApB;IAAErF,QAAQ,GAAKjB,KAAK,CAAAiB,QAAV;EACtB,OACEkD,cAAA,CAAAnI,aAAA,CAACgK,kBAAkB,CAAC3G,QAAQ;IAAC9E,KAAK,EAAE+L;EAAI,GACrCrF,QAAQ,CACmB;AAElC;AC5BA,IAAMuF,MAAI,GAAGrM,UAAiB;AA0H9B;AACA;AACa,IAAAsM,gBAAgB,GAA6C,CACxE,UAAU,EACV,qBAAqB,EACrB,UAAU,C;AAyPZ,IAAID,MAAI,CAACE,0BAA0B,IAAI,IAAI,EAAE;EAC3CF,MAAI,CAACE,0BAA0B,GAAG,EAAE;AACrC;AAEa,SAAUC,iBAAiBA,CACvCC,SAAY,EACZ9D,IAAgD;;EAGhD,IACE0D,MAAI,CAACE,0BAA0B,CAACG,IAAI,CAClC,UAACC,CAAwB;IACvB,OAAAA,CAAC,CAACF,SAAS,KAAKA,SAAS,IAAIE,CAAC,CAAChE,IAAI,CAACF,IAAI,KAAKE,IAAI,CAACF,IAAI;EAAtD,CAAsD,CACzD,EACD;IACA;EACD;EACD4D,MAAI,CAACE,0BAA0B,CAACjJ,IAAI,CAAC;IAAEmJ,SAAS,EAAAA,SAAA;IAAE9D,IAAI,EAAAA;EAAA,CAAE,CAAC;AAC3D;ACtZA,IAAMiE,MAAI,GAAG5M,UAAiB;AAuK9B,IAAI4M,MAAI,CAACC,0BAA0B,IAAI,IAAI,EAAE;EAC3CD,MAAI,CAACC,0BAA0B,GAAG,EAAE;AACrC;AAEa,SAAUC,gBAAgBA,CACtCC,EAAK,EACLpE,IAA2B;;EAG3B,IACEiE,MAAI,CAACC,0BAA0B,CAACH,IAAI,CAClC,UAACC,CAA6B;IAC5B,OAAAA,CAAC,CAACK,QAAQ,KAAKD,EAAE,IACjBJ,CAAC,CAAChE,IAAI,CAACF,IAAI,KAAKE,IAAI,CAACF,IAAI,IACzBkE,CAAC,CAAChE,IAAI,CAACsE,SAAS,IAAItE,IAAI,CAACsE,SAAS;EAFlC,CAEkC,CACrC,EACD;IACA;EACD;EACDL,MAAI,CAACC,0BAA0B,CAACvJ,IAAI,CAAC;IAAE0J,QAAQ,EAAED,EAAE;IAAEpE,IAAI,EAAAA;EAAA,CAAE,CAAC;AAC9D;AChLA,IAAMuE,MAAI,GAAGlN,UAAiB;AA6F9B,IAAIkN,MAAI,CAACC,wBAAwB,IAAI,IAAI,EAAE;EACzCD,MAAI,CAACC,wBAAwB,GAAG,EAAE;AACnC;AAEa,SAAUC,qBAAqBA,CAE3CX,SAAY,EAAE9D,IAAgD;;EAE9D,IACEuE,MAAI,CAACC,wBAAwB,CAACT,IAAI,CAChC,UAACC,CAA4B;IAC3B,OAAAA,CAAC,CAACF,SAAS,KAAKA,SAAS,IAAIE,CAAC,CAAChE,IAAI,CAACF,IAAI,KAAKE,IAAI,CAACF,IAAI;EAAtD,CAAsD,CACzD,EACD;IACA;EACD;EACDyE,MAAI,CAACC,wBAAwB,CAAC7J,IAAI,CAAC;IAAEmJ,SAAS,EAAAA,SAAA;IAAE9D,IAAI,EAAAA;EAAA,CAAE,CAAC;AACzD;AC/EA,IAAM0E,MAAI,GAAGrN,UAAiB;AAE9B,IAAIqN,MAAI,CAACC,sBAAsB,IAAI,IAAI,EAAE;EACvCD,MAAI,CAACC,sBAAsB,GAAG,EAAE;AACjC;AAEuB,SAAAC,aAAaA,CAACC,KAAwB;EAC5DH,MAAI,CAACC,sBAAsB,CAAChK,IAAI,CAACkK,KAAK,CAAC;AACzC;AClDA,IAAMC,MAAI,GAAGzN,UAAiB;AA0B9B,IAAIyN,MAAI,CAACC,sBAAsB,IAAI,IAAI,EAAE;EACvCD,MAAI,CAACC,sBAAsB,GAAG,EAAE;AACjC;AAEa,SAAUC,aAAaA,CAACC,KAAa,EAAEjF,IAAe;EAClE8E,MAAI,CAACC,sBAAsB,CAACpK,IAAI,CAAC;IAC/BsK,KAAK,EAAAA,KAAA;IACLjF,IAAI,EAAAA;EACL,EAAC;AACJ;;ACnBc,SAAUkF,eAAeA,CAAItK,KAAuB,EAAEuK,GAAM;EACxE,OAAOC,iBAAiB,CAACxK,KAAY,EAAEuK,GAAG,CAAC;AAC7C;AAEA,IAAIC,iBAAiB,GAA2B,SAAAA,CAC9CxK,KAAuB,EACvBuK,GAAQ;EAER,IAAIrD,KAAK,CAACC,OAAO,CAACoD,GAAG,CAAC,EAAE;IACtB,OAAOA,GAAG,CAACrE,GAAG,CAAC,UAACuE,CAAC,EAAK;MAAA,OAAAD,iBAAiB,CAACxK,KAAY,EAAEyK,CAAC,CAAC;IAAlC,CAAkC,CAAQ;EACjE;EACD,IAAIF,GAAG,IAAIG,cAAc,CAACH,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzD,OAAOI,YAAY,CAACJ,GAAG,CAAQ;EAChC;EACD,OAAOA,GAAG;AACZ,CAAC;AAED,IAAMK,MAAI,GAAGnO,UAAiB;AACvB,IAAMoO,oBAAoB,GAC/B,CAAAnL,EAAA,IAAAoL,IAAA,GAAAF,MAAI,aAAJA,MAAI,uBAAJA,MAAI,CAAEG,KAAK,cAAAD,IAAA,uBAAAA,IAAA,CAAED,oBAAoB,cAAAnL,EAAA,cAAAA,EAAA,GACjC,UAAU8J,EAA0B;EAClCgB,iBAAiB,GAAGhB,EAAE;AACxB,CAAC;ACtBU,IAAAwB,wBAAwB,GAAGvE,cAAK,CAACzH,aAAa,CAEzDjD,SAAS;SAEKkP,oBAAoBA,CAAA;EAClC,IAAMC,EAAE,GAAGzE,cAAK,CAACvH,UAAU,CAAC8L,wBAAwB,CAAC;EACrD,IAAMG,UAAU,GAAGD,EAAE,GACjB,OAAOA,EAAE,KAAK,UAAU,GACtBA,EAAE,GACFA,EAAE,CAACC,UAAU,GACfpP,SAAS;EACb,OAAOoP,UAAU;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BO,IAAMC,WAAW,GAAG,SAAS;;ACYpC,IAAMC,IAAI,GAAG5O,UAAiB;AAE9B,IAAI4O,IAAI,CAACN,KAAK,IAAI,IAAI,EAAE;;;;;;EAMtBM,IAAI,CAACN,KAAK,GAAArE,QAAA;IACR3H,KAAK,EAAAA,KAAA;IACLwC,QAAQ,EAAAA,QAAA;IACR+J,YAAY,EAAAA,YAAA;IACZC,UAAU,EAAAA,UAAA;IACVH,WAAW,EAAAA,WAAA;IACXI,SAAS,EAAE;MACT5M,kBAAkB,EAAAA,kBAAA;MAClBgE,2BAA2B,EAAAA,2BAAA;MAC3BiI,oBAAoB,EAAAA;IACrB;;IAGDjM,kBAAkB,EAAAA,kBAAA;IAClBgE,2BAA2B,EAAAA,2BAAA;IAC3BiI,oBAAoB,EAAAA;EAAA,GACjBU,UAAU,CACd;AACF,OAAM;EACLE,OAAO,CAACC,IAAI,CACV,8CAAAzP,MAAA,CAA8CoP,IAAI,CAACN,KAAK,CAACK,WAAW,UAAAnP,MAAA,CAAOmP,WAAW,CAAE,CACzF;EACDC,IAAI,CAACN,KAAK,CAACY,qBAAqB,GAAG,CAAAxP,EAAA,GAAAkP,IAAI,CAACN,KAAK,CAACY,qBAAqB,cAAAxP,EAAA,cAAAA,EAAA,GAAI,EAAE;EACzEkP,IAAI,CAACN,KAAK,CAACY,qBAAqB,CAAC5L,IAAI,CAACqL,WAAW,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}