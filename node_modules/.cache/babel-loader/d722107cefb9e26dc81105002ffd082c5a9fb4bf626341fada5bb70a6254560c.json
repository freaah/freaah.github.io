{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { BaseCollection as $23b9f4fcf0fe224b$export$408d25a4e12db025 } from \"./BaseCollection.mjs\";\nimport { Document as $681cc3c98f569e39$export$b34a105447964f9f } from \"./Document.mjs\";\nimport { useCachedChildren as $e948873055cbafe4$export$727c8fc270210f13 } from \"./useCachedChildren.mjs\";\nimport { Hidden as $f39a9eba43920ace$export$8dc98ba7eadeaa56 } from \"./Hidden.mjs\";\nimport { createPortal as $95feo$createPortal } from \"react-dom\";\nimport $95feo$react, { createContext as $95feo$createContext, useContext as $95feo$useContext, useRef as $95feo$useRef, useCallback as $95feo$useCallback, useState as $95feo$useState, forwardRef as $95feo$forwardRef, useMemo as $95feo$useMemo } from \"react\";\nimport { useIsSSR as $95feo$useIsSSR } from \"@react-aria/ssr\";\nimport { useLayoutEffect as $95feo$useLayoutEffect } from \"@react-aria/utils\";\nimport { useSyncExternalStore as $95feo$useSyncExternalStore } from \"use-sync-external-store/shim/index.js\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $e1995378a142960e$var$ShallowRenderContext = /*#__PURE__*/(0, $95feo$createContext)(false);\nconst $e1995378a142960e$var$CollectionDocumentContext = /*#__PURE__*/(0, $95feo$createContext)(null);\nfunction $e1995378a142960e$export$bf788dd355e3a401(props) {\n  // If a document was provided above us, we're already in a hidden tree. Just render the content.\n  let doc = (0, $95feo$useContext)($e1995378a142960e$var$CollectionDocumentContext);\n  if (doc)\n    // The React types prior to 18 did not allow returning ReactNode from components\n    // even though the actual implementation since React 16 did.\n    // We must return ReactElement so that TS does not complain that <CollectionBuilder>\n    // is not a valid JSX element with React 16 and 17 types.\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.content;\n  // Otherwise, render a hidden copy of the children so that we can build the collection before constructing the state.\n  // This should always come before the real DOM content so we have built the collection by the time it renders during SSR.\n  // This is fine. CollectionDocumentContext never changes after mounting.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let {\n    collection: collection,\n    document: document\n  } = $e1995378a142960e$var$useCollectionDocument(props.createCollection);\n  return /*#__PURE__*/(0, $95feo$react).createElement((0, $95feo$react).Fragment, null, /*#__PURE__*/(0, $95feo$react).createElement((0, $f39a9eba43920ace$export$8dc98ba7eadeaa56), null, /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$CollectionDocumentContext.Provider, {\n    value: document\n  }, props.content)), /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$CollectionInner, {\n    render: props.children,\n    collection: collection\n  }));\n}\nfunction $e1995378a142960e$var$CollectionInner(_ref) {\n  let {\n    collection: collection,\n    render: render\n  } = _ref;\n  return render(collection);\n}\n// React 16 and 17 don't support useSyncExternalStore natively, and the shim provided by React does not support getServerSnapshot.\n// This wrapper uses the shim, but additionally calls getServerSnapshot during SSR (according to SSRProvider).\nfunction $e1995378a142960e$var$useSyncExternalStoreFallback(subscribe, getSnapshot, getServerSnapshot) {\n  let isSSR = (0, $95feo$useIsSSR)();\n  let isSSRRef = (0, $95feo$useRef)(isSSR);\n  // This is read immediately inside the wrapper, which also runs during render.\n  // We just need a ref to avoid invalidating the callback itself, which\n  // would cause React to re-run the callback more than necessary.\n  // eslint-disable-next-line rulesdir/pure-render\n  isSSRRef.current = isSSR;\n  let getSnapshotWrapper = (0, $95feo$useCallback)(() => {\n    return isSSRRef.current ? getServerSnapshot() : getSnapshot();\n  }, [getSnapshot, getServerSnapshot]);\n  return (0, $95feo$useSyncExternalStore)(subscribe, getSnapshotWrapper);\n}\nconst $e1995378a142960e$var$useSyncExternalStore = typeof (0, $95feo$react)['useSyncExternalStore'] === 'function' ? (0, $95feo$react)['useSyncExternalStore'] : $e1995378a142960e$var$useSyncExternalStoreFallback;\nfunction $e1995378a142960e$var$useCollectionDocument(createCollection) {\n  // The document instance is mutable, and should never change between renders.\n  // useSyncExternalStore is used to subscribe to updates, which vends immutable Collection objects.\n  let [document] = (0, $95feo$useState)(() => new (0, $681cc3c98f569e39$export$b34a105447964f9f)((createCollection === null || createCollection === void 0 ? void 0 : createCollection()) || new (0, $23b9f4fcf0fe224b$export$408d25a4e12db025)()));\n  let subscribe = (0, $95feo$useCallback)(fn => document.subscribe(fn), [document]);\n  let getSnapshot = (0, $95feo$useCallback)(() => {\n    let collection = document.getCollection();\n    if (document.isSSR)\n      // After SSR is complete, reset the document to empty so it is ready for React to render the portal into.\n      // We do this _after_ getting the collection above so that the collection still has content in it from SSR\n      // during the current render, before React has finished the client render.\n      document.resetAfterSSR();\n    return collection;\n  }, [document]);\n  let getServerSnapshot = (0, $95feo$useCallback)(() => {\n    document.isSSR = true;\n    return document.getCollection();\n  }, [document]);\n  let collection = $e1995378a142960e$var$useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  (0, $95feo$useLayoutEffect)(() => {\n    document.isMounted = true;\n    return () => {\n      // Mark unmounted so we can skip all of the collection updates caused by \n      // React calling removeChild on every item in the collection.\n      document.isMounted = false;\n    };\n  }, [document]);\n  return {\n    collection: collection,\n    document: document\n  };\n}\nconst $e1995378a142960e$var$SSRContext = /*#__PURE__*/(0, $95feo$createContext)(null);\nfunction $e1995378a142960e$var$useSSRCollectionNode(Type, props, ref, rendered, children, render) {\n  // During SSR, portals are not supported, so the collection children will be wrapped in an SSRContext.\n  // Since SSR occurs only once, we assume that the elements are rendered in order and never re-render.\n  // Therefore we can create elements in our collection document during render so that they are in the\n  // collection by the time we need to use the collection to render to the real DOM.\n  // After hydration, we switch to client rendering using the portal.\n  let itemRef = (0, $95feo$useCallback)(element => {\n    element === null || element === void 0 ? void 0 : element.setProps(props, ref, rendered, render);\n  }, [props, ref, rendered, render]);\n  let parentNode = (0, $95feo$useContext)($e1995378a142960e$var$SSRContext);\n  if (parentNode) {\n    // Guard against double rendering in strict mode.\n    let element = parentNode.ownerDocument.nodesByProps.get(props);\n    if (!element) {\n      element = parentNode.ownerDocument.createElement(Type);\n      element.setProps(props, ref, rendered, render);\n      parentNode.appendChild(element);\n      parentNode.ownerDocument.updateCollection();\n      parentNode.ownerDocument.nodesByProps.set(props, element);\n    }\n    return children ? /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$SSRContext.Provider, {\n      value: element\n    }, children) : null;\n  }\n  // @ts-ignore\n  return /*#__PURE__*/(0, $95feo$react).createElement(Type, {\n    ref: itemRef\n  }, children);\n}\nfunction $e1995378a142960e$export$18af5c7a9e9b3664(type, render) {\n  let Component = _ref2 => {\n    let {\n      node: node\n    } = _ref2;\n    return render(node.props, node.props.ref, node);\n  };\n  let Result = (0, $95feo$forwardRef)((props, ref) => {\n    let isShallow = (0, $95feo$useContext)($e1995378a142960e$var$ShallowRenderContext);\n    if (!isShallow) {\n      if (render.length >= 3) throw new Error(render.name + ' cannot be rendered outside a collection.');\n      return render(props, ref);\n    }\n    return $e1995378a142960e$var$useSSRCollectionNode(type, props, ref, 'children' in props ? props.children : null, null, node => /*#__PURE__*/(0, $95feo$react).createElement(Component, {\n      node: node\n    }));\n  });\n  // @ts-ignore\n  Result.displayName = render.name;\n  return Result;\n}\nfunction $e1995378a142960e$export$e953bb1cd0f19726(type, render) {\n  let useChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : $e1995378a142960e$var$useCollectionChildren;\n  let Component = _ref3 => {\n    let {\n      node: node\n    } = _ref3;\n    return render(node.props, node.props.ref, node);\n  };\n  let Result = (0, $95feo$forwardRef)((props, ref) => {\n    let children = useChildren(props);\n    var _useSSRCollectionNode;\n    return (_useSSRCollectionNode = $e1995378a142960e$var$useSSRCollectionNode(type, props, ref, null, children, node => /*#__PURE__*/(0, $95feo$react).createElement(Component, {\n      node: node\n    }))) !== null && _useSSRCollectionNode !== void 0 ? _useSSRCollectionNode : /*#__PURE__*/(0, $95feo$react).createElement((0, $95feo$react).Fragment, null);\n  });\n  // @ts-ignore\n  Result.displayName = render.name;\n  return Result;\n}\nfunction $e1995378a142960e$var$useCollectionChildren(options) {\n  return (0, $e948873055cbafe4$export$727c8fc270210f13)(_objectSpread(_objectSpread({}, options), {}, {\n    addIdAndValue: true\n  }));\n}\nconst $e1995378a142960e$var$CollectionContext = /*#__PURE__*/(0, $95feo$createContext)(null);\nfunction $e1995378a142960e$export$fb8073518f34e6ec(props) {\n  let ctx = (0, $95feo$useContext)($e1995378a142960e$var$CollectionContext);\n  let dependencies = ((ctx === null || ctx === void 0 ? void 0 : ctx.dependencies) || []).concat(props.dependencies);\n  let idScope = props.idScope || (ctx === null || ctx === void 0 ? void 0 : ctx.idScope);\n  let children = $e1995378a142960e$var$useCollectionChildren(_objectSpread(_objectSpread({}, props), {}, {\n    idScope: idScope,\n    dependencies: dependencies\n  }));\n  let doc = (0, $95feo$useContext)($e1995378a142960e$var$CollectionDocumentContext);\n  if (doc) children = /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$CollectionRoot, null, children);\n  // Propagate dependencies and idScope to child collections.\n  ctx = (0, $95feo$useMemo)(() => ({\n    dependencies: dependencies,\n    idScope: idScope\n  }), [idScope, ...dependencies]);\n  return /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$CollectionContext.Provider, {\n    value: ctx\n  }, children);\n}\nfunction $e1995378a142960e$var$CollectionRoot(_ref4) {\n  let {\n    children: children\n  } = _ref4;\n  let doc = (0, $95feo$useContext)($e1995378a142960e$var$CollectionDocumentContext);\n  let wrappedChildren = (0, $95feo$useMemo)(() => /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$CollectionDocumentContext.Provider, {\n    value: null\n  }, /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$ShallowRenderContext.Provider, {\n    value: true\n  }, children)), [children]);\n  // During SSR, we render the content directly, and append nodes to the document during render.\n  // The collection children return null so that nothing is actually rendered into the HTML.\n  return (0, $95feo$useIsSSR)() ? /*#__PURE__*/(0, $95feo$react).createElement($e1995378a142960e$var$SSRContext.Provider, {\n    value: doc\n  }, wrappedChildren) : /*#__PURE__*/(0, $95feo$createPortal)(wrappedChildren, doc);\n}\nexport { $e1995378a142960e$export$bf788dd355e3a401 as CollectionBuilder, $e1995378a142960e$export$18af5c7a9e9b3664 as createLeafComponent, $e1995378a142960e$export$e953bb1cd0f19726 as createBranchComponent, $e1995378a142960e$export$fb8073518f34e6ec as Collection };","map":{"version":3,"names":["$e1995378a142960e$var$ShallowRenderContext","$95feo$createContext","$e1995378a142960e$var$CollectionDocumentContext","$e1995378a142960e$export$bf788dd355e3a401","props","doc","$95feo$useContext","content","collection","document","$e1995378a142960e$var$useCollectionDocument","createCollection","$95feo$react","createElement","Fragment","$f39a9eba43920ace$export$8dc98ba7eadeaa56","Provider","value","$e1995378a142960e$var$CollectionInner","render","children","_ref","$e1995378a142960e$var$useSyncExternalStoreFallback","subscribe","getSnapshot","getServerSnapshot","isSSR","$95feo$useIsSSR","isSSRRef","$95feo$useRef","current","getSnapshotWrapper","$95feo$useCallback","$95feo$useSyncExternalStore","$e1995378a142960e$var$useSyncExternalStore","$95feo$useState","$681cc3c98f569e39$export$b34a105447964f9f","$23b9f4fcf0fe224b$export$408d25a4e12db025","fn","getCollection","resetAfterSSR","$95feo$useLayoutEffect","isMounted","$e1995378a142960e$var$SSRContext","$e1995378a142960e$var$useSSRCollectionNode","Type","ref","rendered","itemRef","element","setProps","parentNode","ownerDocument","nodesByProps","get","appendChild","updateCollection","set","$e1995378a142960e$export$18af5c7a9e9b3664","type","Component","_ref2","node","Result","$95feo$forwardRef","isShallow","length","Error","name","displayName","$e1995378a142960e$export$e953bb1cd0f19726","useChildren","arguments","undefined","$e1995378a142960e$var$useCollectionChildren","_ref3","_useSSRCollectionNode","options","$e948873055cbafe4$export$727c8fc270210f13","_objectSpread","addIdAndValue","$e1995378a142960e$var$CollectionContext","$e1995378a142960e$export$fb8073518f34e6ec","ctx","dependencies","concat","idScope","$e1995378a142960e$var$CollectionRoot","$95feo$useMemo","_ref4","wrappedChildren","$95feo$createPortal"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-aria\\collections\\dist\\packages\\@react-aria\\collections\\src\\CollectionBuilder.tsx"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseCollection} from './BaseCollection';\nimport {BaseNode, Document, ElementNode} from './Document';\nimport {CachedChildrenOptions, useCachedChildren} from './useCachedChildren';\nimport {createPortal} from 'react-dom';\nimport {forwardRefType, Node} from '@react-types/shared';\nimport {Hidden} from './Hidden';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactElement, ReactNode, useCallback, useContext, useMemo, useRef, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useSyncExternalStore as useSyncExternalStoreShim} from 'use-sync-external-store/shim/index.js';\n\nconst ShallowRenderContext = createContext(false);\nconst CollectionDocumentContext = createContext<Document<any, BaseCollection<any>> | null>(null);\n\nexport interface CollectionBuilderProps<C extends BaseCollection<object>> {\n  content: ReactNode,\n  children: (collection: C) => ReactNode,\n  createCollection?: () => C\n}\n\n/**\n * Builds a `Collection` from the children provided to the `content` prop, and passes it to the child render prop function.\n */\nexport function CollectionBuilder<C extends BaseCollection<object>>(props: CollectionBuilderProps<C>): ReactElement {\n  // If a document was provided above us, we're already in a hidden tree. Just render the content.\n  let doc = useContext(CollectionDocumentContext);\n  if (doc) {\n    // The React types prior to 18 did not allow returning ReactNode from components\n    // even though the actual implementation since React 16 did.\n    // We must return ReactElement so that TS does not complain that <CollectionBuilder>\n    // is not a valid JSX element with React 16 and 17 types.\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.content as ReactElement;\n  }\n\n  // Otherwise, render a hidden copy of the children so that we can build the collection before constructing the state.\n  // This should always come before the real DOM content so we have built the collection by the time it renders during SSR.\n\n  // This is fine. CollectionDocumentContext never changes after mounting.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let {collection, document} = useCollectionDocument(props.createCollection);\n  return (\n    <>\n      <Hidden>\n        <CollectionDocumentContext.Provider value={document}>\n          {props.content}\n        </CollectionDocumentContext.Provider>\n      </Hidden>\n      <CollectionInner render={props.children} collection={collection} />\n    </>\n  );\n}\n\nfunction CollectionInner({collection, render}) {\n  return render(collection);\n}\n\ninterface CollectionDocumentResult<T, C extends BaseCollection<T>> {\n  collection: C,\n  document: Document<T, C>\n}\n\n// React 16 and 17 don't support useSyncExternalStore natively, and the shim provided by React does not support getServerSnapshot.\n// This wrapper uses the shim, but additionally calls getServerSnapshot during SSR (according to SSRProvider).\nfunction useSyncExternalStoreFallback<C>(subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => C, getServerSnapshot: () => C): C {\n  let isSSR = useIsSSR();\n  let isSSRRef = useRef(isSSR);\n  // This is read immediately inside the wrapper, which also runs during render.\n  // We just need a ref to avoid invalidating the callback itself, which\n  // would cause React to re-run the callback more than necessary.\n  // eslint-disable-next-line rulesdir/pure-render\n  isSSRRef.current = isSSR;\n\n  let getSnapshotWrapper = useCallback(() => {\n    return isSSRRef.current ? getServerSnapshot() : getSnapshot();\n  }, [getSnapshot, getServerSnapshot]);\n  return useSyncExternalStoreShim(subscribe, getSnapshotWrapper);\n}\n\nconst useSyncExternalStore = typeof React['useSyncExternalStore'] === 'function'\n  ? React['useSyncExternalStore']\n  : useSyncExternalStoreFallback;\n\nfunction useCollectionDocument<T extends object, C extends BaseCollection<T>>(createCollection?: () => C): CollectionDocumentResult<T, C> {\n  // The document instance is mutable, and should never change between renders.\n  // useSyncExternalStore is used to subscribe to updates, which vends immutable Collection objects.\n  let [document] = useState(() => new Document<T, C>(createCollection?.() || new BaseCollection() as C));\n  let subscribe = useCallback((fn: () => void) => document.subscribe(fn), [document]);\n  let getSnapshot = useCallback(() => {\n    let collection = document.getCollection();\n    if (document.isSSR) {\n      // After SSR is complete, reset the document to empty so it is ready for React to render the portal into.\n      // We do this _after_ getting the collection above so that the collection still has content in it from SSR\n      // during the current render, before React has finished the client render.\n      document.resetAfterSSR();\n    }\n    return collection;\n  }, [document]);\n  let getServerSnapshot = useCallback(() => {\n    document.isSSR = true;\n    return document.getCollection();\n  }, [document]);\n  let collection = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  useLayoutEffect(() => {\n    document.isMounted = true;\n    return () => {\n      // Mark unmounted so we can skip all of the collection updates caused by \n      // React calling removeChild on every item in the collection.\n      document.isMounted = false;\n    };\n  }, [document]);\n  return {collection, document};\n}\n\nconst SSRContext = createContext<BaseNode<any> | null>(null);\n\nfunction useSSRCollectionNode<T extends Element>(Type: string, props: object, ref: ForwardedRef<T>, rendered?: any, children?: ReactNode, render?: (node: Node<T>) => ReactElement) {\n  // During SSR, portals are not supported, so the collection children will be wrapped in an SSRContext.\n  // Since SSR occurs only once, we assume that the elements are rendered in order and never re-render.\n  // Therefore we can create elements in our collection document during render so that they are in the\n  // collection by the time we need to use the collection to render to the real DOM.\n  // After hydration, we switch to client rendering using the portal.\n  let itemRef = useCallback((element: ElementNode<any> | null) => {\n    element?.setProps(props, ref, rendered, render);\n  }, [props, ref, rendered, render]);\n  let parentNode = useContext(SSRContext);\n  if (parentNode) {\n    // Guard against double rendering in strict mode.\n    let element = parentNode.ownerDocument.nodesByProps.get(props);\n    if (!element) {\n      element = parentNode.ownerDocument.createElement(Type);\n      element.setProps(props, ref, rendered, render);\n      parentNode.appendChild(element);\n      parentNode.ownerDocument.updateCollection();\n      parentNode.ownerDocument.nodesByProps.set(props, element);\n    }\n\n    return children\n      ? <SSRContext.Provider value={element}>{children}</SSRContext.Provider>\n      : null;\n  }\n\n  // @ts-ignore\n  return <Type ref={itemRef}>{children}</Type>;\n}\n\nexport function createLeafComponent<T extends object, P extends object, E extends Element>(type: string, render: (props: P, ref: ForwardedRef<E>) => ReactElement): (props: P & React.RefAttributes<T>) => ReactElement | null;\nexport function createLeafComponent<T extends object, P extends object, E extends Element>(type: string, render: (props: P, ref: ForwardedRef<E>, node: Node<T>) => ReactElement): (props: P & React.RefAttributes<T>) => ReactElement | null;\nexport function createLeafComponent<P extends object, E extends Element>(type: string, render: (props: P, ref: ForwardedRef<E>, node?: any) => ReactElement) {\n  let Component = ({node}) => render(node.props, node.props.ref, node);\n  let Result = (forwardRef as forwardRefType)((props: P, ref: ForwardedRef<E>) => {\n    let isShallow = useContext(ShallowRenderContext);\n    if (!isShallow) {\n      if (render.length >= 3) {\n        throw new Error(render.name + ' cannot be rendered outside a collection.');\n      }\n      return render(props, ref);\n    }\n\n    return useSSRCollectionNode(type, props, ref, 'children' in props ? props.children : null, null, node => <Component node={node} />);\n  });\n  // @ts-ignore\n  Result.displayName = render.name;\n  return Result;\n}\n\nexport function createBranchComponent<T extends object, P extends {children?: any}, E extends Element>(type: string, render: (props: P, ref: ForwardedRef<E>, node: Node<T>) => ReactElement, useChildren: (props: P) => ReactNode = useCollectionChildren) {\n  let Component = ({node}) => render(node.props, node.props.ref, node);\n  let Result = (forwardRef as forwardRefType)((props: P, ref: ForwardedRef<E>) => {\n    let children = useChildren(props);\n    return useSSRCollectionNode(type, props, ref, null, children, node => <Component node={node} />) ?? <></>;\n  });\n  // @ts-ignore\n  Result.displayName = render.name;\n  return Result;\n}\n\nfunction useCollectionChildren<T extends object>(options: CachedChildrenOptions<T>) {\n  return useCachedChildren({...options, addIdAndValue: true});\n}\n\nexport interface CollectionProps<T> extends CachedChildrenOptions<T> {}\n\nconst CollectionContext = createContext<CachedChildrenOptions<unknown> | null>(null);\n\n/** A Collection renders a list of items, automatically managing caching and keys. */\nexport function Collection<T extends object>(props: CollectionProps<T>): JSX.Element {\n  let ctx = useContext(CollectionContext)!;\n  let dependencies = (ctx?.dependencies || []).concat(props.dependencies);\n  let idScope = props.idScope || ctx?.idScope;\n  let children = useCollectionChildren({\n    ...props,\n    idScope,\n    dependencies\n  });\n\n  let doc = useContext(CollectionDocumentContext);\n  if (doc) {\n    children = <CollectionRoot>{children}</CollectionRoot>;\n  }\n\n  // Propagate dependencies and idScope to child collections.\n  ctx = useMemo(() => ({\n    dependencies,\n    idScope\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [idScope, ...dependencies]);\n\n  return (\n    <CollectionContext.Provider value={ctx}>\n      {children}\n    </CollectionContext.Provider>\n  );\n}\n\nfunction CollectionRoot({children}) {\n  let doc = useContext(CollectionDocumentContext);\n  let wrappedChildren = useMemo(() => (\n    <CollectionDocumentContext.Provider value={null}>\n      <ShallowRenderContext.Provider value>\n        {children}\n      </ShallowRenderContext.Provider>\n    </CollectionDocumentContext.Provider>\n  ), [children]);\n  // During SSR, we render the content directly, and append nodes to the document during render.\n  // The collection children return null so that nothing is actually rendered into the HTML.\n  return useIsSSR()\n    ? <SSRContext.Provider value={doc}>{wrappedChildren}</SSRContext.Provider>\n    : createPortal(wrappedChildren, doc as unknown as Element);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}