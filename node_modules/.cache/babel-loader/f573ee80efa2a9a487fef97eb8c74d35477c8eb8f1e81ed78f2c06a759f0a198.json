{"ast":null,"code":"import { flushSync as $6wN6e$flushSync } from \"react-dom\";\nimport { useRef as $6wN6e$useRef, useCallback as $6wN6e$useCallback, useEffect as $6wN6e$useEffect } from \"react\";\nimport { useId as $6wN6e$useId, useEvent as $6wN6e$useEvent, useLayoutEffect as $6wN6e$useLayoutEffect } from \"@react-aria/utils\";\nimport { useIsSSR as $6wN6e$useIsSSR } from \"@react-aria/ssr\";\n\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $5e910fae8e128ead$export$6e3e27031a30522f(props, state, ref) {\n  let {\n    isDisabled: isDisabled\n  } = props;\n  let triggerId = (0, $6wN6e$useId)();\n  let panelId = (0, $6wN6e$useId)();\n  let isSSR = (0, $6wN6e$useIsSSR)();\n  let supportsBeforeMatch = !isSSR && 'onbeforematch' in document.body;\n  let raf = (0, $6wN6e$useRef)(null);\n  let handleBeforeMatch = (0, $6wN6e$useCallback)(() => {\n    // Wait a frame to revert browser's removal of hidden attribute\n    raf.current = requestAnimationFrame(() => {\n      if (ref.current) ref.current.setAttribute('hidden', 'until-found');\n    });\n    // Force sync state update\n    (0, $6wN6e$flushSync)(() => {\n      state.toggle();\n    });\n  }, [ref, state]);\n  // @ts-ignore https://github.com/facebook/react/pull/24741\n  (0, $6wN6e$useEvent)(ref, 'beforematch', supportsBeforeMatch ? handleBeforeMatch : null);\n  (0, $6wN6e$useLayoutEffect)(() => {\n    // Cancel any pending RAF to prevent stale updates\n    if (raf.current) cancelAnimationFrame(raf.current);\n    // Until React supports hidden=\"until-found\": https://github.com/facebook/react/pull/24741\n    if (supportsBeforeMatch && ref.current && !isDisabled) {\n      if (state.isExpanded) ref.current.removeAttribute('hidden');else ref.current.setAttribute('hidden', 'until-found');\n    }\n  }, [isDisabled, ref, state.isExpanded, supportsBeforeMatch]);\n  (0, $6wN6e$useEffect)(() => {\n    return () => {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, []);\n  return {\n    buttonProps: {\n      id: triggerId,\n      'aria-expanded': state.isExpanded,\n      'aria-controls': panelId,\n      onPress: e => {\n        if (!isDisabled && e.pointerType !== 'keyboard') state.toggle();\n      },\n      isDisabled: isDisabled,\n      onPressStart(e) {\n        if (e.pointerType === 'keyboard' && !isDisabled) state.toggle();\n      }\n    },\n    panelProps: {\n      id: panelId,\n      // This can be overridden at the panel element level.\n      role: 'group',\n      'aria-labelledby': triggerId,\n      'aria-hidden': !state.isExpanded,\n      hidden: supportsBeforeMatch ? true : !state.isExpanded\n    }\n  };\n}\nexport { $5e910fae8e128ead$export$6e3e27031a30522f as useDisclosure };","map":{"version":3,"names":["$5e910fae8e128ead$export$6e3e27031a30522f","props","state","ref","isDisabled","triggerId","$6wN6e$useId","panelId","isSSR","$6wN6e$useIsSSR","supportsBeforeMatch","document","body","raf","$6wN6e$useRef","handleBeforeMatch","$6wN6e$useCallback","current","requestAnimationFrame","setAttribute","$6wN6e$flushSync","toggle","$6wN6e$useEvent","$6wN6e$useLayoutEffect","cancelAnimationFrame","isExpanded","removeAttribute","$6wN6e$useEffect","buttonProps","id","onPress","e","pointerType","onPressStart","panelProps","role","hidden"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-aria\\disclosure\\dist\\packages\\@react-aria\\disclosure\\src\\useDisclosure.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {DisclosureState} from '@react-stately/disclosure';\nimport {flushSync} from 'react-dom';\nimport {HTMLAttributes, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {useEvent, useId, useLayoutEffect} from '@react-aria/utils';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface AriaDisclosureProps {\n  /** Whether the disclosure is disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the disclosure's expanded state changes. */\n  onExpandedChange?: (isExpanded: boolean) => void,\n  /** Whether the disclosure is expanded (controlled). */\n  isExpanded?: boolean,\n  /** Whether the disclosure is expanded by default (uncontrolled). */\n  defaultExpanded?: boolean\n}\n\nexport interface DisclosureAria {\n  /** Props for the disclosure button. */\n  buttonProps: AriaButtonProps,\n  /** Props for the disclosure panel. */\n  panelProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a disclosure component.\n * @param props - Props for the disclosure.\n * @param state - State for the disclosure, as returned by `useDisclosureState`.\n * @param ref - A ref for the disclosure panel.\n */\nexport function useDisclosure(props: AriaDisclosureProps, state: DisclosureState, ref: RefObject<Element | null>): DisclosureAria {\n  let {\n    isDisabled\n  } = props;\n  let triggerId = useId();\n  let panelId = useId();\n  let isSSR = useIsSSR();\n  let supportsBeforeMatch = !isSSR && 'onbeforematch' in document.body;\n\n  let raf = useRef<number | null>(null);\n\n  let handleBeforeMatch = useCallback(() => {\n    // Wait a frame to revert browser's removal of hidden attribute\n    raf.current = requestAnimationFrame(() => {\n      if (ref.current) {\n        ref.current.setAttribute('hidden', 'until-found');\n      }\n    });\n    // Force sync state update\n    flushSync(() => {\n      state.toggle();\n    });\n  }, [ref, state]);\n\n  // @ts-ignore https://github.com/facebook/react/pull/24741\n  useEvent(ref, 'beforematch', supportsBeforeMatch ? handleBeforeMatch : null);\n\n  useLayoutEffect(() => {\n    // Cancel any pending RAF to prevent stale updates\n    if (raf.current) {\n      cancelAnimationFrame(raf.current);\n    }\n    // Until React supports hidden=\"until-found\": https://github.com/facebook/react/pull/24741\n    if (supportsBeforeMatch && ref.current && !isDisabled) {\n      if (state.isExpanded) {\n        ref.current.removeAttribute('hidden');\n      } else {\n        ref.current.setAttribute('hidden', 'until-found');\n      }\n    }\n  }, [isDisabled, ref, state.isExpanded, supportsBeforeMatch]);\n\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, []);\n\n  return {\n    buttonProps: {\n      id: triggerId,\n      'aria-expanded': state.isExpanded,\n      'aria-controls': panelId,\n      onPress: (e) => {\n        if (!isDisabled && e.pointerType !== 'keyboard') {\n          state.toggle();\n        }\n      },\n      isDisabled,\n      onPressStart(e) {\n        if (e.pointerType === 'keyboard' && !isDisabled) {\n          state.toggle();\n        }\n      }\n    },\n    panelProps: {\n      id: panelId,\n      // This can be overridden at the panel element level.\n      role: 'group',\n      'aria-labelledby': triggerId,\n      'aria-hidden': !state.isExpanded,\n      hidden: supportsBeforeMatch ? true : !state.isExpanded\n    }\n  };\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;AA2CO,SAASA,0CAAcC,KAA0B,EAAEC,KAAsB,EAAEC,GAA8B;EAC9G,IAAI;IAAAC,UAAA,EACFA;EAAU,CACX,GAAGH,KAAA;EACJ,IAAII,SAAA,GAAY,IAAAC,YAAI;EACpB,IAAIC,OAAA,GAAU,IAAAD,YAAI;EAClB,IAAIE,KAAA,GAAQ,IAAAC,eAAO;EACnB,IAAIC,mBAAA,GAAsB,CAACF,KAAA,IAAS,mBAAmBG,QAAA,CAASC,IAAI;EAEpE,IAAIC,GAAA,GAAM,IAAAC,aAAK,EAAiB;EAEhC,IAAIC,iBAAA,GAAoB,IAAAC,kBAAU,EAAE;IAClC;IACAH,GAAA,CAAII,OAAO,GAAGC,qBAAA,CAAsB;MAClC,IAAIf,GAAA,CAAIc,OAAO,EACbd,GAAA,CAAIc,OAAO,CAACE,YAAY,CAAC,UAAU;IAEvC;IACA;IACA,IAAAC,gBAAQ,EAAE;MACRlB,KAAA,CAAMmB,MAAM;IACd;EACF,GAAG,CAAClB,GAAA,EAAKD,KAAA,CAAM;EAEf;EACA,IAAAoB,eAAO,EAAEnB,GAAA,EAAK,eAAeO,mBAAA,GAAsBK,iBAAA,GAAoB;EAEvE,IAAAQ,sBAAc,EAAE;IACd;IACA,IAAIV,GAAA,CAAII,OAAO,EACbO,oBAAA,CAAqBX,GAAA,CAAII,OAAO;IAElC;IACA,IAAIP,mBAAA,IAAuBP,GAAA,CAAIc,OAAO,IAAI,CAACb,UAAA;MACzC,IAAIF,KAAA,CAAMuB,UAAU,EAClBtB,GAAA,CAAIc,OAAO,CAACS,eAAe,CAAC,eAE5BvB,GAAA,CAAIc,OAAO,CAACE,YAAY,CAAC,UAAU;;EAGzC,GAAG,CAACf,UAAA,EAAYD,GAAA,EAAKD,KAAA,CAAMuB,UAAU,EAAEf,mBAAA,CAAoB;EAE3D,IAAAiB,gBAAQ,EAAE;IACR,OAAO;MACL,IAAId,GAAA,CAAII,OAAO,EACbO,oBAAA,CAAqBX,GAAA,CAAII,OAAO;IAEpC;EACF,GAAG,EAAE;EAEL,OAAO;IACLW,WAAA,EAAa;MACXC,EAAA,EAAIxB,SAAA;MACJ,iBAAiBH,KAAA,CAAMuB,UAAU;MACjC,iBAAiBlB,OAAA;MACjBuB,OAAA,EAAUC,CAAA;QACR,IAAI,CAAC3B,UAAA,IAAc2B,CAAA,CAAEC,WAAW,KAAK,YACnC9B,KAAA,CAAMmB,MAAM;MAEhB;kBACAjB,UAAA;MACA6B,aAAaF,CAAC;QACZ,IAAIA,CAAA,CAAEC,WAAW,KAAK,cAAc,CAAC5B,UAAA,EACnCF,KAAA,CAAMmB,MAAM;MAEhB;IACF;IACAa,UAAA,EAAY;MACVL,EAAA,EAAItB,OAAA;MACJ;MACA4B,IAAA,EAAM;MACN,mBAAmB9B,SAAA;MACnB,eAAe,CAACH,KAAA,CAAMuB,UAAU;MAChCW,MAAA,EAAQ1B,mBAAA,GAAsB,OAAO,CAACR,KAAA,CAAMuB;IAC9C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}