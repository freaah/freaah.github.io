{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rewac\\\\OneDrive\\\\Documents\\\\GitHub\\\\scatch-store.me\\\\src\\\\components\\\\Button.jsx\";\n// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\";\nimport { PlasmicButton } from \"./plasmic/scatch/PlasmicButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button(props) {\n  // Use PlasmicButton to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicButton are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all ButtonProps here, but feel free\n  // to do whatever works for you.\n  return /*#__PURE__*/_jsxDEV(PlasmicButton, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PlasmicButton","jsxDEV","_jsxDEV","Button","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/src/components/Button.jsx"],"sourcesContent":["// This is a skeleton starter React component generated by Plasmic.\r\n// This file is owned by you, feel free to edit as you see fit.\r\nimport * as React from \"react\";\r\nimport { PlasmicButton } from \"./plasmic/scatch/PlasmicButton\";\r\n\r\nfunction Button(props) {\r\n  // Use PlasmicButton to render this component as it was\r\n  // designed in Plasmic, by activating the appropriate variants,\r\n  // attaching the appropriate event handlers, etc.  You\r\n  // can also install whatever React hooks you need here to manage state or\r\n  // fetch data.\r\n  //\r\n  // Props you can pass into PlasmicButton are:\r\n  // 1. Variants you want to activate,\r\n  // 2. Contents for slots you want to fill,\r\n  // 3. Overrides for any named node in the component to attach behavior and data,\r\n  // 4. Props to set on the root node.\r\n  //\r\n  // By default, we are just piping all ButtonProps here, but feel free\r\n  // to do whatever works for you.\r\n  return <PlasmicButton {...props} />;\r\n}\r\n\r\nexport default Button;\r\n"],"mappings":";AAAA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,MAAMA,CAACC,KAAK,EAAE;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAOF,OAAA,CAACF,aAAa;IAAA,GAAKI;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACrC;AAACC,EAAA,GAhBQN,MAAM;AAkBf,eAAeA,MAAM;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}