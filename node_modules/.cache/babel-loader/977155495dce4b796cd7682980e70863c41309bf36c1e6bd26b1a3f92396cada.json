{"ast":null,"code":"import { ButtonContext as $d2b4bc8c273e7be6$export$24d547caef80ccd1 } from \"./Button.mjs\";\nimport { DEFAULT_SLOT as $64fa3d84918910a7$export$c62b8e45d58ddad9, Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { HeadingContext as $4e85f108e88277b8$export$d688439359537581 } from \"./RSPContexts.mjs\";\nimport { PopoverContext as $07b14b47974efb58$export$9b9a0cd73afb7ca4 } from \"./Popover.mjs\";\nimport { RootMenuTriggerStateContext as $3674c52c6b3c5bce$export$795aec4671cbae19 } from \"./Menu.mjs\";\nimport { useOverlayTrigger as $6IYYA$useOverlayTrigger, useId as $6IYYA$useId, useDialog as $6IYYA$useDialog } from \"react-aria\";\nimport { filterDOMProps as $6IYYA$filterDOMProps } from \"@react-aria/utils\";\nimport { useMenuTriggerState as $6IYYA$useMenuTriggerState } from \"react-stately\";\nimport { PressResponder as $6IYYA$PressResponder } from \"@react-aria/interactions\";\nimport $6IYYA$react, { createContext as $6IYYA$createContext, useRef as $6IYYA$useRef, forwardRef as $6IYYA$forwardRef, useContext as $6IYYA$useContext } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $de32f1b87079253c$export$8b93a07348a7730c = /*#__PURE__*/(0, $6IYYA$createContext)(null);\nconst $de32f1b87079253c$export$d2f961adcb0afbe = /*#__PURE__*/(0, $6IYYA$createContext)(null);\nfunction $de32f1b87079253c$export$2e1e1122cf0cba88(props) {\n  // Use useMenuTriggerState instead of useOverlayTriggerState in case a menu is embedded in the dialog.\n  // This is needed to handle submenus.\n  let state = (0, $6IYYA$useMenuTriggerState)(props);\n  let buttonRef = (0, $6IYYA$useRef)(null);\n  let {\n    triggerProps: triggerProps,\n    overlayProps: overlayProps\n  } = (0, $6IYYA$useOverlayTrigger)({\n    type: 'dialog'\n  }, state, buttonRef);\n  // Label dialog by the trigger as a fallback if there is no title slot.\n  // This is done in RAC instead of hooks because otherwise we cannot distinguish\n  // between context and props. Normally aria-labelledby overrides the title\n  // but when sent by context we want the title to win.\n  triggerProps.id = (0, $6IYYA$useId)();\n  overlayProps['aria-labelledby'] = triggerProps.id;\n  return /*#__PURE__*/(0, $6IYYA$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$de32f1b87079253c$export$d2f961adcb0afbe, state], [(0, $3674c52c6b3c5bce$export$795aec4671cbae19), state], [$de32f1b87079253c$export$8b93a07348a7730c, overlayProps], [(0, $07b14b47974efb58$export$9b9a0cd73afb7ca4), {\n      trigger: 'DialogTrigger',\n      triggerRef: buttonRef\n    }]]\n  }, /*#__PURE__*/(0, $6IYYA$react).createElement((0, $6IYYA$PressResponder), {\n    ...triggerProps,\n    ref: buttonRef,\n    isPressed: state.isOpen\n  }, props.children));\n}\nconst $de32f1b87079253c$export$3ddf2d174ce01153 = /*#__PURE__*/(0, $6IYYA$forwardRef)(function Dialog(props, ref) {\n  let originalAriaLabelledby = props['aria-labelledby'];\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $de32f1b87079253c$export$8b93a07348a7730c);\n  let {\n    dialogProps: dialogProps,\n    titleProps: titleProps\n  } = (0, $6IYYA$useDialog)({\n    ...props,\n    // Only pass aria-labelledby from props, not context.\n    // Context is used as a fallback below.\n    'aria-labelledby': originalAriaLabelledby\n  }, ref);\n  let state = (0, $6IYYA$useContext)($de32f1b87079253c$export$d2f961adcb0afbe);\n  if (!dialogProps['aria-label'] && !dialogProps['aria-labelledby']) {\n    // If aria-labelledby exists on props, we know it came from context.\n    // Use that as a fallback in case there is no title slot.\n    if (props['aria-labelledby']) dialogProps['aria-labelledby'] = props['aria-labelledby'];else console.warn('If a Dialog does not contain a <Heading slot=\"title\">, it must have an aria-label or aria-labelledby attribute for accessibility.');\n  }\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    defaultClassName: 'react-aria-Dialog',\n    className: props.className,\n    style: props.style,\n    children: props.children,\n    values: {\n      close: (state === null || state === void 0 ? void 0 : state.close) || (() => {})\n    }\n  });\n  return /*#__PURE__*/(0, $6IYYA$react).createElement(\"section\", {\n    ...(0, $6IYYA$filterDOMProps)(props),\n    ...dialogProps,\n    ...renderProps,\n    ref: ref,\n    slot: props.slot || undefined\n  }, /*#__PURE__*/(0, $6IYYA$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[(0, $4e85f108e88277b8$export$d688439359537581), {\n      slots: {\n        [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},\n        title: {\n          ...titleProps,\n          level: 2\n        }\n      }\n    }], [(0, $d2b4bc8c273e7be6$export$24d547caef80ccd1), {\n      slots: {\n        [(0, $64fa3d84918910a7$export$c62b8e45d58ddad9)]: {},\n        close: {\n          onPress: () => state === null || state === void 0 ? void 0 : state.close()\n        }\n      }\n    }]]\n  }, renderProps.children));\n});\nexport { $de32f1b87079253c$export$8b93a07348a7730c as DialogContext, $de32f1b87079253c$export$d2f961adcb0afbe as OverlayTriggerStateContext, $de32f1b87079253c$export$2e1e1122cf0cba88 as DialogTrigger, $de32f1b87079253c$export$3ddf2d174ce01153 as Dialog };","map":{"version":3,"names":["$de32f1b87079253c$export$8b93a07348a7730c","$6IYYA$createContext","$de32f1b87079253c$export$d2f961adcb0afbe","$de32f1b87079253c$export$2e1e1122cf0cba88","props","state","$6IYYA$useMenuTriggerState","buttonRef","$6IYYA$useRef","triggerProps","overlayProps","$6IYYA$useOverlayTrigger","type","id","$6IYYA$useId","$6IYYA$react","createElement","$64fa3d84918910a7$export$2881499e37b75b9a","values","$3674c52c6b3c5bce$export$795aec4671cbae19","$07b14b47974efb58$export$9b9a0cd73afb7ca4","trigger","triggerRef","$6IYYA$PressResponder","ref","isPressed","isOpen","children","$de32f1b87079253c$export$3ddf2d174ce01153","$6IYYA$forwardRef","Dialog","originalAriaLabelledby","$64fa3d84918910a7$export$29f1550f4b0d4415","dialogProps","titleProps","$6IYYA$useDialog","$6IYYA$useContext","console","warn","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","className","style","close","$6IYYA$filterDOMProps","slot","undefined","$4e85f108e88277b8$export$d688439359537581","slots","$64fa3d84918910a7$export$c62b8e45d58ddad9","title","level","$d2b4bc8c273e7be6$export$24d547caef80ccd1","onPress"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\Dialog.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {AriaDialogProps, useDialog, useId, useOverlayTrigger} from 'react-aria';\nimport {ButtonContext} from './Button';\nimport {ContextValue, DEFAULT_SLOT, Provider, SlotProps, StyleProps, useContextProps, useRenderProps} from './utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {forwardRefType} from '@react-types/shared';\nimport {HeadingContext} from './RSPContexts';\nimport {OverlayTriggerProps, OverlayTriggerState, useMenuTriggerState} from 'react-stately';\nimport {PopoverContext} from './Popover';\nimport {PressResponder} from '@react-aria/interactions';\nimport React, {createContext, ForwardedRef, forwardRef, ReactNode, useContext, useRef} from 'react';\nimport {RootMenuTriggerStateContext} from './Menu';\n\nexport interface DialogTriggerProps extends OverlayTriggerProps {\n  children: ReactNode\n}\n\ninterface DialogRenderProps {\n  close: () => void\n}\n\nexport interface DialogProps extends AriaDialogProps, StyleProps, SlotProps {\n  /** Children of the dialog. A function may be provided to access a function to close the dialog. */\n  children?: ReactNode | ((opts: DialogRenderProps) => ReactNode)\n}\n\nexport const DialogContext = createContext<ContextValue<DialogProps, HTMLElement>>(null);\nexport const OverlayTriggerStateContext = createContext<OverlayTriggerState | null>(null);\n\n/**\n * A DialogTrigger opens a dialog when a trigger element is pressed.\n */\nexport function DialogTrigger(props: DialogTriggerProps) {\n  // Use useMenuTriggerState instead of useOverlayTriggerState in case a menu is embedded in the dialog.\n  // This is needed to handle submenus.\n  let state = useMenuTriggerState(props);\n\n  let buttonRef = useRef<HTMLButtonElement>(null);\n  let {triggerProps, overlayProps} = useOverlayTrigger({type: 'dialog'}, state, buttonRef);\n\n  // Label dialog by the trigger as a fallback if there is no title slot.\n  // This is done in RAC instead of hooks because otherwise we cannot distinguish\n  // between context and props. Normally aria-labelledby overrides the title\n  // but when sent by context we want the title to win.\n  triggerProps.id = useId();\n  overlayProps['aria-labelledby'] = triggerProps.id;\n\n  return (\n    <Provider\n      values={[\n        [OverlayTriggerStateContext, state],\n        [RootMenuTriggerStateContext, state],\n        [DialogContext, overlayProps],\n        [PopoverContext, {trigger: 'DialogTrigger', triggerRef: buttonRef}]\n      ]}>\n      <PressResponder {...triggerProps} ref={buttonRef} isPressed={state.isOpen}>\n        {props.children}\n      </PressResponder>\n    </Provider>\n  );\n}\n\n/**\n * A dialog is an overlay shown above other content in an application.\n */\nexport const Dialog = /*#__PURE__*/ (forwardRef as forwardRefType)(function Dialog(props: DialogProps, ref: ForwardedRef<HTMLElement>) {\n  let originalAriaLabelledby = props['aria-labelledby'];\n  [props, ref] = useContextProps(props, ref, DialogContext);\n  let {dialogProps, titleProps} = useDialog({\n    ...props,\n    // Only pass aria-labelledby from props, not context.\n    // Context is used as a fallback below.\n    'aria-labelledby': originalAriaLabelledby\n  }, ref);\n  let state = useContext(OverlayTriggerStateContext);\n\n  if (!dialogProps['aria-label'] && !dialogProps['aria-labelledby']) {\n    // If aria-labelledby exists on props, we know it came from context.\n    // Use that as a fallback in case there is no title slot.\n    if (props['aria-labelledby']) {\n      dialogProps['aria-labelledby'] = props['aria-labelledby'];\n    } else {\n      console.warn('If a Dialog does not contain a <Heading slot=\"title\">, it must have an aria-label or aria-labelledby attribute for accessibility.');\n    }\n  }\n\n  let renderProps = useRenderProps({\n    defaultClassName: 'react-aria-Dialog',\n    className: props.className,\n    style: props.style,\n    children: props.children,\n    values: {\n      close: state?.close || (() => {})\n    }\n  });\n\n  return (\n    <section\n      {...filterDOMProps(props)}\n      {...dialogProps}\n      {...renderProps}\n      ref={ref}\n      slot={props.slot || undefined}>\n      <Provider\n        values={[\n          [HeadingContext, {\n            slots: {\n              [DEFAULT_SLOT]: {},\n              title: {...titleProps, level: 2}\n            }\n          }],\n          [ButtonContext, {\n            slots: {\n              [DEFAULT_SLOT]: {},\n              close: {\n                onPress: () => state?.close()\n              }\n            }\n          }]\n        ]}>\n        {renderProps.children}\n      </Provider>\n    </section>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}