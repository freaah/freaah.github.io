{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { checkboxGroupData as $1ae600c947479353$export$ec98120685d4f57d } from \"./utils.mjs\";\nimport { filterDOMProps as $gtLuF$filterDOMProps, mergeProps as $gtLuF$mergeProps } from \"@react-aria/utils\";\nimport { useField as $gtLuF$useField } from \"@react-aria/label\";\nimport { useFocusWithin as $gtLuF$useFocusWithin } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n  let {\n    isDisabled: isDisabled,\n    name: name,\n    validationBehavior = 'aria'\n  } = props;\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = state.displayValidation;\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $gtLuF$useField)(_objectSpread(_objectSpread({}, props), {}, {\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span',\n    isInvalid: isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  }));\n  (0, $1ae600c947479353$export$ec98120685d4f57d).set(state, {\n    name: name,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior: validationBehavior\n  });\n  let domProps = (0, $gtLuF$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = (0, $gtLuF$useFocusWithin)({\n    onBlurWithin: props.onBlur,\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n  return {\n    groupProps: (0, $gtLuF$mergeProps)(domProps, _objectSpread(_objectSpread({\n      role: 'group',\n      'aria-disabled': isDisabled || undefined\n    }, fieldProps), focusWithinProps)),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup };","map":{"version":3,"names":["$1e9fce0cfacc738b$export$49ff6f28c54f1cbe","props","state","isDisabled","name","validationBehavior","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","fieldProps","descriptionProps","errorMessageProps","$gtLuF$useField","_objectSpread","labelElementType","errorMessage","$1ae600c947479353$export$ec98120685d4f57d","set","descriptionId","id","errorMessageId","domProps","$gtLuF$filterDOMProps","labelable","focusWithinProps","$gtLuF$useFocusWithin","onBlurWithin","onBlur","onFocusWithin","onFocus","onFocusWithinChange","onFocusChange","groupProps","$gtLuF$mergeProps","role","undefined"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroup.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupProps} from '@react-types/checkbox';\nimport {checkboxGroupData} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DOMAttributes, ValidationResult} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\n\nexport interface CheckboxGroupAria extends ValidationResult {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: DOMAttributes,\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the checkbox group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the checkbox group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria {\n  let {isDisabled, name, validationBehavior = 'aria'} = props;\n  let {isInvalid, validationErrors, validationDetails} = state.displayValidation;\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span',\n    isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n\n  checkboxGroupData.set(state, {\n    name,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin: props.onBlur,\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n\n  return {\n    groupProps: mergeProps(domProps, {\n      role: 'group',\n      'aria-disabled': isDisabled || undefined,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n"],"mappings":";;;;;;AAAA;;;;;;;;;;;;AAqCO,SAASA,0CAAiBC,KAA6B,EAAEC,KAAyB;EACvF,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,IAAA,EAAEA,IAAI;IAAEC,kBAAA,GAAqB;EAAA,CAAO,GAAGJ,KAAA;EACtD,IAAI;IAAAK,SAAA,EAACA,SAAS;IAAAC,gBAAA,EAAEA,gBAAgB;IAAAC,iBAAA,EAAEA;EAAiB,CAAC,GAAGN,KAAA,CAAMO,iBAAiB;EAE9E,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,UAAA,EAAEA,UAAU;IAAAC,gBAAA,EAAEA,gBAAgB;IAAAC,iBAAA,EAAEA;EAAiB,CAAC,GAAG,IAAAC,eAAO,EAAAC,aAAA,CAAAA,aAAA,KACtEd,KAAK;IACR;IACA;IACAe,gBAAA,EAAkB;eAClBV,SAAA;IACAW,YAAA,EAAchB,KAAA,CAAMgB,YAAY,IAAIV;EAAA,EACtC;EAEA,IAAAW,yCAAgB,EAAEC,GAAG,CAACjB,KAAA,EAAO;UAC3BE,IAAA;IACAgB,aAAA,EAAeR,gBAAA,CAAiBS,EAAE;IAClCC,cAAA,EAAgBT,iBAAA,CAAkBQ,EAAE;wBACpChB;EACF;EAEA,IAAIkB,QAAA,GAAW,IAAAC,qBAAa,EAAEvB,KAAA,EAAO;IAACwB,SAAA,EAAW;EAAI;EAErD,IAAI;IAAAC,gBAAA,EAACA;EAAgB,CAAC,GAAG,IAAAC,qBAAa,EAAE;IACtCC,YAAA,EAAc3B,KAAA,CAAM4B,MAAM;IAC1BC,aAAA,EAAe7B,KAAA,CAAM8B,OAAO;IAC5BC,mBAAA,EAAqB/B,KAAA,CAAMgC;EAC7B;EAEA,OAAO;IACLC,UAAA,EAAY,IAAAC,iBAAS,EAAEZ,QAAA,EAAAR,aAAA,CAAAA,aAAA;MACrBqB,IAAA,EAAM;MACN,iBAAiBjC,UAAA,IAAckC;IAAA,GAC5B1B,UAAU,GACVe,gBAAgB,CACrB;gBACAhB,UAAA;sBACAE,gBAAA;uBACAC,iBAAA;eACAP,SAAA;sBACAC,gBAAA;uBACAC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}