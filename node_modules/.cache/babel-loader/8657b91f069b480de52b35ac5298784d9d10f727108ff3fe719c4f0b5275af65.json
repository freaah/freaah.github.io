{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"elementType\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onClick\", \"isDisabled\"];\nimport { filterDOMProps as $5Ot33$filterDOMProps, mergeProps as $5Ot33$mergeProps, useRouter as $5Ot33$useRouter, useLinkProps as $5Ot33$useLinkProps, shouldClientNavigate as $5Ot33$shouldClientNavigate } from \"@react-aria/utils\";\nimport { useFocusable as $5Ot33$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $5Ot33$usePress } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $298d61e98472621b$export$dcf14c9974fe2767(props, ref) {\n  let {\n      elementType = 'a',\n      onPress: onPress,\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      // @ts-ignore\n      onClick: deprecatedOnClick,\n      isDisabled: isDisabled\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  let linkProps = {};\n  if (elementType !== 'a') linkProps = {\n    role: 'link',\n    tabIndex: !isDisabled ? 0 : undefined\n  };\n  let {\n    focusableProps: focusableProps\n  } = (0, $5Ot33$useFocusable)(props, ref);\n  let {\n    pressProps: pressProps,\n    isPressed: isPressed\n  } = (0, $5Ot33$usePress)({\n    onPress: onPress,\n    onPressStart: onPressStart,\n    onPressEnd: onPressEnd,\n    isDisabled: isDisabled,\n    ref: ref\n  });\n  let domProps = (0, $5Ot33$filterDOMProps)(otherProps, {\n    labelable: true\n  });\n  let interactionHandlers = (0, $5Ot33$mergeProps)(focusableProps, pressProps);\n  let router = (0, $5Ot33$useRouter)();\n  let routerLinkProps = (0, $5Ot33$useLinkProps)(props);\n  return {\n    isPressed: isPressed,\n    linkProps: (0, $5Ot33$mergeProps)(domProps, routerLinkProps, _objectSpread(_objectSpread(_objectSpread({}, interactionHandlers), linkProps), {}, {\n      'aria-disabled': isDisabled || undefined,\n      'aria-current': props['aria-current'],\n      onClick: e => {\n        var _pressProps_onClick;\n        (_pressProps_onClick = pressProps.onClick) === null || _pressProps_onClick === void 0 ? void 0 : _pressProps_onClick.call(pressProps, e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n        // If a custom router is provided, prevent default and forward if this link should client navigate.\n        if (!router.isNative && e.currentTarget instanceof HTMLAnchorElement && e.currentTarget.href &&\n        // If props are applied to a router Link component, it may have already prevented default.\n        !e.isDefaultPrevented() && (0, $5Ot33$shouldClientNavigate)(e.currentTarget, e) && props.href) {\n          e.preventDefault();\n          router.open(e.currentTarget, e, props.href, props.routerOptions);\n        }\n      }\n    }))\n  };\n}\nexport { $298d61e98472621b$export$dcf14c9974fe2767 as useLink };","map":{"version":3,"names":["$298d61e98472621b$export$dcf14c9974fe2767","props","ref","elementType","onPress","onPressStart","onPressEnd","onClick","deprecatedOnClick","isDisabled","otherProps","_objectWithoutProperties","_excluded","linkProps","role","tabIndex","undefined","focusableProps","$5Ot33$useFocusable","pressProps","isPressed","$5Ot33$usePress","domProps","$5Ot33$filterDOMProps","labelable","interactionHandlers","$5Ot33$mergeProps","router","$5Ot33$useRouter","routerLinkProps","$5Ot33$useLinkProps","_objectSpread","e","_pressProps_onClick","call","console","warn","isNative","currentTarget","HTMLAnchorElement","href","isDefaultPrevented","$5Ot33$shouldClientNavigate","preventDefault","open","routerOptions"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-aria\\link\\dist\\packages\\@react-aria\\link\\src\\useLink.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLinkProps} from '@react-types/link';\nimport {DOMAttributes, FocusableElement, RefObject} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, shouldClientNavigate, useLinkProps, useRouter} from '@react-aria/utils';\nimport React from 'react';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaLinkOptions extends AriaLinkProps {\n  /** Whether the link is disabled. */\n  isDisabled?: boolean,\n  /**\n   * The HTML element used to render the link, e.g. 'a', or 'span'.\n   * @default 'a'\n   */\n  elementType?: string\n}\n\nexport interface LinkAria {\n  /** Props for the link element. */\n  linkProps: DOMAttributes,\n  /** Whether the link is currently pressed. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a link component.\n * A link allows a user to navigate to another page or resource within a web page\n * or application.\n */\nexport function useLink(props: AriaLinkOptions, ref: RefObject<FocusableElement | null>): LinkAria {\n  let {\n    elementType = 'a',\n    onPress,\n    onPressStart,\n    onPressEnd,\n    // @ts-ignore\n    onClick: deprecatedOnClick,\n    isDisabled,\n    ...otherProps\n  } = props;\n\n  let linkProps: DOMAttributes = {};\n  if (elementType !== 'a') {\n    linkProps = {\n      role: 'link',\n      tabIndex: !isDisabled ? 0 : undefined\n    };\n  }\n  let {focusableProps} = useFocusable(props, ref);\n  let {pressProps, isPressed} = usePress({onPress, onPressStart, onPressEnd, isDisabled, ref});\n  let domProps = filterDOMProps(otherProps, {labelable: true});\n  let interactionHandlers = mergeProps(focusableProps, pressProps);\n  let router = useRouter();\n  let routerLinkProps = useLinkProps(props);\n\n  return {\n    isPressed, // Used to indicate press state for visual\n    linkProps: mergeProps(domProps, routerLinkProps, {\n      ...interactionHandlers,\n      ...linkProps,\n      'aria-disabled': isDisabled || undefined,\n      'aria-current': props['aria-current'],\n      onClick: (e: React.MouseEvent<HTMLAnchorElement>) => {\n        pressProps.onClick?.(e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n\n        // If a custom router is provided, prevent default and forward if this link should client navigate.\n        if (\n          !router.isNative &&\n          e.currentTarget instanceof HTMLAnchorElement &&\n          e.currentTarget.href &&\n          // If props are applied to a router Link component, it may have already prevented default.\n          !e.isDefaultPrevented() &&\n          shouldClientNavigate(e.currentTarget, e) &&\n          props.href\n        ) {\n          e.preventDefault();\n          router.open(e.currentTarget, e, props.href, props.routerOptions);\n        }\n      }\n    })\n  };\n}\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAyCO,SAASA,0CAAQC,KAAsB,EAAEC,GAAuC;EACrF,IAAI;MACFC,WAAA,GAAc;MAAAC,OAAA,EACdA,OAAO;MAAAC,YAAA,EACPA,YAAY;MAAAC,UAAA,EACZA,UAAU;MACV;MACAC,OAAA,EAASC,iBAAiB;MAAAC,UAAA,EAC1BA;IACG,CACJ,GAAGR,KAAA;IADCS,UAAA,GAAAC,wBAAA,CACDV,KAAA,EAAAW,SAAA;EAEJ,IAAIC,SAAA,GAA2B,CAAC;EAChC,IAAIV,WAAA,KAAgB,KAClBU,SAAA,GAAY;IACVC,IAAA,EAAM;IACNC,QAAA,EAAU,CAACN,UAAA,GAAa,IAAIO;EAC9B;EAEF,IAAI;IAAAC,cAAA,EAACA;EAAc,CAAC,GAAG,IAAAC,mBAAW,EAAEjB,KAAA,EAAOC,GAAA;EAC3C,IAAI;IAAAiB,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAE;aAACjB,OAAA;kBAASC,YAAA;gBAAcC,UAAA;gBAAYG,UAAA;SAAYP;EAAG;EAC1F,IAAIoB,QAAA,GAAW,IAAAC,qBAAa,EAAEb,UAAA,EAAY;IAACc,SAAA,EAAW;EAAI;EAC1D,IAAIC,mBAAA,GAAsB,IAAAC,iBAAS,EAAET,cAAA,EAAgBE,UAAA;EACrD,IAAIQ,MAAA,GAAS,IAAAC,gBAAQ;EACrB,IAAIC,eAAA,GAAkB,IAAAC,mBAAW,EAAE7B,KAAA;EAEnC,OAAO;eACLmB,SAAA;IACAP,SAAA,EAAW,IAAAa,iBAAS,EAAEJ,QAAA,EAAUO,eAAA,EAAAE,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAC3BN,mBAAmB,GACnBZ,SAAS;MACZ,iBAAiBJ,UAAA,IAAcO,SAAA;MAC/B,gBAAgBf,KAAK,CAAC,eAAe;MACrCM,OAAA,EAAUyB,CAAA;YACRC,mBAAA;SAAAA,mBAAA,GAAAd,UAAA,CAAWZ,OAAO,cAAlB0B,mBAAA,uBAAAA,mBAAA,CAAAC,IAAA,CAAAf,UAAA,EAAqBa,CAAA;QACrB,IAAIxB,iBAAA,EAAmB;UACrBA,iBAAA,CAAkBwB,CAAA;UAClBG,OAAA,CAAQC,IAAI,CAAC;QACf;QAEA;QACA,IACE,CAACT,MAAA,CAAOU,QAAQ,IAChBL,CAAA,CAAEM,aAAa,YAAYC,iBAAA,IAC3BP,CAAA,CAAEM,aAAa,CAACE,IAAI;QACpB;QACA,CAACR,CAAA,CAAES,kBAAkB,MACrB,IAAAC,2BAAmB,EAAEV,CAAA,CAAEM,aAAa,EAAEN,CAAA,KACtC/B,KAAA,CAAMuC,IAAI,EACV;UACAR,CAAA,CAAEW,cAAc;UAChBhB,MAAA,CAAOiB,IAAI,CAACZ,CAAA,CAAEM,aAAa,EAAEN,CAAA,EAAG/B,KAAA,CAAMuC,IAAI,EAAEvC,KAAA,CAAM4C,aAAa;QACjE;MACF;IAAA,EACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}