{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ColorSwatchContext as $251c695a52d94a8d$export$83cc445538396800 } from \"./ColorSwatch.mjs\";\nimport { composeRenderProps as $64fa3d84918910a7$export$c245e6201fed2f75, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415 } from \"./utils.mjs\";\nimport $jTaLw$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { ListBox as $eed445e0843c11d0$export$41f133550aa26f48, ListBoxItem as $eed445e0843c11d0$export$a11e76429ed99b4 } from \"./ListBox.mjs\";\nimport { useColorPickerState as $jTaLw$useColorPickerState, parseColor as $jTaLw$parseColor } from \"@react-stately/color\";\nimport { filterDOMProps as $jTaLw$filterDOMProps } from \"@react-aria/utils\";\nimport $jTaLw$react, { createContext as $jTaLw$createContext, forwardRef as $jTaLw$forwardRef, useMemo as $jTaLw$useMemo, useContext as $jTaLw$useContext, useEffect as $jTaLw$useEffect } from \"react\";\nimport { useLocalizedStringFormatter as $jTaLw$useLocalizedStringFormatter, useLocale as $jTaLw$useLocale } from \"react-aria\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nconst $0bb41941cfe72bd4$export$7214f50881fc1eaf = /*#__PURE__*/(0, $jTaLw$createContext)(null);\nconst $0bb41941cfe72bd4$var$ColorMapContext = /*#__PURE__*/(0, $jTaLw$createContext)(null);\nconst $0bb41941cfe72bd4$export$b46792416e3d8515 = /*#__PURE__*/(0, $jTaLw$forwardRef)(function ColorSwatchPicker(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $0bb41941cfe72bd4$export$7214f50881fc1eaf);\n  let state = (0, $jTaLw$useColorPickerState)(props);\n  let colorMap = (0, $jTaLw$useMemo)(() => new Map(), []);\n  let formatter = (0, $jTaLw$useLocalizedStringFormatter)((0, $parcel$interopDefault($jTaLw$intlStringsmodulejs)), 'react-aria-components');\n  return /*#__PURE__*/(0, $jTaLw$react).createElement((0, $eed445e0843c11d0$export$41f133550aa26f48), _objectSpread(_objectSpread({}, (0, $jTaLw$filterDOMProps)(props, {\n    labelable: true\n  })), {}, {\n    ref: ref,\n    className: props.className || 'react-aria-ColorSwatchPicker',\n    style: props.style,\n    \"aria-label\": props['aria-label'] || (!props['aria-labelledby'] ? formatter.format('colorSwatchPicker') : undefined),\n    layout: props.layout || 'grid',\n    selectionMode: \"single\",\n    selectedKeys: [state.color.toString('hexa')],\n    onSelectionChange: keys => {\n      // single select, 'all' cannot occur. appease typescript.\n      if (keys !== 'all') state.setColor(colorMap.get([...keys][0]));\n    },\n    disallowEmptySelection: true\n  }), /*#__PURE__*/(0, $jTaLw$react).createElement($0bb41941cfe72bd4$var$ColorMapContext.Provider, {\n    value: colorMap\n  }, props.children));\n});\nconst $0bb41941cfe72bd4$export$abcd89c27081c2ef = /*#__PURE__*/(0, $jTaLw$forwardRef)(function ColorSwatchPickerItem(props, ref) {\n  let propColor = props.color || '#0000';\n  let color = (0, $jTaLw$useMemo)(() => typeof propColor === 'string' ? (0, $jTaLw$parseColor)(propColor) : propColor, [propColor]);\n  let {\n    locale: locale\n  } = (0, $jTaLw$useLocale)();\n  let map = (0, $jTaLw$useContext)($0bb41941cfe72bd4$var$ColorMapContext);\n  (0, $jTaLw$useEffect)(() => {\n    let key = color.toString('hexa');\n    map.set(key, color);\n    return () => {\n      map.delete(key);\n    };\n  }, [color, map]);\n  let wrap = v => {\n    if (typeof v === 'function') return renderProps => v(_objectSpread(_objectSpread({}, renderProps), {}, {\n      color: color\n    }));\n    return v;\n  };\n  return /*#__PURE__*/(0, $jTaLw$react).createElement((0, $eed445e0843c11d0$export$a11e76429ed99b4), _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    id: color.toString('hexa'),\n    textValue: color.getColorName(locale),\n    className: wrap(props.className || 'react-aria-ColorSwatchPickerItem'),\n    style: wrap(props.style)\n  }), (0, $64fa3d84918910a7$export$c245e6201fed2f75)(wrap(props.children), children => /*#__PURE__*/(0, $jTaLw$react).createElement((0, $251c695a52d94a8d$export$83cc445538396800).Provider, {\n    value: {\n      color: color\n    }\n  }, children)));\n});\nexport { $0bb41941cfe72bd4$export$7214f50881fc1eaf as ColorSwatchPickerContext, $0bb41941cfe72bd4$export$b46792416e3d8515 as ColorSwatchPicker, $0bb41941cfe72bd4$export$abcd89c27081c2ef as ColorSwatchPickerItem };","map":{"version":3,"names":["$0bb41941cfe72bd4$export$7214f50881fc1eaf","$jTaLw$createContext","$0bb41941cfe72bd4$var$ColorMapContext","$0bb41941cfe72bd4$export$b46792416e3d8515","$jTaLw$forwardRef","ColorSwatchPicker","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","state","$jTaLw$useColorPickerState","colorMap","$jTaLw$useMemo","Map","formatter","$jTaLw$useLocalizedStringFormatter","$parcel$interopDefault","$jTaLw$intlStringsmodulejs","$jTaLw$react","createElement","$eed445e0843c11d0$export$41f133550aa26f48","_objectSpread","$jTaLw$filterDOMProps","labelable","className","style","format","undefined","layout","selectionMode","selectedKeys","color","toString","onSelectionChange","keys","setColor","get","disallowEmptySelection","Provider","value","children","$0bb41941cfe72bd4$export$abcd89c27081c2ef","ColorSwatchPickerItem","propColor","$jTaLw$parseColor","locale","$jTaLw$useLocale","map","$jTaLw$useContext","$jTaLw$useEffect","key","set","delete","wrap","v","renderProps","$eed445e0843c11d0$export$a11e76429ed99b4","id","textValue","getColorName","$64fa3d84918910a7$export$c245e6201fed2f75","$251c695a52d94a8d$export$83cc445538396800"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\ColorSwatchPicker.tsx"],"sourcesContent":["import {AriaLabelingProps, HoverEvents, ValueBase} from '@react-types/shared';\nimport {Color, parseColor, useColorPickerState} from '@react-stately/color';\nimport {ColorSwatchContext} from './ColorSwatch';\nimport {composeRenderProps, ContextValue, RenderProps, StyleRenderProps, useContextProps} from './utils';\nimport {filterDOMProps} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {ListBox, ListBoxItem, ListBoxItemRenderProps, ListBoxRenderProps} from './ListBox';\nimport React, {createContext, ForwardedRef, forwardRef, ReactNode, useContext, useEffect, useMemo} from 'react';\nimport {useLocale, useLocalizedStringFormatter} from 'react-aria';\n\nexport interface ColorSwatchPickerRenderProps extends Omit<ListBoxRenderProps, 'isDropTarget'> {}\nexport interface ColorSwatchPickerProps extends ValueBase<string | Color, Color>, AriaLabelingProps, StyleRenderProps<ColorSwatchPickerRenderProps> {\n  /** The children of the ColorSwatchPicker. */\n  children?: ReactNode,\n  /**\n   * Whether the items are arranged in a stack or grid.\n   * @default 'grid'\n   */\n  layout?: 'grid' | 'stack'\n}\n\nexport const ColorSwatchPickerContext = createContext<ContextValue<ColorSwatchPickerProps, HTMLDivElement>>(null);\nconst ColorMapContext = createContext<Map<string, Color> | null>(null);\n\n/**\n * A ColorSwatchPicker displays a list of color swatches and allows a user to select one of them.\n */\nexport const ColorSwatchPicker = forwardRef(function ColorSwatchPicker(props: ColorSwatchPickerProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ColorSwatchPickerContext);\n  let state = useColorPickerState(props);\n  let colorMap = useMemo(() => new Map(), []);\n  let formatter = useLocalizedStringFormatter(intlMessages, 'react-aria-components');\n\n  return (\n    <ListBox\n      {...filterDOMProps(props, {labelable: true})}\n      ref={ref}\n      className={props.className || 'react-aria-ColorSwatchPicker'}\n      style={props.style}\n      aria-label={props['aria-label'] || (!props['aria-labelledby'] ? formatter.format('colorSwatchPicker') : undefined)}\n      layout={props.layout || 'grid'}\n      selectionMode=\"single\"\n      selectedKeys={[state.color.toString('hexa')]}\n      onSelectionChange={(keys) => {\n        // single select, 'all' cannot occur. appease typescript.\n        if (keys !== 'all') {\n          state.setColor(colorMap.get([...keys][0]));\n        }\n      }}\n      disallowEmptySelection>\n      <ColorMapContext.Provider value={colorMap}>\n        {props.children}\n      </ColorMapContext.Provider>\n    </ListBox>\n  );\n});\n\nexport interface ColorSwatchPickerItemRenderProps extends Omit<ListBoxItemRenderProps, 'selectionMode' | 'selectionBehavior'> {\n  /** The color of the swatch. */\n  color: Color\n}\n\nexport interface ColorSwatchPickerItemProps extends RenderProps<ColorSwatchPickerItemRenderProps>, HoverEvents {\n  /** The color of the swatch. */\n  color: string | Color,\n  /** Whether the color swatch is disabled. */\n  isDisabled?: boolean\n}\n\nexport const ColorSwatchPickerItem = forwardRef(function ColorSwatchPickerItem(props: ColorSwatchPickerItemProps, ref: ForwardedRef<HTMLDivElement>) {\n  let propColor = props.color || '#0000';\n  let color = useMemo(() => typeof propColor === 'string' ? parseColor(propColor) : propColor, [propColor]);\n  let {locale} = useLocale();\n  let map = useContext(ColorMapContext)!;\n  useEffect(() => {\n    let key = color.toString('hexa');\n    map.set(key, color);\n    return () => {\n      map.delete(key);\n    };\n  }, [color, map]);\n\n  let wrap = (v) => {\n    if (typeof v === 'function') {\n      return (renderProps) => v({...renderProps, color});\n    }\n    return v;\n  };\n\n  return (\n    <ListBoxItem\n      {...props}\n      ref={ref}\n      id={color.toString('hexa')}\n      textValue={color.getColorName(locale)}\n      className={wrap(props.className || 'react-aria-ColorSwatchPickerItem')}\n      style={wrap(props.style)}>\n      {composeRenderProps(wrap(props.children), children => (\n        <ColorSwatchContext.Provider value={{color}}>\n          {children}\n        </ColorSwatchContext.Provider>\n      ))}\n    </ListBoxItem>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}