{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"optionProps\", \"labelProps\", \"descriptionProps\"],\n  _excluded2 = [\"dropIndicatorProps\", \"isDropTarget\"];\nimport { CollectionRendererContext as $7135fc7d473fd974$export$4feb769f8ddf26c5, SectionContext as $7135fc7d473fd974$export$d40e14dec8b060a8 } from \"./Collection.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3, useSlot as $64fa3d84918910a7$export$9d4c57ee4c6ffdd8 } from \"./utils.mjs\";\nimport { DragAndDropContext as $612b8eb6cb90e02d$export$d188a835a7bc5783, DropIndicatorContext as $612b8eb6cb90e02d$export$f55761759794cf55, useDndPersistedKeys as $612b8eb6cb90e02d$export$d1e8e3fbb7461f6, useRenderDropIndicator as $612b8eb6cb90e02d$export$971707d8a129a1f7 } from \"./DragAndDrop.mjs\";\nimport { HeaderContext as $72a5793c14baf454$export$e0e4026c12a8bdbb } from \"./Header.mjs\";\nimport { SeparatorContext as $431f98aba6844401$export$6615d83f6de245ce } from \"./Separator.mjs\";\nimport { TextContext as $514c0188e459b4c0$export$9afb8bc826b033ea } from \"./Text.mjs\";\nimport { UNSTABLE_InternalAutocompleteContext as $d2f53cda644affe3$export$65d2a03b8800d6e3 } from \"./Autocomplete.mjs\";\nimport { useLocale as $e8Bmu$useLocale, useCollator as $e8Bmu$useCollator, ListKeyboardDelegate as $e8Bmu$ListKeyboardDelegate, useListBox as $e8Bmu$useListBox, useFocusRing as $e8Bmu$useFocusRing, FocusScope as $e8Bmu$FocusScope, mergeProps as $e8Bmu$mergeProps, useListBoxSection as $e8Bmu$useListBoxSection, useOption as $e8Bmu$useOption, useHover as $e8Bmu$useHover } from \"react-aria\";\nimport { CollectionBuilder as $e8Bmu$CollectionBuilder, Collection as $e8Bmu$Collection, createBranchComponent as $e8Bmu$createBranchComponent, createLeafComponent as $e8Bmu$createLeafComponent } from \"@react-aria/collections\";\nimport { useListState as $e8Bmu$useListState } from \"react-stately\";\nimport { useObjectRef as $e8Bmu$useObjectRef, mergeRefs as $e8Bmu$mergeRefs, filterDOMProps as $e8Bmu$filterDOMProps } from \"@react-aria/utils\";\nimport $e8Bmu$react, { createContext as $e8Bmu$createContext, forwardRef as $e8Bmu$forwardRef, useContext as $e8Bmu$useContext, useMemo as $e8Bmu$useMemo, useRef as $e8Bmu$useRef, useEffect as $e8Bmu$useEffect } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $eed445e0843c11d0$export$7ff8f37d2d81a48d = /*#__PURE__*/(0, $e8Bmu$createContext)(null);\nconst $eed445e0843c11d0$export$7c5906fe4f1f2af2 = /*#__PURE__*/(0, $e8Bmu$createContext)(null);\nconst $eed445e0843c11d0$export$41f133550aa26f48 = /*#__PURE__*/(0, $e8Bmu$forwardRef)(function ListBox(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eed445e0843c11d0$export$7ff8f37d2d81a48d);\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  // The structure of ListBox is a bit strange because it needs to work inside other components like ComboBox and Select.\n  // Those components render two copies of their children so that the collection can be built even when the popover is closed.\n  // The first copy sends a collection document via context which we render the collection portal into.\n  // The second copy sends a ListState object via context which we use to render the ListBox without rebuilding the state.\n  // Otherwise, we have a standalone ListBox, so we need to create a collection and state ourselves.\n  if (state) return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxInner, {\n    state: state,\n    props: props,\n    listBoxRef: ref\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$CollectionBuilder), {\n    content: /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$Collection), props)\n  }, collection => /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$StandaloneListBox, {\n    props: props,\n    listBoxRef: ref,\n    collection: collection\n  }));\n});\nfunction $eed445e0843c11d0$var$StandaloneListBox(_ref) {\n  let {\n    props: props,\n    listBoxRef: listBoxRef,\n    collection: collection\n  } = _ref;\n  props = _objectSpread(_objectSpread({}, props), {}, {\n    collection: collection,\n    children: null,\n    items: null\n  });\n  let {\n    layoutDelegate: layoutDelegate\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let {\n    filterFn: filterFn,\n    collectionProps: collectionProps,\n    collectionRef: collectionRef\n  } = (0, $e8Bmu$useContext)((0, $d2f53cda644affe3$export$65d2a03b8800d6e3)) || {};\n  // Memoed so that useAutocomplete callback ref is properly only called once on mount and not everytime a rerender happens\n  listBoxRef = (0, $e8Bmu$useObjectRef)((0, $e8Bmu$useMemo)(() => (0, $e8Bmu$mergeRefs)(listBoxRef, collectionRef !== undefined ? collectionRef : null), [collectionRef, listBoxRef]));\n  let filteredCollection = (0, $e8Bmu$useMemo)(() => filterFn ? collection.filter(filterFn) : collection, [collection, filterFn]);\n  let state = (0, $e8Bmu$useListState)(_objectSpread(_objectSpread({}, props), {}, {\n    collection: filteredCollection,\n    layoutDelegate: layoutDelegate\n  }));\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxInner, {\n    state: state,\n    props: _objectSpread(_objectSpread({}, props), collectionProps),\n    listBoxRef: listBoxRef\n  });\n}\nfunction $eed445e0843c11d0$var$ListBoxInner(_ref2) {\n  let {\n    state: state,\n    props: props,\n    listBoxRef: listBoxRef\n  } = _ref2;\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    layout = 'stack',\n    orientation = 'vertical'\n  } = props;\n  let {\n    collection: collection,\n    selectionManager: selectionManager\n  } = state;\n  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);\n  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);\n  let {\n    direction: direction\n  } = (0, $e8Bmu$useLocale)();\n  let {\n    disabledBehavior: disabledBehavior,\n    disabledKeys: disabledKeys\n  } = selectionManager;\n  let collator = (0, $e8Bmu$useCollator)({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    isVirtualized: isVirtualized,\n    layoutDelegate: layoutDelegate,\n    dropTargetDelegate: ctxDropTargetDelegate,\n    CollectionRoot: CollectionRoot\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let keyboardDelegate = (0, $e8Bmu$useMemo)(() => props.keyboardDelegate || new (0, $e8Bmu$ListKeyboardDelegate)({\n    collection: collection,\n    collator: collator,\n    ref: listBoxRef,\n    disabledKeys: disabledKeys,\n    disabledBehavior: disabledBehavior,\n    layout: layout,\n    orientation: orientation,\n    direction: direction,\n    layoutDelegate: layoutDelegate\n  }), [collection, collator, listBoxRef, disabledBehavior, disabledKeys, orientation, direction, props.keyboardDelegate, layout, layoutDelegate]);\n  let {\n    listBoxProps: listBoxProps\n  } = (0, $e8Bmu$useListBox)(_objectSpread(_objectSpread({}, props), {}, {\n    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized\n  }), state, listBoxRef);\n  let dragHooksProvided = (0, $e8Bmu$useRef)(isListDraggable);\n  let dropHooksProvided = (0, $e8Bmu$useRef)(isListDroppable);\n  (0, $e8Bmu$useEffect)(() => {\n    if (dragHooksProvided.current !== isListDraggable) console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    if (dropHooksProvided.current !== isListDroppable) console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n  }, [isListDraggable, isListDroppable]);\n  let dragState = undefined;\n  let dropState = undefined;\n  let droppableCollection = undefined;\n  let isRootDropTarget = false;\n  let dragPreview = null;\n  let preview = (0, $e8Bmu$useRef)(null);\n  if (isListDraggable && dragAndDropHooks) {\n    dragState = dragAndDropHooks.useDraggableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager,\n      preview: dragAndDropHooks.renderDragPreview ? preview : undefined\n    });\n    dragAndDropHooks.useDraggableCollection({}, dragState, listBoxRef);\n    let DragPreview = dragAndDropHooks.DragPreview;\n    dragPreview = dragAndDropHooks.renderDragPreview ? /*#__PURE__*/(0, $e8Bmu$react).createElement(DragPreview, {\n      ref: preview\n    }, dragAndDropHooks.renderDragPreview) : null;\n  }\n  if (isListDroppable && dragAndDropHooks) {\n    dropState = dragAndDropHooks.useDroppableCollectionState({\n      collection: collection,\n      selectionManager: selectionManager\n    });\n    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {\n      orientation: orientation,\n      layout: layout,\n      direction: direction\n    });\n    droppableCollection = dragAndDropHooks.useDroppableCollection({\n      keyboardDelegate: keyboardDelegate,\n      dropTargetDelegate: dropTargetDelegate\n    }, dropState, listBoxRef);\n    isRootDropTarget = dropState.isDropTarget({\n      type: 'root'\n    });\n  }\n  let {\n    focusProps: focusProps,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  } = (0, $e8Bmu$useFocusRing)();\n  let renderValues = {\n    isDropTarget: isRootDropTarget,\n    isEmpty: state.collection.size === 0,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    layout: props.layout || 'stack',\n    state: state\n  };\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-ListBox',\n    values: renderValues\n  });\n  let emptyState = null;\n  if (state.collection.size === 0 && props.renderEmptyState) emptyState = /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", {\n    // eslint-disable-next-line\n    role: \"option\",\n    style: {\n      display: 'contents'\n    }\n  }, props.renderEmptyState(renderValues));\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $e8Bmu$FocusScope), null, /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, (0, $e8Bmu$filterDOMProps)(props)), (0, $e8Bmu$mergeProps)(listBoxProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps)), renderProps), {}, {\n    ref: listBoxRef,\n    slot: props.slot || undefined,\n    onScroll: props.onScroll,\n    \"data-drop-target\": isRootDropTarget || undefined,\n    \"data-empty\": state.collection.size === 0 || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-layout\": props.layout || 'stack',\n    \"data-orientation\": props.orientation || 'vertical'\n  }), /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$eed445e0843c11d0$export$7ff8f37d2d81a48d, props], [$eed445e0843c11d0$export$7c5906fe4f1f2af2, state], [(0, $612b8eb6cb90e02d$export$d188a835a7bc5783), {\n      dragAndDropHooks: dragAndDropHooks,\n      dragState: dragState,\n      dropState: dropState\n    }], [(0, $431f98aba6844401$export$6615d83f6de245ce), {\n      elementType: 'div'\n    }], [(0, $612b8eb6cb90e02d$export$f55761759794cf55), {\n      render: $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper\n    }], [(0, $7135fc7d473fd974$export$d40e14dec8b060a8), {\n      name: 'ListBoxSection',\n      render: $eed445e0843c11d0$var$ListBoxSectionInner\n    }]]\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement(CollectionRoot, {\n    collection: collection,\n    scrollRef: listBoxRef,\n    persistedKeys: (0, $612b8eb6cb90e02d$export$d1e8e3fbb7461f6)(selectionManager, dragAndDropHooks, dropState),\n    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)\n  })), emptyState, dragPreview));\n}\nfunction $eed445e0843c11d0$var$ListBoxSectionInner(props, ref, section) {\n  let className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'react-aria-ListBoxSection';\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let {\n    CollectionBranch: CollectionBranch\n  } = (0, $e8Bmu$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();\n  var _props_arialabel;\n  let {\n    headingProps: headingProps,\n    groupProps: groupProps\n  } = (0, $e8Bmu$useListBoxSection)({\n    heading: heading,\n    'aria-label': (_props_arialabel = props['aria-label']) !== null && _props_arialabel !== void 0 ? _props_arialabel : undefined\n  });\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    defaultClassName: className,\n    className: props.className,\n    style: props.style,\n    values: {}\n  });\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(\"section\", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, (0, $e8Bmu$filterDOMProps)(props)), groupProps), renderProps), {}, {\n    ref: ref\n  }), /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $72a5793c14baf454$export$e0e4026c12a8bdbb).Provider, {\n    value: _objectSpread(_objectSpread({}, headingProps), {}, {\n      ref: headingRef\n    })\n  }, /*#__PURE__*/(0, $e8Bmu$react).createElement(CollectionBranch, {\n    collection: state.collection,\n    parent: section,\n    renderDropIndicator: (0, $612b8eb6cb90e02d$export$971707d8a129a1f7)(dragAndDropHooks, dropState)\n  })));\n}\nconst $eed445e0843c11d0$export$dca12b0bb56e4fc = /*#__PURE__*/(0, $e8Bmu$createBranchComponent)('section', $eed445e0843c11d0$var$ListBoxSectionInner);\nconst $eed445e0843c11d0$export$a11e76429ed99b4 = /*#__PURE__*/(0, $e8Bmu$createLeafComponent)('item', function ListBoxItem(props, forwardedRef, item) {\n  let ref = (0, $e8Bmu$useObjectRef)(forwardedRef);\n  let state = (0, $e8Bmu$useContext)($eed445e0843c11d0$export$7c5906fe4f1f2af2);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dragState: dragState,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let _ref3 = (0, $e8Bmu$useOption)({\n      key: item.key,\n      'aria-label': props === null || props === void 0 ? void 0 : props['aria-label']\n    }, state, ref),\n    {\n      optionProps: optionProps,\n      labelProps: labelProps,\n      descriptionProps: descriptionProps\n    } = _ref3,\n    states = _objectWithoutProperties(_ref3, _excluded);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $e8Bmu$useHover)({\n    isDisabled: !states.allowsSelection && !states.hasAction,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n  let draggableItem = null;\n  if (dragState && dragAndDropHooks) draggableItem = dragAndDropHooks.useDraggableItem({\n    key: item.key\n  }, dragState);\n  let droppableItem = null;\n  if (dropState && dragAndDropHooks) droppableItem = dragAndDropHooks.useDroppableItem({\n    target: {\n      type: 'item',\n      key: item.key,\n      dropPosition: 'on'\n    }\n  }, dropState, ref);\n  let isDragging = dragState && dragState.isDragging(item.key);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)(_objectSpread(_objectSpread({}, props), {}, {\n    id: undefined,\n    children: props.children,\n    defaultClassName: 'react-aria-ListBoxItem',\n    values: _objectSpread(_objectSpread({}, states), {}, {\n      isHovered: isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      allowsDragging: !!dragState,\n      isDragging: isDragging,\n      isDropTarget: droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget\n    })\n  }));\n  (0, $e8Bmu$useEffect)(() => {\n    if (!item.textValue) console.warn('A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.');\n  }, [item.textValue]);\n  let ElementType = props.href ? 'a' : 'div';\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(ElementType, _objectSpread(_objectSpread(_objectSpread({}, (0, $e8Bmu$mergeProps)(optionProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.dropProps)), renderProps), {}, {\n    ref: ref,\n    \"data-allows-dragging\": !!dragState || undefined,\n    \"data-selected\": states.isSelected || undefined,\n    \"data-disabled\": states.isDisabled || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focused\": states.isFocused || undefined,\n    \"data-focus-visible\": states.isFocusVisible || undefined,\n    \"data-pressed\": states.isPressed || undefined,\n    \"data-dragging\": isDragging || undefined,\n    \"data-drop-target\": (droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget) || undefined,\n    \"data-selection-mode\": state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode\n  }), /*#__PURE__*/(0, $e8Bmu$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[(0, $514c0188e459b4c0$export$9afb8bc826b033ea), {\n      slots: {\n        label: labelProps,\n        description: descriptionProps\n      }\n    }]]\n  }, renderProps.children));\n});\nfunction $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper(props, ref) {\n  ref = (0, $e8Bmu$useObjectRef)(ref);\n  let {\n    dragAndDropHooks: dragAndDropHooks,\n    dropState: dropState\n  } = (0, $e8Bmu$useContext)((0, $612b8eb6cb90e02d$export$d188a835a7bc5783));\n  let {\n    dropIndicatorProps: dropIndicatorProps,\n    isHidden: isHidden,\n    isDropTarget: isDropTarget\n  } = dragAndDropHooks.useDropIndicator(props, dropState, ref);\n  if (isHidden) return null;\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement($eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef, _objectSpread(_objectSpread({}, props), {}, {\n    dropIndicatorProps: dropIndicatorProps,\n    isDropTarget: isDropTarget,\n    ref: ref\n  }));\n}\nfunction $eed445e0843c11d0$var$ListBoxDropIndicator(props, ref) {\n  let {\n      dropIndicatorProps: dropIndicatorProps,\n      isDropTarget: isDropTarget\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)(_objectSpread(_objectSpread({}, otherProps), {}, {\n    defaultClassName: 'react-aria-DropIndicator',\n    values: {\n      isDropTarget: isDropTarget\n    }\n  }));\n  return /*#__PURE__*/(0, $e8Bmu$react).createElement(\"div\", _objectSpread(_objectSpread(_objectSpread({}, dropIndicatorProps), renderProps), {}, {\n    // eslint-disable-next-line\n    role: \"option\",\n    ref: ref,\n    \"data-drop-target\": isDropTarget || undefined\n  }));\n}\nconst $eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef = /*#__PURE__*/(0, $e8Bmu$forwardRef)($eed445e0843c11d0$var$ListBoxDropIndicator);\nexport { $eed445e0843c11d0$export$7ff8f37d2d81a48d as ListBoxContext, $eed445e0843c11d0$export$7c5906fe4f1f2af2 as ListStateContext, $eed445e0843c11d0$export$41f133550aa26f48 as ListBox, $eed445e0843c11d0$export$dca12b0bb56e4fc as ListBoxSection, $eed445e0843c11d0$export$a11e76429ed99b4 as ListBoxItem };","map":{"version":3,"names":["$eed445e0843c11d0$export$7ff8f37d2d81a48d","$e8Bmu$createContext","$eed445e0843c11d0$export$7c5906fe4f1f2af2","$eed445e0843c11d0$export$41f133550aa26f48","$e8Bmu$forwardRef","ListBox","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","state","$e8Bmu$useContext","$e8Bmu$react","createElement","$eed445e0843c11d0$var$ListBoxInner","listBoxRef","$e8Bmu$CollectionBuilder","content","$e8Bmu$Collection","collection","$eed445e0843c11d0$var$StandaloneListBox","_ref","_objectSpread","children","items","layoutDelegate","$7135fc7d473fd974$export$4feb769f8ddf26c5","filterFn","collectionProps","collectionRef","$d2f53cda644affe3$export$65d2a03b8800d6e3","$e8Bmu$useObjectRef","$e8Bmu$useMemo","$e8Bmu$mergeRefs","undefined","filteredCollection","filter","$e8Bmu$useListState","_ref2","dragAndDropHooks","layout","orientation","selectionManager","isListDraggable","useDraggableCollectionState","isListDroppable","useDroppableCollectionState","direction","$e8Bmu$useLocale","disabledBehavior","disabledKeys","collator","$e8Bmu$useCollator","usage","sensitivity","isVirtualized","dropTargetDelegate","ctxDropTargetDelegate","CollectionRoot","keyboardDelegate","$e8Bmu$ListKeyboardDelegate","listBoxProps","$e8Bmu$useListBox","shouldSelectOnPressUp","dragHooksProvided","$e8Bmu$useRef","dropHooksProvided","$e8Bmu$useEffect","current","console","warn","dragState","dropState","droppableCollection","isRootDropTarget","dragPreview","preview","renderDragPreview","useDraggableCollection","DragPreview","ListDropTargetDelegate","useDroppableCollection","isDropTarget","type","focusProps","isFocused","isFocusVisible","$e8Bmu$useFocusRing","renderValues","isEmpty","size","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","className","style","defaultClassName","values","emptyState","renderEmptyState","role","display","$e8Bmu$FocusScope","$e8Bmu$filterDOMProps","$e8Bmu$mergeProps","slot","onScroll","$64fa3d84918910a7$export$2881499e37b75b9a","$612b8eb6cb90e02d$export$d188a835a7bc5783","$431f98aba6844401$export$6615d83f6de245ce","elementType","$612b8eb6cb90e02d$export$f55761759794cf55","render","$eed445e0843c11d0$var$ListBoxDropIndicatorWrapper","$7135fc7d473fd974$export$d40e14dec8b060a8","name","$eed445e0843c11d0$var$ListBoxSectionInner","scrollRef","persistedKeys","$612b8eb6cb90e02d$export$d1e8e3fbb7461f6","renderDropIndicator","$612b8eb6cb90e02d$export$971707d8a129a1f7","section","arguments","length","CollectionBranch","headingRef","heading","$64fa3d84918910a7$export$9d4c57ee4c6ffdd8","_props_arialabel","headingProps","groupProps","$e8Bmu$useListBoxSection","$72a5793c14baf454$export$e0e4026c12a8bdbb","Provider","value","parent","$eed445e0843c11d0$export$dca12b0bb56e4fc","$e8Bmu$createBranchComponent","$eed445e0843c11d0$export$a11e76429ed99b4","$e8Bmu$createLeafComponent","ListBoxItem","forwardedRef","item","_ref3","$e8Bmu$useOption","key","optionProps","labelProps","descriptionProps","states","_objectWithoutProperties","_excluded","hoverProps","isHovered","$e8Bmu$useHover","isDisabled","allowsSelection","hasAction","onHoverStart","onHoverChange","onHoverEnd","draggableItem","useDraggableItem","droppableItem","useDroppableItem","target","dropPosition","isDragging","id","selectionMode","selectionBehavior","allowsDragging","textValue","ElementType","href","dragProps","dropProps","isSelected","isPressed","$514c0188e459b4c0$export$9afb8bc826b033ea","slots","label","description","dropIndicatorProps","isHidden","useDropIndicator","$eed445e0843c11d0$var$ListBoxDropIndicatorForwardRef","$eed445e0843c11d0$var$ListBoxDropIndicator","otherProps","_excluded2"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\ListBox.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaListBoxOptions, AriaListBoxProps, DraggableItemResult, DragPreviewRenderer, DroppableCollectionResult, DroppableItemResult, FocusScope, ListKeyboardDelegate, mergeProps, useCollator, useFocusRing, useHover, useListBox, useListBoxSection, useLocale, useOption} from 'react-aria';\nimport {Collection, CollectionBuilder, createBranchComponent, createLeafComponent} from '@react-aria/collections';\nimport {CollectionProps, CollectionRendererContext, ItemRenderProps, SectionContext, SectionProps} from './Collection';\nimport {ContextValue, Provider, RenderProps, ScrollableProps, SlotProps, StyleRenderProps, useContextProps, useRenderProps, useSlot} from './utils';\nimport {DragAndDropContext, DropIndicatorContext, DropIndicatorProps, useDndPersistedKeys, useRenderDropIndicator} from './DragAndDrop';\nimport {DragAndDropHooks} from './useDragAndDrop';\nimport {DraggableCollectionState, DroppableCollectionState, ListState, Node, Orientation, SelectionBehavior, useListState} from 'react-stately';\nimport {filterDOMProps, mergeRefs, useObjectRef} from '@react-aria/utils';\nimport {forwardRefType, HoverEvents, Key, LinkDOMProps, RefObject} from '@react-types/shared';\nimport {HeaderContext} from './Header';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\nimport {SeparatorContext} from './Separator';\nimport {TextContext} from './Text';\nimport {UNSTABLE_InternalAutocompleteContext} from './Autocomplete';\n\nexport interface ListBoxRenderProps {\n  /**\n   * Whether the listbox has no items and should display its empty state.\n   * @selector [data-empty]\n   */\n  isEmpty: boolean,\n  /**\n   * Whether the listbox is currently focused.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the listbox is currently keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the listbox is currently the active drop target.\n   * @selector [data-drop-target]\n   */\n  isDropTarget: boolean,\n  /**\n   * Whether the items are arranged in a stack or grid.\n   * @selector [data-layout=\"stack | grid\"]\n   */\n  layout: 'stack' | 'grid',\n  /**\n   * State of the listbox.\n   */\n  state: ListState<unknown>\n}\n\nexport interface ListBoxProps<T> extends Omit<AriaListBoxProps<T>, 'children' | 'label'>, CollectionProps<T>, StyleRenderProps<ListBoxRenderProps>, SlotProps, ScrollableProps<HTMLDivElement> {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListBox. */\n  dragAndDropHooks?: DragAndDropHooks,\n  /** Provides content to display when there are no items in the list. */\n  renderEmptyState?: (props: ListBoxRenderProps) => ReactNode,\n  /**\n   * Whether the items are arranged in a stack or grid.\n   * @default 'stack'\n   */\n  layout?: 'stack' | 'grid',\n  /**\n   * The primary orientation of the items. Usually this is the\n   * direction that the collection scrolls.\n   * @default 'vertical'\n   */\n  orientation?: Orientation\n}\n\nexport const ListBoxContext = createContext<ContextValue<ListBoxProps<any>, HTMLDivElement>>(null);\nexport const ListStateContext = createContext<ListState<any> | null>(null);\n\n/**\n * A listbox displays a list of options and allows a user to select one or more of them.\n */\nexport const ListBox = /*#__PURE__*/ (forwardRef as forwardRefType)(function ListBox<T extends object>(props: ListBoxProps<T>, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ListBoxContext);\n  let state = useContext(ListStateContext);\n\n  // The structure of ListBox is a bit strange because it needs to work inside other components like ComboBox and Select.\n  // Those components render two copies of their children so that the collection can be built even when the popover is closed.\n  // The first copy sends a collection document via context which we render the collection portal into.\n  // The second copy sends a ListState object via context which we use to render the ListBox without rebuilding the state.\n  // Otherwise, we have a standalone ListBox, so we need to create a collection and state ourselves.\n\n  if (state) {\n    return <ListBoxInner state={state} props={props} listBoxRef={ref} />;\n  }\n\n  return (\n    <CollectionBuilder content={<Collection {...props} />}>\n      {collection => <StandaloneListBox props={props} listBoxRef={ref} collection={collection} />}\n    </CollectionBuilder>\n  );\n});\n\nfunction StandaloneListBox({props, listBoxRef, collection}) {\n  props = {...props, collection, children: null, items: null};\n  let {layoutDelegate} = useContext(CollectionRendererContext);\n  let {filterFn, collectionProps, collectionRef} = useContext(UNSTABLE_InternalAutocompleteContext) || {};\n  // Memoed so that useAutocomplete callback ref is properly only called once on mount and not everytime a rerender happens\n  listBoxRef = useObjectRef(useMemo(() => mergeRefs(listBoxRef, collectionRef !== undefined ? collectionRef as RefObject<HTMLDivElement> : null), [collectionRef, listBoxRef]));\n  let filteredCollection = useMemo(() => filterFn ? collection.filter(filterFn) : collection, [collection, filterFn]);\n  let state = useListState({...props, collection: filteredCollection, layoutDelegate});\n  return <ListBoxInner state={state} props={{...props, ...collectionProps}} listBoxRef={listBoxRef} />;\n}\n\ninterface ListBoxInnerProps<T> {\n  state: ListState<T>,\n  props: ListBoxProps<T> & AriaListBoxOptions<T>,\n  listBoxRef: RefObject<HTMLDivElement | null>\n}\n\nfunction ListBoxInner<T extends object>({state, props, listBoxRef}: ListBoxInnerProps<T>) {\n  let {dragAndDropHooks, layout = 'stack', orientation = 'vertical'} = props;\n  let {collection, selectionManager} = state;\n  let isListDraggable = !!dragAndDropHooks?.useDraggableCollectionState;\n  let isListDroppable = !!dragAndDropHooks?.useDroppableCollectionState;\n  let {direction} = useLocale();\n  let {disabledBehavior, disabledKeys} = selectionManager;\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {isVirtualized, layoutDelegate, dropTargetDelegate: ctxDropTargetDelegate, CollectionRoot} = useContext(CollectionRendererContext);\n  let keyboardDelegate = useMemo(() => (\n    props.keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      collator,\n      ref: listBoxRef,\n      disabledKeys,\n      disabledBehavior,\n      layout,\n      orientation,\n      direction,\n      layoutDelegate\n    })\n  ), [collection, collator, listBoxRef, disabledBehavior, disabledKeys, orientation, direction, props.keyboardDelegate, layout, layoutDelegate]);\n\n  let {listBoxProps} = useListBox({\n    ...props,\n    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,\n    keyboardDelegate,\n    isVirtualized\n  }, state, listBoxRef);\n\n  let dragHooksProvided = useRef(isListDraggable);\n  let dropHooksProvided = useRef(isListDroppable);\n  useEffect(() => {\n    if (dragHooksProvided.current !== isListDraggable) {\n      console.warn('Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n    if (dropHooksProvided.current !== isListDroppable) {\n      console.warn('Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.');\n    }\n  }, [isListDraggable, isListDroppable]);\n\n  let dragState: DraggableCollectionState | undefined = undefined;\n  let dropState: DroppableCollectionState | undefined = undefined;\n  let droppableCollection: DroppableCollectionResult | undefined = undefined;\n  let isRootDropTarget = false;\n  let dragPreview: JSX.Element | null = null;\n  let preview = useRef<DragPreviewRenderer>(null);\n\n  if (isListDraggable && dragAndDropHooks) {\n    dragState = dragAndDropHooks.useDraggableCollectionState!({\n      collection,\n      selectionManager,\n      preview: dragAndDropHooks.renderDragPreview ? preview : undefined\n    });\n    dragAndDropHooks.useDraggableCollection!({}, dragState, listBoxRef);\n\n    let DragPreview = dragAndDropHooks.DragPreview!;\n    dragPreview = dragAndDropHooks.renderDragPreview\n      ? <DragPreview ref={preview}>{dragAndDropHooks.renderDragPreview}</DragPreview>\n      : null;\n  }\n\n  if (isListDroppable && dragAndDropHooks) {\n    dropState = dragAndDropHooks.useDroppableCollectionState!({\n      collection,\n      selectionManager\n    });\n\n    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || ctxDropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {orientation, layout, direction});\n    droppableCollection = dragAndDropHooks.useDroppableCollection!({\n      keyboardDelegate,\n      dropTargetDelegate\n    }, dropState, listBoxRef);\n\n    isRootDropTarget = dropState.isDropTarget({type: 'root'});\n  }\n\n  let {focusProps, isFocused, isFocusVisible} = useFocusRing();\n  let renderValues = {\n    isDropTarget: isRootDropTarget,\n    isEmpty: state.collection.size === 0,\n    isFocused,\n    isFocusVisible,\n    layout: props.layout || 'stack',\n    state\n  };\n  let renderProps = useRenderProps({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-ListBox',\n    values: renderValues\n  });\n\n  let emptyState: JSX.Element | null = null;\n  if (state.collection.size === 0 && props.renderEmptyState) {\n    emptyState = (\n      <div\n        // eslint-disable-next-line\n        role=\"option\"\n        style={{display: 'contents'}}>\n        {props.renderEmptyState(renderValues)}\n      </div>\n    );\n  }\n\n  return (\n    <FocusScope>\n      <div\n        {...filterDOMProps(props)}\n        {...mergeProps(listBoxProps, focusProps, droppableCollection?.collectionProps)}\n        {...renderProps}\n        ref={listBoxRef}\n        slot={props.slot || undefined}\n        onScroll={props.onScroll}\n        data-drop-target={isRootDropTarget || undefined}\n        data-empty={state.collection.size === 0 || undefined}\n        data-focused={isFocused || undefined}\n        data-focus-visible={isFocusVisible || undefined}\n        data-layout={props.layout || 'stack'}\n        data-orientation={props.orientation || 'vertical'}>\n        <Provider\n          values={[\n            [ListBoxContext, props],\n            [ListStateContext, state],\n            [DragAndDropContext, {dragAndDropHooks, dragState, dropState}],\n            [SeparatorContext, {elementType: 'div'}],\n            [DropIndicatorContext, {render: ListBoxDropIndicatorWrapper}],\n            [SectionContext, {name: 'ListBoxSection', render: ListBoxSectionInner}]\n          ]}>\n          <CollectionRoot\n            collection={collection}\n            scrollRef={listBoxRef}\n            persistedKeys={useDndPersistedKeys(selectionManager, dragAndDropHooks, dropState)}\n            renderDropIndicator={useRenderDropIndicator(dragAndDropHooks, dropState)} />\n        </Provider>\n        {emptyState}\n        {dragPreview}\n      </div>\n    </FocusScope>\n  );\n}\n\nexport interface ListBoxSectionProps<T> extends SectionProps<T> {}\n\nfunction ListBoxSectionInner<T extends object>(props: ListBoxSectionProps<T>, ref: ForwardedRef<HTMLElement>, section: Node<T>, className = 'react-aria-ListBoxSection') {\n  let state = useContext(ListStateContext)!;\n  let {dragAndDropHooks, dropState} = useContext(DragAndDropContext)!;\n  let {CollectionBranch} = useContext(CollectionRendererContext);\n  let [headingRef, heading] = useSlot();\n  let {headingProps, groupProps} = useListBoxSection({\n    heading,\n    'aria-label': props['aria-label'] ?? undefined\n  });\n  let renderProps = useRenderProps({\n    defaultClassName: className,\n    className: props.className,\n    style: props.style,\n    values: {}\n  });\n\n  return (\n    <section\n      {...filterDOMProps(props as any)}\n      {...groupProps}\n      {...renderProps}\n      ref={ref}>\n      <HeaderContext.Provider value={{...headingProps, ref: headingRef}}>\n        <CollectionBranch\n          collection={state.collection}\n          parent={section}\n          renderDropIndicator={useRenderDropIndicator(dragAndDropHooks, dropState)} />\n      </HeaderContext.Provider>\n    </section>\n  );\n}\n\n/**\n * A ListBoxSection represents a section within a ListBox.\n */\nexport const ListBoxSection = /*#__PURE__*/ createBranchComponent('section', ListBoxSectionInner);\n\nexport interface ListBoxItemRenderProps extends ItemRenderProps {}\n\nexport interface ListBoxItemProps<T = object> extends RenderProps<ListBoxItemRenderProps>, LinkDOMProps, HoverEvents {\n  /** The unique id of the item. */\n  id?: Key,\n  /** The object value that this item represents. When using dynamic collections, this is set automatically. */\n  value?: T,\n  /** A string representation of the item's contents, used for features like typeahead. */\n  textValue?: string,\n  /** An accessibility label for this item. */\n  'aria-label'?: string,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void\n}\n\n/**\n * A ListBoxItem represents an individual option in a ListBox.\n */\nexport const ListBoxItem = /*#__PURE__*/ createLeafComponent('item', function ListBoxItem<T extends object>(props: ListBoxItemProps<T>, forwardedRef: ForwardedRef<HTMLDivElement>, item: Node<T>) {\n  let ref = useObjectRef<any>(forwardedRef);\n  let state = useContext(ListStateContext)!;\n  let {dragAndDropHooks, dragState, dropState} = useContext(DragAndDropContext)!;\n  let {optionProps, labelProps, descriptionProps, ...states} = useOption(\n    {key: item.key, 'aria-label': props?.['aria-label']},\n    state,\n    ref\n  );\n\n  let {hoverProps, isHovered} = useHover({\n    isDisabled: !states.allowsSelection && !states.hasAction,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n\n  let draggableItem: DraggableItemResult | null = null;\n  if (dragState && dragAndDropHooks) {\n    draggableItem = dragAndDropHooks.useDraggableItem!({key: item.key}, dragState);\n  }\n\n  let droppableItem: DroppableItemResult | null = null;\n  if (dropState && dragAndDropHooks) {\n    droppableItem = dragAndDropHooks.useDroppableItem!({\n      target: {type: 'item', key: item.key, dropPosition: 'on'}\n    }, dropState, ref);\n  }\n\n  let isDragging = dragState && dragState.isDragging(item.key);\n  let renderProps = useRenderProps({\n    ...props,\n    id: undefined,\n    children: props.children,\n    defaultClassName: 'react-aria-ListBoxItem',\n    values: {\n      ...states,\n      isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior,\n      allowsDragging: !!dragState,\n      isDragging,\n      isDropTarget: droppableItem?.isDropTarget\n    }\n  });\n\n  useEffect(() => {\n    if (!item.textValue) {\n      console.warn('A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.');\n    }\n  }, [item.textValue]);\n\n  let ElementType: React.ElementType = props.href ? 'a' : 'div';\n\n  return (\n    <ElementType\n      {...mergeProps(optionProps, hoverProps, draggableItem?.dragProps, droppableItem?.dropProps)}\n      {...renderProps}\n      ref={ref}\n      data-allows-dragging={!!dragState || undefined}\n      data-selected={states.isSelected || undefined}\n      data-disabled={states.isDisabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={states.isFocused || undefined}\n      data-focus-visible={states.isFocusVisible || undefined}\n      data-pressed={states.isPressed || undefined}\n      data-dragging={isDragging || undefined}\n      data-drop-target={droppableItem?.isDropTarget || undefined}\n      data-selection-mode={state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode}>\n      <Provider\n        values={[\n          [TextContext, {\n            slots: {\n              label: labelProps,\n              description: descriptionProps\n            }\n          }]\n        ]}>\n        {renderProps.children}\n      </Provider>\n    </ElementType>\n  );\n});\n\nfunction ListBoxDropIndicatorWrapper(props: DropIndicatorProps, ref: ForwardedRef<HTMLElement>) {\n  ref = useObjectRef(ref);\n  let {dragAndDropHooks, dropState} = useContext(DragAndDropContext)!;\n  let {dropIndicatorProps, isHidden, isDropTarget} = dragAndDropHooks!.useDropIndicator!(\n    props,\n    dropState!,\n    ref\n  );\n\n  if (isHidden) {\n    return null;\n  }\n\n  return (\n    <ListBoxDropIndicatorForwardRef {...props} dropIndicatorProps={dropIndicatorProps} isDropTarget={isDropTarget} ref={ref} />\n  );\n}\n\ninterface ListBoxDropIndicatorProps extends DropIndicatorProps {\n  dropIndicatorProps: React.HTMLAttributes<HTMLElement>,\n  isDropTarget: boolean\n}\n\nfunction ListBoxDropIndicator(props: ListBoxDropIndicatorProps, ref: ForwardedRef<HTMLElement>) {\n  let {\n    dropIndicatorProps,\n    isDropTarget,\n    ...otherProps\n  } = props;\n\n  let renderProps = useRenderProps({\n    ...otherProps,\n    defaultClassName: 'react-aria-DropIndicator',\n    values: {\n      isDropTarget\n    }\n  });\n\n  return (\n    <div\n      {...dropIndicatorProps}\n      {...renderProps}\n      // eslint-disable-next-line\n      role=\"option\"\n      ref={ref as RefObject<HTMLDivElement | null>}\n      data-drop-target={isDropTarget || undefined} />\n  );\n}\n\nconst ListBoxDropIndicatorForwardRef = forwardRef(ListBoxDropIndicator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}