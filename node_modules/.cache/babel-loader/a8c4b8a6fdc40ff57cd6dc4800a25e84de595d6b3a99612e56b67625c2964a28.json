{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { filterDOMProps as $1Ipl1$filterDOMProps } from \"@react-aria/utils\";\nimport { mergeProps as $1Ipl1$mergeProps } from \"react-aria\";\nimport $1Ipl1$react, { createContext as $1Ipl1$createContext, forwardRef as $1Ipl1$forwardRef, useContext as $1Ipl1$useContext } from \"react\";\nimport { useFocusRing as $1Ipl1$useFocusRing } from \"@react-aria/focus\";\nimport { useHover as $1Ipl1$useHover } from \"@react-aria/interactions\";\nconst $e2b71ec1d6016406$export$c80c0ea2ca5cb846 = /*#__PURE__*/(0, $1Ipl1$createContext)(null);\nconst $e2b71ec1d6016406$export$a3cc47cee1c1ccc = /*#__PURE__*/(0, $1Ipl1$forwardRef)(function ColorThumb(props, ref) {\n  let {\n    state: state,\n    thumbProps: thumbProps,\n    inputXRef: inputXRef,\n    inputYRef: inputYRef,\n    xInputProps: xInputProps,\n    yInputProps: yInputProps,\n    isDisabled = false\n  } = (0, $1Ipl1$useContext)($e2b71ec1d6016406$export$c80c0ea2ca5cb846);\n  let {\n    focusProps: focusProps,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  } = (0, $1Ipl1$useFocusRing)();\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $1Ipl1$useHover)(props);\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)(_objectSpread(_objectSpread({}, props), {}, {\n    defaultClassName: 'react-aria-ColorThumb',\n    defaultStyle: _objectSpread(_objectSpread({}, thumbProps.style), {}, {\n      backgroundColor: state.getDisplayColor().toString()\n    }),\n    values: {\n      color: state.getDisplayColor(),\n      isHovered: isHovered,\n      isDragging: state.isDragging,\n      isFocused: isFocused,\n      isFocusVisible: isFocusVisible,\n      isDisabled: isDisabled\n    }\n  }));\n  let DOMProps = (0, $1Ipl1$filterDOMProps)(props);\n  delete DOMProps.id;\n  return /*#__PURE__*/(0, $1Ipl1$react).createElement(\"div\", _objectSpread(_objectSpread(_objectSpread({}, (0, $1Ipl1$mergeProps)(thumbProps, hoverProps, DOMProps)), renderProps), {}, {\n    ref: ref,\n    \"data-hovered\": isHovered || undefined,\n    \"data-dragging\": state.isDragging || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-disabled\": isDisabled || undefined\n  }), /*#__PURE__*/(0, $1Ipl1$react).createElement(\"input\", _objectSpread(_objectSpread({\n    ref: inputXRef\n  }, xInputProps), focusProps)), yInputProps && /*#__PURE__*/(0, $1Ipl1$react).createElement(\"input\", _objectSpread(_objectSpread({\n    ref: inputYRef\n  }, yInputProps), focusProps)), renderProps.children);\n});\nexport { $e2b71ec1d6016406$export$c80c0ea2ca5cb846 as InternalColorThumbContext, $e2b71ec1d6016406$export$a3cc47cee1c1ccc as ColorThumb };","map":{"version":3,"names":["$e2b71ec1d6016406$export$c80c0ea2ca5cb846","$1Ipl1$createContext","$e2b71ec1d6016406$export$a3cc47cee1c1ccc","$1Ipl1$forwardRef","ColorThumb","props","ref","state","thumbProps","inputXRef","inputYRef","xInputProps","yInputProps","isDisabled","$1Ipl1$useContext","focusProps","isFocused","isFocusVisible","$1Ipl1$useFocusRing","hoverProps","isHovered","$1Ipl1$useHover","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","_objectSpread","defaultClassName","defaultStyle","style","backgroundColor","getDisplayColor","toString","values","color","isDragging","DOMProps","$1Ipl1$filterDOMProps","id","$1Ipl1$react","createElement","$1Ipl1$mergeProps","undefined","children"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\ColorThumb.tsx"],"sourcesContent":["import {Color} from '@react-types/color';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {HoverEvents, RefObject} from '@react-types/shared';\nimport {mergeProps} from 'react-aria';\nimport React, {createContext, ForwardedRef, forwardRef, HTMLAttributes, InputHTMLAttributes, useContext} from 'react';\nimport {RenderProps, useRenderProps} from './utils';\nimport {useFocusRing} from '@react-aria/focus';\nimport {useHover} from '@react-aria/interactions';\n\ninterface ColorState {\n  getDisplayColor(): Color,\n  isDragging: boolean\n}\n\ninterface InternalColorThumbContextValue {\n  state: ColorState,\n  thumbProps: HTMLAttributes<HTMLElement>,\n  inputXRef: RefObject<HTMLInputElement | null>,\n  inputYRef?: RefObject<HTMLInputElement | null>,\n  xInputProps: InputHTMLAttributes<HTMLInputElement>,\n  yInputProps?: InputHTMLAttributes<HTMLInputElement>,\n  isDisabled?: boolean\n}\n\nexport const InternalColorThumbContext = createContext<InternalColorThumbContextValue | null>(null);\n\nexport interface ColorThumbRenderProps {\n  /**\n   * The selected color, excluding the alpha channel.\n   */\n  color: Color,\n  /**\n   * Whether this thumb is currently being dragged.\n   * @selector [data-dragging]\n   */\n  isDragging: boolean,\n  /**\n   * Whether the thumb is currently hovered with a mouse.\n   * @selector [data-hovered]\n   */\n  isHovered: boolean,\n  /**\n   * Whether the thumb is currently focused.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the thumb is keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * Whether the thumb is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean\n}\n\nexport interface ColorThumbProps extends HoverEvents, RenderProps<ColorThumbRenderProps> {}\n\n/**\n * A color thumb appears within a ColorArea, ColorSlider, or ColorWheel and allows a user to drag to adjust the color value.\n */\nexport const ColorThumb = forwardRef(function ColorThumb(props: ColorThumbProps, ref: ForwardedRef<HTMLDivElement>) {\n  let {state, thumbProps, inputXRef, inputYRef, xInputProps, yInputProps, isDisabled = false} = useContext(InternalColorThumbContext)!;\n  let {focusProps, isFocused, isFocusVisible} = useFocusRing();\n  let {hoverProps, isHovered} = useHover(props);\n\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-ColorThumb',\n    defaultStyle: {\n      ...thumbProps.style,\n      backgroundColor: state.getDisplayColor().toString()\n    },\n    values: {\n      color: state.getDisplayColor(),\n      isHovered,\n      isDragging: state.isDragging,\n      isFocused,\n      isFocusVisible,\n      isDisabled\n    }\n  });\n\n  let DOMProps = filterDOMProps(props as any);\n  delete DOMProps.id;\n\n  return (\n    <div\n      {...mergeProps(thumbProps, hoverProps, DOMProps)}\n      {...renderProps}\n      ref={ref}\n      data-hovered={isHovered || undefined}\n      data-dragging={state.isDragging || undefined}\n      data-focused={isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={isDisabled || undefined}>\n      <input ref={inputXRef} {...xInputProps} {...focusProps} />\n      {yInputProps && <input ref={inputYRef} {...yInputProps} {...focusProps} />}\n      {renderProps.children}\n    </div>\n  );\n});\n"],"mappings":";;;;;;;AAwBO,MAAMA,yCAAA,gBAA4B,IAAAC,oBAAY,EAAyC;AAuCvF,MAAMC,wCAAA,gBAAa,IAAAC,iBAAS,EAAE,SAASC,WAAWC,KAAsB,EAAEC,GAAiC;EAChH,IAAI;IAAAC,KAAA,EAACA,KAAK;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAAC,SAAA,EAAEA,SAAS;IAAAC,WAAA,EAAEA,WAAW;IAAAC,WAAA,EAAEA,WAAW;IAAEC,UAAA,GAAa;EAAA,CAAM,GAAG,IAAAC,iBAAS,EAAEd,yCAAA;EACzG,IAAI;IAAAe,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA,SAAS;IAAAC,cAAA,EAAEA;EAAc,CAAC,GAAG,IAAAC,mBAAW;EACzD,IAAI;IAAAC,UAAA,EAACA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAO,EAAEhB,KAAA;EAEvC,IAAIiB,WAAA,GAAc,IAAAC,uCAAa,EAAAC,aAAA,CAAAA,aAAA,KAC1BnB,KAAK;IACRoB,gBAAA,EAAkB;IAClBC,YAAA,EAAAF,aAAA,CAAAA,aAAA,KACKhB,UAAA,CAAWmB,KAAK;MACnBC,eAAA,EAAiBrB,KAAA,CAAMsB,eAAe,GAAGC,QAAQ;IAAA,EACnD;IACAC,MAAA,EAAQ;MACNC,KAAA,EAAOzB,KAAA,CAAMsB,eAAe;iBAC5BT,SAAA;MACAa,UAAA,EAAY1B,KAAA,CAAM0B,UAAU;iBAC5BjB,SAAA;sBACAC,cAAA;kBACAJ;IACF;EAAA,EACF;EAEA,IAAIqB,QAAA,GAAW,IAAAC,qBAAa,EAAE9B,KAAA;EAC9B,OAAO6B,QAAA,CAASE,EAAE;EAElB,oBACE,IAAAC,YAAA,EAAAC,aAAA,CAAC,OAAAd,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACK,IAAAe,iBAAS,EAAE/B,UAAA,EAAYW,UAAA,EAAYe,QAAA,CAAS,GAC5CZ,WAAW;IACfhB,GAAA,EAAKA,GAAA;IACL,gBAAcc,SAAA,IAAaoB,SAAA;IAC3B,iBAAejC,KAAA,CAAM0B,UAAU,IAAIO,SAAA;IACnC,gBAAcxB,SAAA,IAAawB,SAAA;IAC3B,sBAAoBvB,cAAA,IAAkBuB,SAAA;IACtC,iBAAe3B,UAAA,IAAc2B;EAAA,I,aAC7B,IAAAH,YAAA,EAAAC,aAAA,CAAC,SAAAd,aAAA,CAAAA,aAAA;IAAMlB,GAAA,EAAKG;EAAA,GAAeE,WAAW,GAAMI,UAAU,C,GACrDH,WAAA,iBAAe,IAAAyB,YAAA,EAAAC,aAAA,CAAC,SAAAd,aAAA,CAAAA,aAAA;IAAMlB,GAAA,EAAKI;EAAA,GAAeE,WAAW,GAAMG,UAAU,C,GACrEO,WAAA,CAAYmB,QAAQ;AAG3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}