{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"UNSTABLE_portalContainer\"];\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3 } from \"./utils.mjs\";\nimport { OverlayArrowContext as $44f671af83e7d9e0$export$2de4954e8ae13b9f } from \"./OverlayArrow.mjs\";\nimport { useTooltipTrigger as $cCslV$useTooltipTrigger, OverlayContainer as $cCslV$OverlayContainer, useOverlayPosition as $cCslV$useOverlayPosition, mergeProps as $cCslV$mergeProps, useTooltip as $cCslV$useTooltip } from \"react-aria\";\nimport { FocusableProvider as $cCslV$FocusableProvider } from \"@react-aria/focus\";\nimport { useTooltipTriggerState as $cCslV$useTooltipTriggerState } from \"react-stately\";\nimport $cCslV$react, { createContext as $cCslV$createContext, useRef as $cCslV$useRef, forwardRef as $cCslV$forwardRef, useContext as $cCslV$useContext, useState as $cCslV$useState } from \"react\";\nimport { useExitAnimation as $cCslV$useExitAnimation, useLayoutEffect as $cCslV$useLayoutEffect, useEnterAnimation as $cCslV$useEnterAnimation } from \"@react-aria/utils\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $4e3b923658d69c60$export$7a7623236eec67fa = /*#__PURE__*/(0, $cCslV$createContext)(null);\nconst $4e3b923658d69c60$export$39ae08fa83328b12 = /*#__PURE__*/(0, $cCslV$createContext)(null);\nfunction $4e3b923658d69c60$export$8c610744efcf8a1d(props) {\n  let state = (0, $cCslV$useTooltipTriggerState)(props);\n  let ref = (0, $cCslV$useRef)(null);\n  let {\n    triggerProps: triggerProps,\n    tooltipProps: tooltipProps\n  } = (0, $cCslV$useTooltipTrigger)(props, state, ref);\n  return /*#__PURE__*/(0, $cCslV$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$4e3b923658d69c60$export$7a7623236eec67fa, state], [$4e3b923658d69c60$export$39ae08fa83328b12, _objectSpread(_objectSpread({}, tooltipProps), {}, {\n      triggerRef: ref\n    })]]\n  }, /*#__PURE__*/(0, $cCslV$react).createElement((0, $cCslV$FocusableProvider), _objectSpread(_objectSpread({}, triggerProps), {}, {\n    ref: ref\n  }), props.children));\n}\nconst $4e3b923658d69c60$export$28c660c63b792dea = /*#__PURE__*/(0, $cCslV$forwardRef)(function Tooltip(_ref, ref) {\n  let {\n      UNSTABLE_portalContainer: UNSTABLE_portalContainer\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $4e3b923658d69c60$export$39ae08fa83328b12);\n  let contextState = (0, $cCslV$useContext)($4e3b923658d69c60$export$7a7623236eec67fa);\n  let localState = (0, $cCslV$useTooltipTriggerState)(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n  let isExiting = (0, $cCslV$useExitAnimation)(ref, state.isOpen) || props.isExiting || false;\n  if (!state.isOpen && !isExiting) return null;\n  return /*#__PURE__*/(0, $cCslV$react).createElement((0, $cCslV$OverlayContainer), {\n    portalContainer: UNSTABLE_portalContainer\n  }, /*#__PURE__*/(0, $cCslV$react).createElement($4e3b923658d69c60$var$TooltipInner, _objectSpread(_objectSpread({}, props), {}, {\n    tooltipRef: ref,\n    isExiting: isExiting\n  })));\n});\nfunction $4e3b923658d69c60$var$TooltipInner(props) {\n  let state = (0, $cCslV$useContext)($4e3b923658d69c60$export$7a7623236eec67fa);\n  // Calculate the arrow size internally\n  // Referenced from: packages/@react-spectrum/tooltip/src/TooltipTrigger.tsx\n  let arrowRef = (0, $cCslV$useRef)(null);\n  let [arrowWidth, setArrowWidth] = (0, $cCslV$useState)(0);\n  (0, $cCslV$useLayoutEffect)(() => {\n    if (arrowRef.current && state.isOpen) setArrowWidth(arrowRef.current.getBoundingClientRect().width);\n  }, [state.isOpen, arrowRef]);\n  let {\n    overlayProps: overlayProps,\n    arrowProps: arrowProps,\n    placement: placement\n  } = (0, $cCslV$useOverlayPosition)({\n    placement: props.placement || 'top',\n    targetRef: props.triggerRef,\n    overlayRef: props.tooltipRef,\n    offset: props.offset,\n    crossOffset: props.crossOffset,\n    isOpen: state.isOpen,\n    arrowSize: arrowWidth,\n    arrowBoundaryOffset: props.arrowBoundaryOffset,\n    shouldFlip: props.shouldFlip,\n    onClose: () => state.close(true)\n  });\n  let isEntering = (0, $cCslV$useEnterAnimation)(props.tooltipRef, !!placement) || props.isEntering || false;\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)(_objectSpread(_objectSpread({}, props), {}, {\n    defaultClassName: 'react-aria-Tooltip',\n    values: {\n      placement: placement,\n      isEntering: isEntering,\n      isExiting: props.isExiting,\n      state: state\n    }\n  }));\n  props = (0, $cCslV$mergeProps)(props, overlayProps);\n  let {\n    tooltipProps: tooltipProps\n  } = (0, $cCslV$useTooltip)(props, state);\n  return /*#__PURE__*/(0, $cCslV$react).createElement(\"div\", _objectSpread(_objectSpread(_objectSpread({}, tooltipProps), {}, {\n    ref: props.tooltipRef\n  }, renderProps), {}, {\n    style: _objectSpread(_objectSpread({}, overlayProps.style), renderProps.style),\n    \"data-placement\": placement !== null && placement !== void 0 ? placement : undefined,\n    \"data-entering\": isEntering || undefined,\n    \"data-exiting\": props.isExiting || undefined\n  }), /*#__PURE__*/(0, $cCslV$react).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {\n    value: _objectSpread(_objectSpread({}, arrowProps), {}, {\n      placement: placement,\n      ref: arrowRef\n    })\n  }, renderProps.children));\n}\nexport { $4e3b923658d69c60$export$7a7623236eec67fa as TooltipTriggerStateContext, $4e3b923658d69c60$export$39ae08fa83328b12 as TooltipContext, $4e3b923658d69c60$export$8c610744efcf8a1d as TooltipTrigger, $4e3b923658d69c60$export$28c660c63b792dea as Tooltip };","map":{"version":3,"names":["$4e3b923658d69c60$export$7a7623236eec67fa","$cCslV$createContext","$4e3b923658d69c60$export$39ae08fa83328b12","$4e3b923658d69c60$export$8c610744efcf8a1d","props","state","$cCslV$useTooltipTriggerState","ref","$cCslV$useRef","triggerProps","tooltipProps","$cCslV$useTooltipTrigger","$cCslV$react","createElement","$64fa3d84918910a7$export$2881499e37b75b9a","values","_objectSpread","triggerRef","$cCslV$FocusableProvider","children","$4e3b923658d69c60$export$28c660c63b792dea","$cCslV$forwardRef","Tooltip","_ref","UNSTABLE_portalContainer","_objectWithoutProperties","_excluded","$64fa3d84918910a7$export$29f1550f4b0d4415","contextState","$cCslV$useContext","localState","isOpen","defaultOpen","isExiting","$cCslV$useExitAnimation","$cCslV$OverlayContainer","portalContainer","$4e3b923658d69c60$var$TooltipInner","tooltipRef","arrowRef","arrowWidth","setArrowWidth","$cCslV$useState","$cCslV$useLayoutEffect","current","getBoundingClientRect","width","overlayProps","arrowProps","placement","$cCslV$useOverlayPosition","targetRef","overlayRef","offset","crossOffset","arrowSize","arrowBoundaryOffset","shouldFlip","onClose","close","isEntering","$cCslV$useEnterAnimation","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","$cCslV$mergeProps","$cCslV$useTooltip","style","undefined","$44f671af83e7d9e0$export$2de4954e8ae13b9f","Provider","value"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\Tooltip.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, FocusableElement, forwardRefType, RefObject} from '@react-types/shared';\nimport {AriaPositionProps, mergeProps, OverlayContainer, Placement, PlacementAxis, PositionProps, useOverlayPosition, useTooltip, useTooltipTrigger} from 'react-aria';\nimport {ContextValue, Provider, RenderProps, useContextProps, useRenderProps} from './utils';\nimport {FocusableProvider} from '@react-aria/focus';\nimport {OverlayArrowContext} from './OverlayArrow';\nimport {OverlayTriggerProps, TooltipTriggerProps, TooltipTriggerState, useTooltipTriggerState} from 'react-stately';\nimport React, {createContext, ForwardedRef, forwardRef, ReactNode, useContext, useRef, useState} from 'react';\nimport {useEnterAnimation, useExitAnimation, useLayoutEffect} from '@react-aria/utils';\n\nexport interface TooltipTriggerComponentProps extends TooltipTriggerProps {\n  children: ReactNode\n}\n\nexport interface TooltipProps extends PositionProps, Pick<AriaPositionProps, 'arrowBoundaryOffset'>, OverlayTriggerProps, AriaLabelingProps, RenderProps<TooltipRenderProps> {\n  /**\n   * The ref for the element which the tooltip positions itself with respect to.\n   *\n   * When used within a TooltipTrigger this is set automatically. It is only required when used standalone.\n   */\n  triggerRef?: RefObject<Element | null>,\n  /**\n   * Whether the tooltip is currently performing an entry animation.\n   */\n  isEntering?: boolean,\n  /**\n   * Whether the tooltip is currently performing an exit animation.\n   */\n  isExiting?: boolean,\n  /**\n   * The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.\n   * @default document.body\n   */\n  UNSTABLE_portalContainer?: Element,\n  /**\n   * The placement of the tooltip with respect to the trigger.\n   * @default 'top'\n   */\n  placement?: Placement\n}\n\nexport interface TooltipRenderProps {\n  /**\n   * The placement of the tooltip relative to the trigger.\n   * @selector [data-placement=\"left | right | top | bottom\"]\n   */\n  placement: PlacementAxis | null,\n  /**\n   * Whether the tooltip is currently entering. Use this to apply animations.\n   * @selector [data-entering]\n   */\n  isEntering: boolean,\n  /**\n   * Whether the tooltip is currently exiting. Use this to apply animations.\n   * @selector [data-exiting]\n   */\n  isExiting: boolean,\n  /**\n   * State of the tooltip.\n   */\n  state: TooltipTriggerState\n}\n\nexport const TooltipTriggerStateContext = createContext<TooltipTriggerState | null>(null);\nexport const TooltipContext = createContext<ContextValue<TooltipProps, HTMLDivElement>>(null);\n\n/**\n * TooltipTrigger wraps around a trigger element and a Tooltip. It handles opening and closing\n * the Tooltip when the user hovers over or focuses the trigger, and positioning the Tooltip\n * relative to the trigger.\n */\nexport function TooltipTrigger(props: TooltipTriggerComponentProps) {\n  let state = useTooltipTriggerState(props);\n  let ref = useRef<FocusableElement>(null);\n  let {triggerProps, tooltipProps} = useTooltipTrigger(props, state, ref);\n\n  return (\n    <Provider\n      values={[\n        [TooltipTriggerStateContext, state],\n        [TooltipContext, {...tooltipProps, triggerRef: ref}]\n      ]}>\n      <FocusableProvider {...triggerProps} ref={ref}>\n        {props.children}\n      </FocusableProvider>\n    </Provider>\n  );\n}\n\n/**\n * A tooltip displays a description of an element on hover or focus.\n */\nexport const Tooltip = /*#__PURE__*/ (forwardRef as forwardRefType)(function Tooltip({UNSTABLE_portalContainer, ...props}: TooltipProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, TooltipContext);\n  let contextState = useContext(TooltipTriggerStateContext);\n  let localState = useTooltipTriggerState(props);\n  let state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\n  let isExiting = useExitAnimation(ref, state.isOpen) || props.isExiting || false;\n  if (!state.isOpen && !isExiting) {\n    return null;\n  }\n\n  return (\n    <OverlayContainer portalContainer={UNSTABLE_portalContainer}>\n      <TooltipInner {...props} tooltipRef={ref} isExiting={isExiting} />\n    </OverlayContainer>\n  );\n});\n\nfunction TooltipInner(props: TooltipProps & {isExiting: boolean, tooltipRef: RefObject<HTMLDivElement | null>}) {\n  let state = useContext(TooltipTriggerStateContext)!;\n\n  // Calculate the arrow size internally\n  // Referenced from: packages/@react-spectrum/tooltip/src/TooltipTrigger.tsx\n  let arrowRef = useRef<HTMLDivElement>(null);\n  let [arrowWidth, setArrowWidth] = useState(0);\n  useLayoutEffect(() => {\n    if (arrowRef.current && state.isOpen) {\n      setArrowWidth(arrowRef.current.getBoundingClientRect().width);\n    }\n  }, [state.isOpen, arrowRef]);\n\n  let {overlayProps, arrowProps, placement} = useOverlayPosition({\n    placement: props.placement || 'top',\n    targetRef: props.triggerRef!,\n    overlayRef: props.tooltipRef,\n    offset: props.offset,\n    crossOffset: props.crossOffset,\n    isOpen: state.isOpen,\n    arrowSize: arrowWidth,\n    arrowBoundaryOffset: props.arrowBoundaryOffset,\n    shouldFlip: props.shouldFlip,\n    onClose: () => state.close(true)\n  });\n\n  let isEntering = useEnterAnimation(props.tooltipRef, !!placement) || props.isEntering || false;\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-Tooltip',\n    values: {\n      placement,\n      isEntering,\n      isExiting: props.isExiting,\n      state\n    }\n  });\n\n  props = mergeProps(props, overlayProps);\n  let {tooltipProps} = useTooltip(props, state);\n\n  return (\n    <div\n      {...tooltipProps}\n      ref={props.tooltipRef}\n      {...renderProps}\n      style={{...overlayProps.style, ...renderProps.style}}\n      data-placement={placement ?? undefined}\n      data-entering={isEntering || undefined}\n      data-exiting={props.isExiting || undefined}>\n      <OverlayArrowContext.Provider value={{...arrowProps, placement, ref: arrowRef}}>\n        {renderProps.children}\n      </OverlayArrowContext.Provider>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;AA0EO,MAAMA,yCAAA,gBAA6B,IAAAC,oBAAY,EAA8B;AAC7E,MAAMC,yCAAA,gBAAiB,IAAAD,oBAAY,EAA8C;AAOjF,SAASE,0CAAeC,KAAmC;EAChE,IAAIC,KAAA,GAAQ,IAAAC,6BAAqB,EAAEF,KAAA;EACnC,IAAIG,GAAA,GAAM,IAAAC,aAAK,EAAoB;EACnC,IAAI;IAAAC,YAAA,EAACA,YAAY;IAAAC,YAAA,EAAEA;EAAY,CAAC,GAAG,IAAAC,wBAAgB,EAAEP,KAAA,EAAOC,KAAA,EAAOE,GAAA;EAEnE,oBACE,IAAAK,YAAA,EAAAC,aAAA,EAAC,GAAAC,yCAAO;IACNC,MAAA,EAAQ,CACN,CAACf,yCAAA,EAA4BK,KAAA,CAAM,EACnC,CAACH,yCAAA,EAAAc,aAAA,CAAAA,aAAA,KAAoBN,YAAY;MAAEO,UAAA,EAAYV;IAAA,GAAK;kBAEtD,IAAAK,YAAA,EAAAC,aAAA,EAAC,GAAAK,wBAAgB,GAAAF,aAAA,CAAAA,aAAA,KAAMP,YAAY;IAAEF,GAAA,EAAKA;EAAA,IACvCH,KAAA,CAAMe,QAAQ;AAIvB;AAKO,MAAMC,yCAAA,GAAwB,aAAC,IAAAC,iBAAS,EAAqB,SAASC,QAAAC,IAAA,EAA4DhB,GAAiC;EAAA,IAArF;MAAAiB,wBAAA,EAACA;IAA6B,CAAoB,GAAAD,IAAA;IAApBnB,KAAA,GAAAqB,wBAAA,CAAAF,IAAA,EAAAG,SAAA;EACjH,CAACtB,KAAA,EAAOG,GAAA,CAAI,GAAG,IAAAoB,yCAAc,EAAEvB,KAAA,EAAOG,GAAA,EAAKL,yCAAA;EAC3C,IAAI0B,YAAA,GAAe,IAAAC,iBAAS,EAAE7B,yCAAA;EAC9B,IAAI8B,UAAA,GAAa,IAAAxB,6BAAqB,EAAEF,KAAA;EACxC,IAAIC,KAAA,GAAQD,KAAA,CAAM2B,MAAM,IAAI,QAAQ3B,KAAA,CAAM4B,WAAW,IAAI,QAAQ,CAACJ,YAAA,GAAeE,UAAA,GAAaF,YAAA;EAC9F,IAAIK,SAAA,GAAY,IAAAC,uBAAe,EAAE3B,GAAA,EAAKF,KAAA,CAAM0B,MAAM,KAAK3B,KAAA,CAAM6B,SAAS,IAAI;EAC1E,IAAI,CAAC5B,KAAA,CAAM0B,MAAM,IAAI,CAACE,SAAA,EACpB,OAAO;EAGT,oBACE,IAAArB,YAAA,EAAAC,aAAA,EAAC,GAAAsB,uBAAe;IAAEC,eAAA,EAAiBZ;kBACjC,IAAAZ,YAAA,EAAAC,aAAA,CAACwB,kCAAA,EAAArB,aAAA,CAAAA,aAAA,KAAiBZ,KAAK;IAAEkC,UAAA,EAAY/B,GAAA;IAAK0B,SAAA,EAAWA;EAAA,E;AAG3D;AAEA,SAASI,mCAAajC,KAAwF;EAC5G,IAAIC,KAAA,GAAQ,IAAAwB,iBAAS,EAAE7B,yCAAA;EAEvB;EACA;EACA,IAAIuC,QAAA,GAAW,IAAA/B,aAAK,EAAkB;EACtC,IAAI,CAACgC,UAAA,EAAYC,aAAA,CAAc,GAAG,IAAAC,eAAO,EAAE;EAC3C,IAAAC,sBAAc,EAAE;IACd,IAAIJ,QAAA,CAASK,OAAO,IAAIvC,KAAA,CAAM0B,MAAM,EAClCU,aAAA,CAAcF,QAAA,CAASK,OAAO,CAACC,qBAAqB,GAAGC,KAAK;EAEhE,GAAG,CAACzC,KAAA,CAAM0B,MAAM,EAAEQ,QAAA,CAAS;EAE3B,IAAI;IAAAQ,YAAA,EAACA,YAAY;IAAAC,UAAA,EAAEA,UAAU;IAAAC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,yBAAiB,EAAE;IAC7DD,SAAA,EAAW7C,KAAA,CAAM6C,SAAS,IAAI;IAC9BE,SAAA,EAAW/C,KAAA,CAAMa,UAAU;IAC3BmC,UAAA,EAAYhD,KAAA,CAAMkC,UAAU;IAC5Be,MAAA,EAAQjD,KAAA,CAAMiD,MAAM;IACpBC,WAAA,EAAalD,KAAA,CAAMkD,WAAW;IAC9BvB,MAAA,EAAQ1B,KAAA,CAAM0B,MAAM;IACpBwB,SAAA,EAAWf,UAAA;IACXgB,mBAAA,EAAqBpD,KAAA,CAAMoD,mBAAmB;IAC9CC,UAAA,EAAYrD,KAAA,CAAMqD,UAAU;IAC5BC,OAAA,EAASA,CAAA,KAAMrD,KAAA,CAAMsD,KAAK,CAAC;EAC7B;EAEA,IAAIC,UAAA,GAAa,IAAAC,wBAAgB,EAAEzD,KAAA,CAAMkC,UAAU,EAAE,CAAC,CAACW,SAAA,KAAc7C,KAAA,CAAMwD,UAAU,IAAI;EACzF,IAAIE,WAAA,GAAc,IAAAC,uCAAa,EAAA/C,aAAA,CAAAA,aAAA,KAC1BZ,KAAK;IACR4D,gBAAA,EAAkB;IAClBjD,MAAA,EAAQ;iBACNkC,SAAA;kBACAW,UAAA;MACA3B,SAAA,EAAW7B,KAAA,CAAM6B,SAAS;aAC1B5B;IACF;EAAA,EACF;EAEAD,KAAA,GAAQ,IAAA6D,iBAAS,EAAE7D,KAAA,EAAO2C,YAAA;EAC1B,IAAI;IAAArC,YAAA,EAACA;EAAY,CAAC,GAAG,IAAAwD,iBAAS,EAAE9D,KAAA,EAAOC,KAAA;EAEvC,oBACE,IAAAO,YAAA,EAAAC,aAAA,CAAC,OAAAG,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKN,YAAY;IAChBH,GAAA,EAAKH,KAAA,CAAMkC;EAAU,GACjBwB,WAAW;IACfK,KAAA,EAAAnD,aAAA,CAAAA,aAAA,KAAW+B,YAAA,CAAaoB,KAAK,GAAKL,WAAA,CAAYK,KAAK;IACnD,kBAAgBlB,SAAA,aAAAA,SAAA,cAAAA,SAAA,GAAamB,SAAA;IAC7B,iBAAeR,UAAA,IAAcQ,SAAA;IAC7B,gBAAchE,KAAA,CAAM6B,SAAS,IAAImC;EAAA,I,aACjC,IAAAxD,YAAA,EAAAC,aAAA,CAAC,IAAAwD,yCAAkB,EAAEC,QAAQ;IAACC,KAAA,EAAAvD,aAAA,CAAAA,aAAA,KAAWgC,UAAU;iBAAEC,SAAA;MAAW1C,GAAA,EAAKgC;IAAA;KAClEuB,WAAA,CAAY3C,QAAQ;AAI7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}