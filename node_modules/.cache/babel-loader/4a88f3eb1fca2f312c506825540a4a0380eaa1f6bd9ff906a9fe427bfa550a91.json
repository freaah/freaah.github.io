{"ast":null,"code":"\"use client\";\n\n// src/index.tsx\nimport React from \"react\";\nvar PlasmicDataSourceContext = React.createContext(void 0);\nfunction usePlasmicDataSourceContext() {\n  return React.useContext(PlasmicDataSourceContext);\n}\nfunction useCurrentUser() {\n  var _a;\n  const ctx = usePlasmicDataSourceContext();\n  return (_a = ctx == null ? void 0 : ctx.user) != null ? _a : {\n    isLoggedIn: false\n  };\n}\nvar PlasmicDataSourceContextProvider = PlasmicDataSourceContext.Provider;\nexport { PlasmicDataSourceContextProvider, useCurrentUser, usePlasmicDataSourceContext };","map":{"version":3,"names":["React","PlasmicDataSourceContext","createContext","usePlasmicDataSourceContext","useContext","useCurrentUser","_a","ctx","user","isLoggedIn","PlasmicDataSourceContextProvider","Provider"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@plasmicapp\\data-sources-context\\src\\index.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface PlasmicDataSourceContextValue {\n  userAuthToken?: string | null;\n  isUserLoading?: boolean;\n  authRedirectUri?: string;\n  user?: {\n    email: string;\n    properties: Record<string, unknown> | null;\n    roleId: string;\n    roleName: string;\n    roleIds: string[];\n    roleNames: string[];\n  } | null;\n}\n\nconst PlasmicDataSourceContext = React.createContext<\n  PlasmicDataSourceContextValue | undefined\n>(undefined);\n\nexport function usePlasmicDataSourceContext() {\n  return React.useContext(PlasmicDataSourceContext);\n}\n\nexport function useCurrentUser() {\n  const ctx = usePlasmicDataSourceContext();\n  return (\n    ctx?.user ?? {\n      isLoggedIn: false,\n    }\n  );\n}\n\nexport const PlasmicDataSourceContextProvider =\n  PlasmicDataSourceContext.Provider;\n"],"mappings":";;;AAAA,OAAOA,KAAA,MAAW;AAgBlB,IAAMC,wBAAA,GAA2BD,KAAA,CAAME,aAAA,CAErC,MAAS;AAEJ,SAASC,4BAAA,EAA8B;EAC5C,OAAOH,KAAA,CAAMI,UAAA,CAAWH,wBAAwB;AAClD;AAEO,SAASI,eAAA,EAAiB;EAxBjC,IAAAC,EAAA;EAyBE,MAAMC,GAAA,GAAMJ,2BAAA,CAA4B;EACxC,QACEG,EAAA,GAAAC,GAAA,oBAAAA,GAAA,CAAKC,IAAA,KAAL,OAAAF,EAAA,GAAa;IACXG,UAAA,EAAY;EACd;AAEJ;AAEO,IAAMC,gCAAA,GACXT,wBAAA,CAAyBU,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}