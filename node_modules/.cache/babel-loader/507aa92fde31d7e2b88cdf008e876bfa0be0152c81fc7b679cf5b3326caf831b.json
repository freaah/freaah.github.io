{"ast":null,"code":"import { ColorFieldContext as $4e85f108e88277b8$export$44644b8a16031b5b } from \"./RSPContexts.mjs\";\nimport { FieldErrorContext as $ee014567cb39d3f0$export$ff05c3ac10437e03 } from \"./FieldError.mjs\";\nimport { InputContext as $3985021b0ad6602f$export$37fb8590cf2c088c } from \"./Input.mjs\";\nimport { LabelContext as $01b77f81d0f07f68$export$75b6ee27786ba447 } from \"./Label.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, removeDataAttributes as $64fa3d84918910a7$export$ef03459518577ad4, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3, useSlot as $64fa3d84918910a7$export$9d4c57ee4c6ffdd8 } from \"./utils.mjs\";\nimport { TextContext as $514c0188e459b4c0$export$9afb8bc826b033ea } from \"./Text.mjs\";\nimport { useColorChannelField as $kjuGe$useColorChannelField, useColorField as $kjuGe$useColorField } from \"@react-aria/color\";\nimport { useColorChannelFieldState as $kjuGe$useColorChannelFieldState, useColorFieldState as $kjuGe$useColorFieldState } from \"@react-stately/color\";\nimport { filterDOMProps as $kjuGe$filterDOMProps } from \"@react-aria/utils\";\nimport $kjuGe$react, { createContext as $kjuGe$createContext, forwardRef as $kjuGe$forwardRef, useRef as $kjuGe$useRef } from \"react\";\nimport { useLocale as $kjuGe$useLocale } from \"react-aria\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $3ada01a82feafb94$export$96b6d32b05a1a8ed = /*#__PURE__*/(0, $kjuGe$createContext)(null);\nconst $3ada01a82feafb94$export$b865d4358897bb17 = /*#__PURE__*/(0, $kjuGe$forwardRef)(function ColorField(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, (0, $4e85f108e88277b8$export$44644b8a16031b5b));\n  if (props.channel) return /*#__PURE__*/(0, $kjuGe$react).createElement($3ada01a82feafb94$var$ColorChannelField, {\n    ...props,\n    channel: props.channel,\n    forwardedRef: ref\n  });else return /*#__PURE__*/(0, $kjuGe$react).createElement($3ada01a82feafb94$var$HexColorField, {\n    ...props,\n    forwardedRef: ref\n  });\n});\nfunction $3ada01a82feafb94$var$ColorChannelField(props) {\n  let {\n    locale: locale\n  } = (0, $kjuGe$useLocale)();\n  let state = (0, $kjuGe$useColorChannelFieldState)({\n    ...props,\n    locale: locale\n  });\n  let inputRef = (0, $kjuGe$useRef)(null);\n  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();\n  var _props_validationBehavior;\n  let {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    ...validation\n  } = (0, $kjuGe$useColorChannelField)({\n    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),\n    label: label,\n    validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : 'native'\n  }, state, inputRef);\n  return /*#__PURE__*/(0, $kjuGe$react).createElement((0, $kjuGe$react).Fragment, null, $3ada01a82feafb94$var$useChildren(props, state, props.forwardedRef, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation), props.name && /*#__PURE__*/(0, $kjuGe$react).createElement(\"input\", {\n    type: \"hidden\",\n    name: props.name,\n    value: isNaN(state.numberValue) ? '' : state.numberValue\n  }));\n}\nfunction $3ada01a82feafb94$var$HexColorField(props) {\n  var _props_validationBehavior;\n  let state = (0, $kjuGe$useColorFieldState)({\n    ...props,\n    validationBehavior: (_props_validationBehavior = props.validationBehavior) !== null && _props_validationBehavior !== void 0 ? _props_validationBehavior : 'native'\n  });\n  let inputRef = (0, $kjuGe$useRef)(null);\n  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();\n  var _props_validationBehavior1;\n  let {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    ...validation\n  } = (0, $kjuGe$useColorField)({\n    ...(0, $64fa3d84918910a7$export$ef03459518577ad4)(props),\n    label: label,\n    validationBehavior: (_props_validationBehavior1 = props.validationBehavior) !== null && _props_validationBehavior1 !== void 0 ? _props_validationBehavior1 : 'native'\n  }, state, inputRef);\n  return $3ada01a82feafb94$var$useChildren(props, state, props.forwardedRef, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation);\n}\nfunction $3ada01a82feafb94$var$useChildren(props, state, ref, inputProps, inputRef, labelProps, labelRef, descriptionProps, errorMessageProps, validation) {\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    values: {\n      state: state,\n      channel: props.channel || 'hex',\n      isDisabled: props.isDisabled || false,\n      isInvalid: validation.isInvalid || false\n    },\n    defaultClassName: 'react-aria-ColorField'\n  });\n  let DOMProps = (0, $kjuGe$filterDOMProps)(props);\n  delete DOMProps.id;\n  return /*#__PURE__*/(0, $kjuGe$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[$3ada01a82feafb94$export$96b6d32b05a1a8ed, state], [(0, $3985021b0ad6602f$export$37fb8590cf2c088c), {\n      ...inputProps,\n      ref: inputRef\n    }], [(0, $01b77f81d0f07f68$export$75b6ee27786ba447), {\n      ...labelProps,\n      ref: labelRef\n    }], [(0, $514c0188e459b4c0$export$9afb8bc826b033ea), {\n      slots: {\n        description: descriptionProps,\n        errorMessage: errorMessageProps\n      }\n    }], [(0, $ee014567cb39d3f0$export$ff05c3ac10437e03), validation]]\n  }, /*#__PURE__*/(0, $kjuGe$react).createElement(\"div\", {\n    ...DOMProps,\n    ...renderProps,\n    ref: ref,\n    slot: props.slot || undefined,\n    \"data-channel\": props.channel || 'hex',\n    \"data-disabled\": props.isDisabled || undefined,\n    \"data-invalid\": validation.isInvalid || undefined\n  }));\n}\nexport { $3ada01a82feafb94$export$96b6d32b05a1a8ed as ColorFieldStateContext, $3ada01a82feafb94$export$b865d4358897bb17 as ColorField };","map":{"version":3,"names":["$3ada01a82feafb94$export$96b6d32b05a1a8ed","$kjuGe$createContext","$3ada01a82feafb94$export$b865d4358897bb17","$kjuGe$forwardRef","ColorField","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","$4e85f108e88277b8$export$44644b8a16031b5b","channel","$kjuGe$react","createElement","$3ada01a82feafb94$var$ColorChannelField","forwardedRef","$3ada01a82feafb94$var$HexColorField","locale","$kjuGe$useLocale","state","$kjuGe$useColorChannelFieldState","inputRef","$kjuGe$useRef","labelRef","label","$64fa3d84918910a7$export$9d4c57ee4c6ffdd8","_props_validationBehavior","labelProps","inputProps","descriptionProps","errorMessageProps","validation","$kjuGe$useColorChannelField","$64fa3d84918910a7$export$ef03459518577ad4","validationBehavior","Fragment","$3ada01a82feafb94$var$useChildren","name","type","value","isNaN","numberValue","$kjuGe$useColorFieldState","_props_validationBehavior1","$kjuGe$useColorField","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","values","isDisabled","isInvalid","defaultClassName","DOMProps","$kjuGe$filterDOMProps","id","$64fa3d84918910a7$export$2881499e37b75b9a","$3985021b0ad6602f$export$37fb8590cf2c088c","$01b77f81d0f07f68$export$75b6ee27786ba447","$514c0188e459b4c0$export$9afb8bc826b033ea","slots","description","errorMessage","$ee014567cb39d3f0$export$ff05c3ac10437e03","slot","undefined"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\ColorField.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaColorFieldProps, useColorChannelField, useColorField} from '@react-aria/color';\nimport {ColorChannel, ColorSpace} from '@react-types/color';\nimport {ColorFieldContext} from './RSPContexts';\nimport {ColorFieldState, useColorChannelFieldState, useColorFieldState} from '@react-stately/color';\nimport {FieldErrorContext} from './FieldError';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {InputContext} from './Input';\nimport {InputDOMProps, ValidationResult} from '@react-types/shared';\nimport {LabelContext} from './Label';\nimport {Provider, RACValidation, removeDataAttributes, RenderProps, SlotProps, useContextProps, useRenderProps, useSlot} from './utils';\nimport React, {createContext, ForwardedRef, forwardRef, HTMLAttributes, InputHTMLAttributes, LabelHTMLAttributes, Ref, useRef} from 'react';\nimport {TextContext} from './Text';\nimport {useLocale} from 'react-aria';\n\nexport interface ColorFieldRenderProps {\n  /**\n   * Whether the color field is disabled.\n   * @selector [data-disabled]\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the color field is invalid.\n   * @selector [data-invalid]\n   */\n  isInvalid: boolean,\n  /**\n   * The color channel that this field edits, or \"hex\" if no `channel` prop is set.\n   * @selector [data-channel=\"hex | hue | saturation | ...\"]\n   */\n  channel: ColorChannel | 'hex',\n  /**\n   * State of the color field.\n   */\n  state: ColorFieldState\n}\n\nexport interface ColorFieldProps extends Omit<AriaColorFieldProps, 'label' | 'placeholder' | 'description' | 'errorMessage' | 'validationState' | 'validationBehavior'>, RACValidation, InputDOMProps, RenderProps<ColorFieldRenderProps>, SlotProps {\n  /**\n   * The color channel that this field edits. If not provided, \n   * the color is edited as a hex value.\n   */\n  channel?: ColorChannel,\n  /**\n   * The color space that the color field operates in if a `channel` prop is provided.\n   * If no `channel` is provided, the color field always displays the color as an RGB hex value.\n   */\n  colorSpace?: ColorSpace\n}\n\nexport const ColorFieldStateContext = createContext<ColorFieldState | null>(null);\n\n/**\n * A color field allows users to edit a hex color or individual color channel value.\n */\nexport const ColorField = forwardRef(function ColorField(props: ColorFieldProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, ColorFieldContext);\n  if (props.channel) {\n    return <ColorChannelField {...props} channel={props.channel} forwardedRef={ref} />;\n  } else {\n    return <HexColorField {...props} forwardedRef={ref} />;\n  }\n});\n\ninterface ColorChannelFieldProps extends Omit<ColorFieldProps, 'channel'> {\n  channel: ColorChannel,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n}\n\nfunction ColorChannelField(props: ColorChannelFieldProps) {\n  let {locale} = useLocale();\n  let state = useColorChannelFieldState({\n    ...props,\n    locale\n  });\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let [labelRef, label] = useSlot();\n  let {\n    labelProps,\n    inputProps,\n    descriptionProps,\n    errorMessageProps,\n    ...validation\n  } = useColorChannelField({\n    ...removeDataAttributes(props),\n    label,\n    validationBehavior: props.validationBehavior ?? 'native'\n  }, state, inputRef);\n\n  return (\n    <>\n      {useChildren(\n        props,\n        state,\n        props.forwardedRef,\n        inputProps,\n        inputRef,\n        labelProps,\n        labelRef,\n        descriptionProps,\n        errorMessageProps,\n        validation\n      )}\n      {props.name && <input type=\"hidden\" name={props.name} value={isNaN(state.numberValue) ? '' : state.numberValue} />}\n    </>\n  );\n}\n\ninterface HexColorFieldProps extends ColorFieldProps {\n  forwardedRef: ForwardedRef<HTMLDivElement>\n}\n\nfunction HexColorField(props: HexColorFieldProps) {\n  let state = useColorFieldState({\n    ...props,\n    validationBehavior: props.validationBehavior ?? 'native'\n  });\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let [labelRef, label] = useSlot();\n  let {\n    labelProps,\n    inputProps,\n    descriptionProps,\n    errorMessageProps,\n    ...validation\n  } = useColorField({\n    ...removeDataAttributes(props),\n    label,\n    validationBehavior: props.validationBehavior ?? 'native'\n  }, state, inputRef);\n\n  return useChildren(\n    props,\n    state,\n    props.forwardedRef,\n    inputProps,\n    inputRef,\n    labelProps,\n    labelRef,\n    descriptionProps,\n    errorMessageProps,\n    validation\n  );\n}\n\nfunction useChildren(\n  props: ColorFieldProps,\n  state: ColorFieldState,\n  ref: ForwardedRef<HTMLDivElement>,\n  inputProps: InputHTMLAttributes<HTMLElement>,\n  inputRef: Ref<HTMLInputElement>,\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  labelRef: Ref<HTMLLabelElement>,\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  validation: ValidationResult\n) {\n  let renderProps = useRenderProps({\n    ...props,\n    values: {\n      state,\n      channel: props.channel || 'hex',\n      isDisabled: props.isDisabled || false,\n      isInvalid: validation.isInvalid || false\n    },\n    defaultClassName: 'react-aria-ColorField'\n  });\n\n  let DOMProps = filterDOMProps(props);\n  delete DOMProps.id;\n\n  return (\n    <Provider\n      values={[\n        [ColorFieldStateContext, state],\n        [InputContext, {...inputProps, ref: inputRef}],\n        [LabelContext, {...labelProps, ref: labelRef}],\n        [TextContext, {\n          slots: {\n            description: descriptionProps,\n            errorMessage: errorMessageProps\n          }\n        }],\n        [FieldErrorContext, validation]\n      ]}>\n      <div\n        {...DOMProps}\n        {...renderProps}\n        ref={ref}\n        slot={props.slot || undefined}\n        data-channel={props.channel || 'hex'}\n        data-disabled={props.isDisabled || undefined}\n        data-invalid={validation.isInvalid || undefined} />\n    </Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}