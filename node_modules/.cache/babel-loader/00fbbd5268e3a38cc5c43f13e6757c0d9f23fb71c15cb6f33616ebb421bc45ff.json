{"ast":null,"code":"import { ButtonContext as $d2b4bc8c273e7be6$export$24d547caef80ccd1 } from \"./Button.mjs\";\nimport { CollectionRendererContext as $7135fc7d473fd974$export$4feb769f8ddf26c5, DefaultCollectionRenderer as $7135fc7d473fd974$export$a164736487e3f0ae, usePersistedKeys as $7135fc7d473fd974$export$90e00781bc59d8f9 } from \"./Collection.mjs\";\nimport { Provider as $64fa3d84918910a7$export$2881499e37b75b9a, useContextProps as $64fa3d84918910a7$export$29f1550f4b0d4415, useRenderProps as $64fa3d84918910a7$export$4d86445c2cf5e3, useSlot as $64fa3d84918910a7$export$9d4c57ee4c6ffdd8 } from \"./utils.mjs\";\nimport { LabelContext as $01b77f81d0f07f68$export$75b6ee27786ba447 } from \"./Label.mjs\";\nimport { ListStateContext as $eed445e0843c11d0$export$7c5906fe4f1f2af2 } from \"./ListBox.mjs\";\nimport { TextContext as $514c0188e459b4c0$export$9afb8bc826b033ea } from \"./Text.mjs\";\nimport { useTagGroup as $7lruP$useTagGroup, useFocusRing as $7lruP$useFocusRing, useTag as $7lruP$useTag, useHover as $7lruP$useHover } from \"react-aria\";\nimport { CollectionBuilder as $7lruP$CollectionBuilder, Collection as $7lruP$Collection, createLeafComponent as $7lruP$createLeafComponent } from \"@react-aria/collections\";\nimport { filterDOMProps as $7lruP$filterDOMProps, mergeProps as $7lruP$mergeProps, useObjectRef as $7lruP$useObjectRef } from \"@react-aria/utils\";\nimport { useListState as $7lruP$useListState } from \"react-stately\";\nimport $7lruP$react, { createContext as $7lruP$createContext, forwardRef as $7lruP$forwardRef, useRef as $7lruP$useRef, useContext as $7lruP$useContext, useEffect as $7lruP$useEffect } from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $eaf9e70818b436db$export$5b07b5dd2cbd96e3 = /*#__PURE__*/(0, $7lruP$createContext)(null);\nconst $eaf9e70818b436db$export$e755ce3685dd0ca9 = /*#__PURE__*/(0, $7lruP$createContext)(null);\nconst $eaf9e70818b436db$export$67ea30858aaf75e3 = /*#__PURE__*/(0, $7lruP$forwardRef)(function TagGroup(props, ref) {\n  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eaf9e70818b436db$export$5b07b5dd2cbd96e3);\n  return /*#__PURE__*/(0, $7lruP$react).createElement((0, $7lruP$CollectionBuilder), {\n    content: props.children\n  }, collection => /*#__PURE__*/(0, $7lruP$react).createElement($eaf9e70818b436db$var$TagGroupInner, {\n    props: props,\n    forwardedRef: ref,\n    collection: collection\n  }));\n});\nfunction $eaf9e70818b436db$var$TagGroupInner({\n  props: props,\n  forwardedRef: ref,\n  collection: collection\n}) {\n  let tagListRef = (0, $7lruP$useRef)(null);\n  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();\n  let state = (0, $7lruP$useListState)({\n    ...props,\n    children: undefined,\n    collection: collection\n  });\n  // Prevent DOM props from going to two places.\n  let domProps = (0, $7lruP$filterDOMProps)(props);\n  let domPropOverrides = Object.fromEntries(Object.entries(domProps).map(([k]) => [k, undefined]));\n  let {\n    gridProps: gridProps,\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $7lruP$useTagGroup)({\n    ...props,\n    ...domPropOverrides,\n    label: label\n  }, state, tagListRef);\n  var _props_className;\n  return /*#__PURE__*/(0, $7lruP$react).createElement(\"div\", {\n    ...domProps,\n    ref: ref,\n    slot: props.slot || undefined,\n    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : 'react-aria-TagGroup',\n    style: props.style\n  }, /*#__PURE__*/(0, $7lruP$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[(0, $01b77f81d0f07f68$export$75b6ee27786ba447), {\n      ...labelProps,\n      elementType: 'span',\n      ref: labelRef\n    }], [$eaf9e70818b436db$export$e755ce3685dd0ca9, {\n      ...gridProps,\n      ref: tagListRef\n    }], [(0, $eed445e0843c11d0$export$7c5906fe4f1f2af2), state], [(0, $514c0188e459b4c0$export$9afb8bc826b033ea), {\n      slots: {\n        description: descriptionProps,\n        errorMessage: errorMessageProps\n      }\n    }]]\n  }, props.children));\n}\nconst $eaf9e70818b436db$export$f9fef0f55402315b = /*#__PURE__*/(0, $7lruP$forwardRef)(function TagList(props, ref) {\n  let state = (0, $7lruP$useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));\n  return state ? /*#__PURE__*/(0, $7lruP$react).createElement($eaf9e70818b436db$var$TagListInner, {\n    props: props,\n    forwardedRef: ref\n  }) : /*#__PURE__*/(0, $7lruP$react).createElement((0, $7lruP$Collection), props);\n});\nfunction $eaf9e70818b436db$var$TagListInner({\n  props: props,\n  forwardedRef: forwardedRef\n}) {\n  let state = (0, $7lruP$useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));\n  let {\n    CollectionRoot: CollectionRoot\n  } = (0, $7lruP$useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));\n  let [gridProps, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, forwardedRef, $eaf9e70818b436db$export$e755ce3685dd0ca9);\n  delete gridProps.items;\n  delete gridProps.renderEmptyState;\n  let {\n    focusProps: focusProps,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  } = (0, $7lruP$useFocusRing)();\n  let renderValues = {\n    isEmpty: state.collection.size === 0,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible,\n    state: state\n  };\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-TagList',\n    values: renderValues\n  });\n  let persistedKeys = (0, $7135fc7d473fd974$export$90e00781bc59d8f9)(state.selectionManager.focusedKey);\n  return /*#__PURE__*/(0, $7lruP$react).createElement(\"div\", {\n    ...(0, $7lruP$mergeProps)(gridProps, focusProps),\n    ...renderProps,\n    ref: ref,\n    \"data-empty\": state.collection.size === 0 || undefined,\n    \"data-focused\": isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined\n  }, state.collection.size === 0 && props.renderEmptyState ? props.renderEmptyState(renderValues) : /*#__PURE__*/(0, $7lruP$react).createElement(CollectionRoot, {\n    collection: state.collection,\n    persistedKeys: persistedKeys\n  }));\n}\nconst $eaf9e70818b436db$export$3288d34c523a1192 = /*#__PURE__*/(0, $7lruP$createLeafComponent)('item', (props, forwardedRef, item) => {\n  let state = (0, $7lruP$useContext)((0, $eed445e0843c11d0$export$7c5906fe4f1f2af2));\n  let ref = (0, $7lruP$useObjectRef)(forwardedRef);\n  let {\n    focusProps: focusProps,\n    isFocusVisible: isFocusVisible\n  } = (0, $7lruP$useFocusRing)({\n    within: true\n  });\n  let {\n    rowProps: rowProps,\n    gridCellProps: gridCellProps,\n    removeButtonProps: removeButtonProps,\n    ...states\n  } = (0, $7lruP$useTag)({\n    item: item\n  }, state, ref);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = (0, $7lruP$useHover)({\n    isDisabled: !states.allowsSelection,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({\n    ...props,\n    id: undefined,\n    children: item.rendered,\n    defaultClassName: 'react-aria-Tag',\n    values: {\n      ...states,\n      isFocusVisible: isFocusVisible,\n      isHovered: isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior\n    }\n  });\n  (0, $7lruP$useEffect)(() => {\n    if (!item.textValue) console.warn('A `textValue` prop is required for <Tag> elements with non-plain text children for accessibility.');\n  }, [item.textValue]);\n  return /*#__PURE__*/(0, $7lruP$react).createElement(\"div\", {\n    ref: ref,\n    ...renderProps,\n    ...(0, $7lruP$mergeProps)((0, $7lruP$filterDOMProps)(props), rowProps, focusProps, hoverProps),\n    \"data-selected\": states.isSelected || undefined,\n    \"data-disabled\": states.isDisabled || undefined,\n    \"data-hovered\": isHovered || undefined,\n    \"data-focused\": states.isFocused || undefined,\n    \"data-focus-visible\": isFocusVisible || undefined,\n    \"data-pressed\": states.isPressed || undefined,\n    \"data-allows-removing\": states.allowsRemoving || undefined,\n    \"data-selection-mode\": state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode\n  }, /*#__PURE__*/(0, $7lruP$react).createElement(\"div\", {\n    ...gridCellProps,\n    style: {\n      display: 'contents'\n    }\n  }, /*#__PURE__*/(0, $7lruP$react).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {\n    values: [[(0, $d2b4bc8c273e7be6$export$24d547caef80ccd1), {\n      slots: {\n        remove: removeButtonProps\n      }\n    }], [(0, $7135fc7d473fd974$export$4feb769f8ddf26c5), (0, $7135fc7d473fd974$export$a164736487e3f0ae)]]\n  }, renderProps.children)));\n});\nexport { $eaf9e70818b436db$export$5b07b5dd2cbd96e3 as TagGroupContext, $eaf9e70818b436db$export$e755ce3685dd0ca9 as TagListContext, $eaf9e70818b436db$export$67ea30858aaf75e3 as TagGroup, $eaf9e70818b436db$export$f9fef0f55402315b as TagList, $eaf9e70818b436db$export$3288d34c523a1192 as Tag };","map":{"version":3,"names":["$eaf9e70818b436db$export$5b07b5dd2cbd96e3","$7lruP$createContext","$eaf9e70818b436db$export$e755ce3685dd0ca9","$eaf9e70818b436db$export$67ea30858aaf75e3","$7lruP$forwardRef","TagGroup","props","ref","$64fa3d84918910a7$export$29f1550f4b0d4415","$7lruP$react","createElement","$7lruP$CollectionBuilder","content","children","collection","$eaf9e70818b436db$var$TagGroupInner","forwardedRef","tagListRef","$7lruP$useRef","labelRef","label","$64fa3d84918910a7$export$9d4c57ee4c6ffdd8","state","$7lruP$useListState","undefined","domProps","$7lruP$filterDOMProps","domPropOverrides","Object","fromEntries","entries","map","k","gridProps","labelProps","descriptionProps","errorMessageProps","$7lruP$useTagGroup","_props_className","slot","className","style","$64fa3d84918910a7$export$2881499e37b75b9a","values","$01b77f81d0f07f68$export$75b6ee27786ba447","elementType","$eed445e0843c11d0$export$7c5906fe4f1f2af2","$514c0188e459b4c0$export$9afb8bc826b033ea","slots","description","errorMessage","$eaf9e70818b436db$export$f9fef0f55402315b","TagList","$7lruP$useContext","$eaf9e70818b436db$var$TagListInner","$7lruP$Collection","CollectionRoot","$7135fc7d473fd974$export$4feb769f8ddf26c5","items","renderEmptyState","focusProps","isFocused","isFocusVisible","$7lruP$useFocusRing","renderValues","isEmpty","size","renderProps","$64fa3d84918910a7$export$4d86445c2cf5e3","defaultClassName","persistedKeys","$7135fc7d473fd974$export$90e00781bc59d8f9","selectionManager","focusedKey","$7lruP$mergeProps","$eaf9e70818b436db$export$3288d34c523a1192","$7lruP$createLeafComponent","item","$7lruP$useObjectRef","within","rowProps","gridCellProps","removeButtonProps","states","$7lruP$useTag","hoverProps","isHovered","$7lruP$useHover","isDisabled","allowsSelection","onHoverStart","onHoverChange","onHoverEnd","id","rendered","selectionMode","selectionBehavior","$7lruP$useEffect","textValue","console","warn","isSelected","isPressed","allowsRemoving","display","$d2b4bc8c273e7be6$export$24d547caef80ccd1","remove","$7135fc7d473fd974$export$a164736487e3f0ae"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\react-aria-components\\dist\\packages\\react-aria-components\\src\\TagGroup.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTagGroupProps, useFocusRing, useHover, useTag, useTagGroup} from 'react-aria';\nimport {ButtonContext} from './Button';\nimport {Collection, CollectionBuilder, createLeafComponent} from '@react-aria/collections';\nimport {CollectionProps, CollectionRendererContext, DefaultCollectionRenderer, ItemRenderProps, usePersistedKeys} from './Collection';\nimport {ContextValue, DOMProps, Provider, RenderProps, SlotProps, StyleRenderProps, useContextProps, useRenderProps, useSlot} from './utils';\nimport {filterDOMProps, mergeProps, useObjectRef} from '@react-aria/utils';\nimport {forwardRefType, HoverEvents, Key, LinkDOMProps} from '@react-types/shared';\nimport {LabelContext} from './Label';\nimport {ListState, Node, useListState} from 'react-stately';\nimport {ListStateContext} from './ListBox';\nimport React, {createContext, ForwardedRef, forwardRef, JSX, ReactNode, useContext, useEffect, useRef} from 'react';\nimport {TextContext} from './Text';\n\nexport interface TagGroupProps extends Omit<AriaTagGroupProps<unknown>, 'children' | 'items' | 'label' | 'description' | 'errorMessage' | 'keyboardDelegate'>, DOMProps, SlotProps {}\n\nexport interface TagListRenderProps {\n  /**\n   * Whether the tag list has no items and should display its empty state.\n   * @selector [data-empty]\n   */\n  isEmpty: boolean,\n  /**\n   * Whether the tag list is currently focused.\n   * @selector [data-focused]\n   */\n  isFocused: boolean,\n  /**\n   * Whether the tag list is currently keyboard focused.\n   * @selector [data-focus-visible]\n   */\n  isFocusVisible: boolean,\n  /**\n   * State of the TagGroup.\n   */\n  state: ListState<unknown>\n}\n\nexport interface TagListProps<T> extends Omit<CollectionProps<T>, 'disabledKeys'>, StyleRenderProps<TagListRenderProps> {\n  /** Provides content to display when there are no items in the tag list. */\n  renderEmptyState?: (props: TagListRenderProps) => ReactNode\n}\n\nexport const TagGroupContext = createContext<ContextValue<TagGroupProps, HTMLDivElement>>(null);\nexport const TagListContext = createContext<ContextValue<TagListProps<any>, HTMLDivElement>>(null);\n\n/**\n * A tag group is a focusable list of labels, categories, keywords, filters, or other items, with support for keyboard navigation, selection, and removal.\n */\nexport const TagGroup = /*#__PURE__*/ (forwardRef as forwardRefType)(function TagGroup(props: TagGroupProps, ref: ForwardedRef<HTMLDivElement>) {\n  [props, ref] = useContextProps(props, ref, TagGroupContext);\n  return (\n    <CollectionBuilder content={props.children}>\n      {collection => <TagGroupInner props={props} forwardedRef={ref} collection={collection} />}\n    </CollectionBuilder>\n  );\n});\n\ninterface TagGroupInnerProps {\n  props: TagGroupProps,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n  collection\n}\n\nfunction TagGroupInner({props, forwardedRef: ref, collection}: TagGroupInnerProps) {\n  let tagListRef = useRef<HTMLDivElement>(null);\n  let [labelRef, label] = useSlot();\n  let state = useListState({\n    ...props,\n    children: undefined,\n    collection\n  });\n\n  // Prevent DOM props from going to two places.\n  let domProps = filterDOMProps(props);\n  let domPropOverrides = Object.fromEntries(Object.entries(domProps).map(([k]) => [k, undefined]));\n  let {\n    gridProps,\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  } = useTagGroup({\n    ...props,\n    ...domPropOverrides,\n    label\n  }, state, tagListRef);\n\n  return (\n    <div\n      {...domProps}\n      ref={ref}\n      slot={props.slot || undefined}\n      className={props.className ?? 'react-aria-TagGroup'}\n      style={props.style}>\n      <Provider\n        values={[\n          [LabelContext, {...labelProps, elementType: 'span', ref: labelRef}],\n          [TagListContext, {...gridProps, ref: tagListRef}],\n          [ListStateContext, state],\n          [TextContext, {\n            slots: {\n              description: descriptionProps,\n              errorMessage: errorMessageProps\n            }\n          }]\n        ]}>\n        {props.children}\n      </Provider>\n    </div>\n  );\n}\n\n/**\n * A tag list is a container for tags within a TagGroup.\n */\nexport const TagList = /*#__PURE__*/ (forwardRef as forwardRefType)(function TagList<T extends object>(props: TagListProps<T>, ref: ForwardedRef<HTMLDivElement>): JSX.Element {\n  let state = useContext(ListStateContext);\n  return state\n    ? <TagListInner props={props} forwardedRef={ref} />\n    : <Collection {...props} />;\n});\n\ninterface TagListInnerProps<T> {\n  props: TagListProps<T>,\n  forwardedRef: ForwardedRef<HTMLDivElement>\n}\n\nfunction TagListInner<T extends object>({props, forwardedRef}: TagListInnerProps<T>) {\n  let state = useContext(ListStateContext)!;\n  let {CollectionRoot} = useContext(CollectionRendererContext);\n  let [gridProps, ref] = useContextProps(props, forwardedRef, TagListContext);\n  delete gridProps.items;\n  delete gridProps.renderEmptyState;\n\n  let {focusProps, isFocused, isFocusVisible} = useFocusRing();\n  let renderValues = {\n    isEmpty: state.collection.size === 0,\n    isFocused,\n    isFocusVisible,\n    state\n  };\n  let renderProps = useRenderProps({\n    className: props.className,\n    style: props.style,\n    defaultClassName: 'react-aria-TagList',\n    values: renderValues\n  });\n\n  let persistedKeys = usePersistedKeys(state.selectionManager.focusedKey);\n\n  return (\n    <div\n      {...mergeProps(gridProps, focusProps)}\n      {...renderProps}\n      ref={ref}\n      data-empty={state.collection.size === 0 || undefined}\n      data-focused={isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}>\n      {state.collection.size === 0 && props.renderEmptyState\n        ? props.renderEmptyState(renderValues)\n        : <CollectionRoot collection={state.collection} persistedKeys={persistedKeys} />}\n    </div>\n  );\n}\n\nexport interface TagRenderProps extends Omit<ItemRenderProps, 'allowsDragging' | 'isDragging' | 'isDropTarget'> {\n  /**\n   * Whether the tag group allows items to be removed.\n   * @selector [data-allows-removing]\n   */\n  allowsRemoving: boolean\n}\n\nexport interface TagProps extends RenderProps<TagRenderProps>, LinkDOMProps, HoverEvents {\n  /** A unique id for the tag. */\n  id?: Key,\n  /**\n   * A string representation of the tags's contents, used for accessibility.\n   * Required if children is not a plain text string.\n   */\n  textValue?: string,\n  /** Whether the tag is disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * A Tag is an individual item within a TagList.\n */\nexport const Tag = /*#__PURE__*/ createLeafComponent('item', (props: TagProps, forwardedRef: ForwardedRef<HTMLDivElement>, item: Node<unknown>) => {\n  let state = useContext(ListStateContext)!;\n  let ref = useObjectRef<HTMLDivElement>(forwardedRef);\n  let {focusProps, isFocusVisible} = useFocusRing({within: true});\n  let {rowProps, gridCellProps, removeButtonProps, ...states} = useTag({item}, state, ref);\n\n  let {hoverProps, isHovered} = useHover({\n    isDisabled: !states.allowsSelection,\n    onHoverStart: item.props.onHoverStart,\n    onHoverChange: item.props.onHoverChange,\n    onHoverEnd: item.props.onHoverEnd\n  });\n\n  let renderProps = useRenderProps({\n    ...props,\n    id: undefined,\n    children: item.rendered,\n    defaultClassName: 'react-aria-Tag',\n    values: {\n      ...states,\n      isFocusVisible,\n      isHovered,\n      selectionMode: state.selectionManager.selectionMode,\n      selectionBehavior: state.selectionManager.selectionBehavior\n    }\n  });\n\n  useEffect(() => {\n    if (!item.textValue) {\n      console.warn('A `textValue` prop is required for <Tag> elements with non-plain text children for accessibility.');\n    }\n  }, [item.textValue]);\n\n  return (\n    <div\n      ref={ref}\n      {...renderProps}\n      {...mergeProps(filterDOMProps(props as any), rowProps, focusProps, hoverProps)}\n      data-selected={states.isSelected || undefined}\n      data-disabled={states.isDisabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focused={states.isFocused || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-pressed={states.isPressed || undefined}\n      data-allows-removing={states.allowsRemoving || undefined}\n      data-selection-mode={state.selectionManager.selectionMode === 'none' ? undefined : state.selectionManager.selectionMode}>\n      <div {...gridCellProps} style={{display: 'contents'}}>\n        <Provider\n          values={[\n            [ButtonContext, {\n              slots: {\n                remove: removeButtonProps\n              }\n            }],\n            [CollectionRendererContext, DefaultCollectionRenderer]\n          ]}>\n          {renderProps.children}\n        </Provider>\n      </div>\n    </div>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}