{"ast":null,"code":"import _objectSpread from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/rewac/OneDrive/Documents/GitHub/scatch-store.me/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"rowProps\"];\nimport { getRowLabelledBy as $2140fb2337097f2d$export$85069b70317f543 } from \"./utils.mjs\";\nimport { getLastItem as $2K6sg$getLastItem } from \"@react-stately/collections\";\nimport { useGridRow as $2K6sg$useGridRow } from \"@react-aria/grid\";\nimport { useSyntheticLinkProps as $2K6sg$useSyntheticLinkProps, mergeProps as $2K6sg$mergeProps } from \"@react-aria/utils\";\nimport { tableNestedRows as $2K6sg$tableNestedRows } from \"@react-stately/flags\";\nimport { useLocale as $2K6sg$useLocale } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $b2db214c022798eb$var$EXPANSION_KEYS = {\n  expand: {\n    ltr: 'ArrowRight',\n    rtl: 'ArrowLeft'\n  },\n  'collapse': {\n    ltr: 'ArrowLeft',\n    rtl: 'ArrowRight'\n  }\n};\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let _ref = (0, $2K6sg$useGridRow)(props, state, ref),\n    {\n      rowProps: rowProps\n    } = _ref,\n    states = _objectWithoutProperties(_ref, _excluded);\n  let {\n    direction: direction\n  } = (0, $2K6sg$useLocale)();\n  if (isVirtualized && !((0, $2K6sg$tableNestedRows)() && 'expandedKeys' in state)) rowProps['aria-rowindex'] = node.index + 1 + state.collection.headerRows.length; // aria-rowindex is 1 based\n  else delete rowProps['aria-rowindex'];\n  let treeGridRowProps = {};\n  if ((0, $2K6sg$tableNestedRows)() && 'expandedKeys' in state) {\n    let treeNode = state.keyMap.get(node.key);\n    if (treeNode != null) {\n      var _treeNode_props, _treeNode_props_children, _treeNode_props1, _getLastItem, _state_keyMap_get, _getLastItem1;\n      let hasChildRows = ((_treeNode_props = treeNode.props) === null || _treeNode_props === void 0 ? void 0 : _treeNode_props.UNSTABLE_childItems) || ((_treeNode_props1 = treeNode.props) === null || _treeNode_props1 === void 0 ? void 0 : (_treeNode_props_children = _treeNode_props1.children) === null || _treeNode_props_children === void 0 ? void 0 : _treeNode_props_children.length) > state.userColumnCount;\n      var _treeNode_indexOfType, _state_keyMap_get_childNodes, _getLastItem_indexOfType, _getLastItem_indexOfType1;\n      treeGridRowProps = {\n        onKeyDown: e => {\n          if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS['expand'][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== 'all' && !state.expandedKeys.has(treeNode.key)) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          } else if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS['collapse'][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === 'all' || state.expandedKeys.has(treeNode.key))) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          }\n        },\n        'aria-expanded': hasChildRows ? state.expandedKeys === 'all' || state.expandedKeys.has(node.key) : undefined,\n        'aria-level': treeNode.level,\n        'aria-posinset': ((_treeNode_indexOfType = treeNode.indexOfType) !== null && _treeNode_indexOfType !== void 0 ? _treeNode_indexOfType : 0) + 1,\n        'aria-setsize': treeNode.level > 1 ? ((_getLastItem_indexOfType = (_getLastItem = (0, $2K6sg$getLastItem)((_state_keyMap_get_childNodes = (_state_keyMap_get = state.keyMap.get(treeNode.parentKey)) === null || _state_keyMap_get === void 0 ? void 0 : _state_keyMap_get.childNodes) !== null && _state_keyMap_get_childNodes !== void 0 ? _state_keyMap_get_childNodes : [])) === null || _getLastItem === void 0 ? void 0 : _getLastItem.indexOfType) !== null && _getLastItem_indexOfType !== void 0 ? _getLastItem_indexOfType : 0) + 1 : ((_getLastItem_indexOfType1 = (_getLastItem1 = (0, $2K6sg$getLastItem)(state.collection.body.childNodes)) === null || _getLastItem1 === void 0 ? void 0 : _getLastItem1.indexOfType) !== null && _getLastItem_indexOfType1 !== void 0 ? _getLastItem_indexOfType1 : 0) + 1\n      };\n    }\n  }\n  let syntheticLinkProps = (0, $2K6sg$useSyntheticLinkProps)(node.props);\n  let linkProps = states.hasAction ? syntheticLinkProps : {};\n  return _objectSpread({\n    rowProps: _objectSpread(_objectSpread({}, (0, $2K6sg$mergeProps)(rowProps, treeGridRowProps, linkProps)), {}, {\n      'aria-labelledby': (0, $2140fb2337097f2d$export$85069b70317f543)(state, node.key)\n    })\n  }, states);\n}\nexport { $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow };","map":{"version":3,"names":["$b2db214c022798eb$var$EXPANSION_KEYS","expand","ltr","rtl","$b2db214c022798eb$export$7f2f6ae19e707aa5","props","state","ref","node","isVirtualized","_ref","$2K6sg$useGridRow","rowProps","states","_objectWithoutProperties","_excluded","direction","$2K6sg$useLocale","$2K6sg$tableNestedRows","index","collection","headerRows","length","treeGridRowProps","treeNode","keyMap","get","key","_treeNode_props","_treeNode_props_children","_treeNode_props1","_getLastItem","_state_keyMap_get","_getLastItem1","hasChildRows","UNSTABLE_childItems","children","userColumnCount","_treeNode_indexOfType","_state_keyMap_get_childNodes","_getLastItem_indexOfType","_getLastItem_indexOfType1","onKeyDown","e","selectionManager","focusedKey","expandedKeys","has","toggleKey","stopPropagation","undefined","level","indexOfType","$2K6sg$getLastItem","parentKey","childNodes","body","syntheticLinkProps","$2K6sg$useSyntheticLinkProps","linkProps","hasAction","_objectSpread","$2K6sg$mergeProps","$2140fb2337097f2d$export$85069b70317f543"],"sources":["C:\\Users\\rewac\\OneDrive\\Documents\\GitHub\\scatch-store.me\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableRow.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement, RefObject} from '@react-types/shared';\nimport {getLastItem} from '@react-stately/collections';\nimport {getRowLabelledBy} from './utils';\nimport type {GridNode} from '@react-types/grid';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {HTMLAttributes} from 'react';\nimport {mergeProps, useSyntheticLinkProps} from '@react-aria/utils';\nimport {TableCollection} from '@react-types/table';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TreeGridState} from '@react-stately/table';\nimport {useLocale} from '@react-aria/i18n';\n\nconst EXPANSION_KEYS = {\n  expand: {\n    ltr: 'ArrowRight',\n    rtl: 'ArrowLeft'\n  },\n  'collapse': {\n    ltr: 'ArrowLeft',\n    rtl: 'ArrowRight'\n  }\n};\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T> | TreeGridState<T>, ref: RefObject<FocusableElement | null>): GridRowAria {\n  let {node, isVirtualized} = props;\n  let {rowProps, ...states} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  let {direction} = useLocale();\n\n  if (isVirtualized && !(tableNestedRows() && 'expandedKeys' in state)) {\n    rowProps['aria-rowindex'] = node.index + 1 + state.collection.headerRows.length; // aria-rowindex is 1 based\n  } else {\n    delete rowProps['aria-rowindex'];\n  }\n\n  let treeGridRowProps: HTMLAttributes<HTMLElement> = {};\n  if (tableNestedRows() && 'expandedKeys' in state) {\n    let treeNode = state.keyMap.get(node.key);\n    if (treeNode != null) {\n      let hasChildRows = treeNode.props?.UNSTABLE_childItems || treeNode.props?.children?.length > state.userColumnCount;\n      treeGridRowProps = {\n        onKeyDown: (e) => {\n          if ((e.key === EXPANSION_KEYS['expand'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== 'all' && !state.expandedKeys.has(treeNode.key)) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          } else if ((e.key === EXPANSION_KEYS['collapse'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === 'all' || state.expandedKeys.has(treeNode.key))) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          }\n        },\n        'aria-expanded': hasChildRows ? state.expandedKeys === 'all' || state.expandedKeys.has(node.key) : undefined,\n        'aria-level': treeNode.level,\n        'aria-posinset': (treeNode.indexOfType ?? 0) + 1,\n        'aria-setsize': treeNode.level > 1 ?\n          ((getLastItem(state.keyMap.get(treeNode.parentKey!)?.childNodes ?? []) as GridNode<T>)?.indexOfType ?? 0) + 1 :\n          ((getLastItem(state.collection.body.childNodes) as GridNode<T>)?.indexOfType ?? 0) + 1\n      };\n    }\n  }\n\n  let syntheticLinkProps = useSyntheticLinkProps(node.props);\n  let linkProps = states.hasAction ? syntheticLinkProps : {};\n  return {\n    rowProps: {\n      ...mergeProps(rowProps, treeGridRowProps, linkProps),\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    ...states\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}