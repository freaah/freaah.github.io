{"version":3,"file":"registerSlider.cjs.js","sources":["../src/registerSlider.tsx"],"sourcesContent":["import { CodeComponentMeta } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { Slider, type SliderProps } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicSliderContext } from \"./contexts\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { registerSliderOutput } from \"./registerSliderOutput\";\nimport { registerSliderThumb } from \"./registerSliderThumb\";\nimport { registerSliderTrack } from \"./registerSliderTrack\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst SLIDER_COMPONENT_NAME = makeComponentName(\"slider\");\nconst RANGE_SLIDER_COMPONENT_NAME = makeComponentName(\"range-slider\");\nconst SLIDER_VARIANTS = [\"disabled\" as const];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(SLIDER_VARIANTS);\n\nexport interface BaseSliderProps<T extends number | number[]>\n  extends SliderProps<T>,\n    WithVariants<typeof SLIDER_VARIANTS> {\n  children?: React.ReactNode;\n}\n\nexport function BaseSlider<T extends number | number[]>(\n  props: BaseSliderProps<T>\n) {\n  const { children, plasmicUpdateVariant, ...rest } = props;\n  return (\n    <PlasmicSliderContext.Provider\n      value={{\n        ...rest,\n        // Here's why the type casting is needed here: https://github.com/Microsoft/TypeScript/issues/3410\n        onChange: rest.onChange as (value: number | number[]) => void,\n        onChangeEnd: rest.onChangeEnd as (value: number | number[]) => void,\n      }}\n    >\n      <Slider<T> {...rest} style={COMMON_STYLES}>\n        {({ isDisabled }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Slider>\n    </PlasmicSliderContext.Provider>\n  );\n}\n\nfunction getCommonSliderProps<T extends number | number[]>(): CodeComponentMeta<\n  BaseSliderProps<T>\n>[\"props\"] {\n  return {\n    orientation: {\n      type: \"choice\",\n      options: [\"horizontal\", \"vertical\"],\n      defaultValueHint: \"horizontal\",\n      defaultValue: \"horizontal\",\n    },\n    minValue: {\n      type: \"number\",\n      description: \"The minimum value of the slider\",\n      defaultValueHint: 0,\n    },\n    maxValue: {\n      type: \"number\",\n      description: \"The maximum value of the slider\",\n      defaultValueHint: 100,\n    },\n    step: {\n      type: \"number\",\n      description: \"The step value of the slider\",\n      defaultValueHint: 1,\n    },\n  };\n}\n\nexport function registerSlider(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSlider<number>>\n) {\n  const sliderOutputMeta = registerSliderOutput(loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n\n  const sliderThumbMeta = registerSliderThumb(loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n  const sliderTrackMeta = registerSliderTrack(sliderThumbMeta, loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n\n  // Register the range slider\n  registerComponentHelper(\n    loader,\n    BaseSlider<number[]>,\n    {\n      name: RANGE_SLIDER_COMPONENT_NAME,\n      displayName: \"Aria Range Slider\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSlider\",\n      importName: \"BaseSlider\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n      },\n      props: {\n        ...getCommonProps<BaseSliderProps<number[]>>(\"slider\", [\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        ...getCommonSliderProps<number[]>(),\n        value: {\n          type: \"array\",\n          editOnly: true,\n          displayName: \"Initial value\",\n          uncontrolledProp: \"defaultValue\",\n          description: \"The intial value of the slider\",\n          defaultValue: [20, 50],\n          validator: (value) => {\n            if (!Array.isArray(value)) {\n              return \"Input must be an array.\";\n            }\n\n            for (let i = 1; i < value.length; i++) {\n              if (value[i] < value[i - 1]) {\n                return \"Array elements are not in ascending order.\";\n              }\n            }\n\n            return true;\n          },\n        },\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"hbox\",\n              styles: {\n                width: \"stretch\",\n                justifyContent: \"space-between\",\n                padding: \"8px 0px\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Label\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: sliderOutputMeta.name,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Output\",\n                    },\n                  },\n                },\n              ],\n            },\n            {\n              type: \"component\",\n              name: sliderTrackMeta.name,\n              props: {\n                children: [\n                  {\n                    type: \"component\",\n                    name: sliderThumbMeta.name,\n                  },\n                  {\n                    type: \"component\",\n                    name: sliderThumbMeta.name,\n                    styles: {\n                      backgroundColor: \"blue\",\n                    },\n                  },\n                ],\n              },\n            },\n          ],\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n        onChangeEnd: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"array\",\n        },\n      },\n      trapsFocus: true,\n    },\n    {\n      parentComponentName: SLIDER_COMPONENT_NAME,\n    }\n  );\n\n  registerComponentHelper(\n    loader,\n    BaseSlider<number>,\n    {\n      name: SLIDER_COMPONENT_NAME,\n      displayName: \"Aria Slider\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSlider\",\n      importName: \"BaseSlider\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n      },\n      props: {\n        ...getCommonProps<BaseSliderProps<number>>(\"slider\", [\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        ...getCommonSliderProps<number>(),\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"hbox\",\n              styles: {\n                width: \"stretch\",\n                justifyContent: \"space-between\",\n                padding: \"8px 0px\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Label\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: sliderOutputMeta.name,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Output\",\n                    },\n                  },\n                },\n              ],\n            },\n            {\n              type: \"component\",\n              name: sliderTrackMeta.name,\n            },\n          ],\n        },\n        value: {\n          type: \"number\",\n          editOnly: true,\n          displayName: \"Initial value\",\n          uncontrolledProp: \"defaultValue\",\n          description: \"The initial value of the slider\",\n          defaultValueHint: 0,\n          defaultValue: 0,\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"number\" }],\n        },\n        onChangeEnd: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"number\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"number\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["makeComponentName","pickAriaComponentVariants","React","PlasmicSliderContext","Slider","COMMON_STYLES","registerSliderOutput","registerSliderThumb","registerSliderTrack","registerComponentHelper","getCommonProps","LABEL_COMPONENT_NAME"],"mappings":"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"}