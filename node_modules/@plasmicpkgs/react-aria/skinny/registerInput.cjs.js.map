{"version":3,"file":"registerInput.cjs.js","sources":["../src/registerInput.tsx"],"sourcesContent":["import React, { ChangeEvent, useCallback } from \"react\";\nimport { mergeProps } from \"react-aria\";\nimport type { InputProps, InputRenderProps } from \"react-aria-components\";\nimport { Input } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, resolveAutoComplete } from \"./common\";\nimport { PlasmicInputContext, PlasmicTextFieldContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst INPUT_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"hovered\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants } = pickAriaComponentVariants(INPUT_VARIANTS);\n\nexport interface BaseInputProps\n  extends Omit<InputProps, \"autoComplete\" | \"className\">,\n    HasControlContextData,\n    WithVariants<typeof INPUT_VARIANTS> {\n  autoComplete?: string[];\n  isUncontrolled?: boolean;\n  className?: string;\n}\n\nexport const inputHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: (e: ChangeEvent<HTMLInputElement>) => {\n        return e.target.value;\n      },\n    },\n  },\n};\n\nexport function BaseInput(props: BaseInputProps) {\n  const {\n    plasmicUpdateVariant,\n    setControlContextData,\n    autoComplete,\n    value,\n    className,\n    ...rest\n  } = props;\n  const textFieldContext = React.useContext(PlasmicTextFieldContext);\n  const context = React.useContext(PlasmicInputContext);\n\n  setControlContextData?.({\n    parent: textFieldContext,\n  });\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled,\n      isFocusVisible,\n      isFocused,\n      isHovered,\n    }: InputRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n        hovered: isHovered,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const mergedProps = mergeProps(rest, {\n    value: context?.isUncontrolled ? undefined : value,\n    autoComplete: resolveAutoComplete(autoComplete),\n    className: classNameProp,\n  });\n\n  return <Input {...mergedProps} style={COMMON_STYLES} />;\n}\n\nexport const INPUT_COMPONENT_NAME = makeComponentName(\"input\");\n\nexport function registerInput(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseInput>\n) {\n  registerComponentHelper(\n    loader,\n    BaseInput,\n    {\n      name: INPUT_COMPONENT_NAME,\n      displayName: \"Aria Input\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      importName: \"BaseInput\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        padding: \"4px 10px\",\n      },\n      props: {\n        ...getCommonProps<BaseInputProps>(\"Input\", [\n          \"name\",\n          \"disabled\",\n          \"readOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"required\",\n          \"placeholder\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"pattern\",\n          \"type\",\n          \"inputMode\",\n          \"autoComplete\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n          ...inputHelpers.states.value,\n        },\n      },\n\n      componentHelpers: {\n        helpers: inputHelpers,\n        importName: \"inputHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      },\n    },\n    overrides\n  );\n}\n"],"names":["pickAriaComponentVariants","React","PlasmicTextFieldContext","PlasmicInputContext","useCallback","mergeProps","resolveAutoComplete","Input","COMMON_STYLES","makeComponentName","registerComponentHelper","getCommonProps"],"mappings":"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"}