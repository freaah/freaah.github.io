{"version":3,"file":"OptionsItemIdManager-832b8cfe.esm.js","sources":["../src/OptionsItemIdManager.ts"],"sourcesContent":["type Observer = (ids: string[]) => void;\n\nexport class OptionsItemIdManager {\n  private readonly _ids: Set<string> = new Set();\n  private readonly _observers: Set<Observer> = new Set();\n\n  private generateDuplicateId(id: string, count = 1): string {\n    const dupId = `${id} duplicate(${count})`;\n    if (this._ids.has(dupId)) {\n      return this.generateDuplicateId(id, count + 1);\n    } else {\n      return dupId;\n    }\n  }\n\n  private generateMissingId(count = 1): string {\n    const missingId = `missing(${count})`;\n    if (this._ids.has(missingId)) {\n      return this.generateMissingId(count + 1);\n    } else {\n      return missingId;\n    }\n  }\n\n  register(id?: unknown): string {\n    const idStr = id === undefined ? undefined : String(id).trim();\n    let newId: string;\n\n    if (!idStr) {\n      // No id is provided, so generate one\n      newId = this.generateMissingId();\n    } else if (this._ids.has(idStr)) {\n      // The provided id is already registered with another uuid (i.e. it's not unique), so just generate a new one\n      newId = this.generateDuplicateId(idStr);\n    } else {\n      // The provided id is not already registered, so use it\n      newId = idStr;\n    }\n\n    this._ids.add(newId);\n    this.notify();\n    return newId;\n  }\n\n  unregister(id: string) {\n    this._ids.delete(id);\n    this.notify();\n  }\n\n  subscribe(observer: Observer) {\n    this._observers.add(observer);\n    observer(this.ids);\n  }\n\n  // Notify all observers about an event.\n  notify() {\n    this._observers.forEach((observer) => observer(this.ids));\n  }\n\n  get ids(): string[] {\n    return Array.from(this._ids);\n  }\n}\n"],"names":[],"mappings":"AAEO,MAAM,oBAAqB,CAAA;AAAA,EAA3B,WAAA,GAAA;AACL,IAAiB,IAAA,CAAA,IAAA,uBAAwB,GAAI,EAAA,CAAA;AAC7C,IAAiB,IAAA,CAAA,UAAA,uBAAgC,GAAI,EAAA,CAAA;AAAA,GAAA;AAAA,EAE7C,mBAAA,CAAoB,EAAY,EAAA,KAAA,GAAQ,CAAW,EAAA;AACzD,IAAM,MAAA,KAAA,GAAQ,GAAG,EAAgB,CAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACjC,IAAA,IAAI,IAAK,CAAA,IAAA,CAAK,GAAI,CAAA,KAAK,CAAG,EAAA;AACxB,MAAA,OAAO,IAAK,CAAA,mBAAA,CAAoB,EAAI,EAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAAA,KACxC,MAAA;AACL,MAAO,OAAA,KAAA,CAAA;AAAA,KACT;AAAA,GACF;AAAA,EAEQ,iBAAA,CAAkB,QAAQ,CAAW,EAAA;AAC3C,IAAA,MAAM,YAAY,CAAW,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAC7B,IAAA,IAAI,IAAK,CAAA,IAAA,CAAK,GAAI,CAAA,SAAS,CAAG,EAAA;AAC5B,MAAO,OAAA,IAAA,CAAK,iBAAkB,CAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAAA,KAClC,MAAA;AACL,MAAO,OAAA,SAAA,CAAA;AAAA,KACT;AAAA,GACF;AAAA,EAEA,SAAS,EAAsB,EAAA;AAC7B,IAAA,MAAM,QAAQ,EAAO,KAAA,KAAA,CAAA,GAAY,SAAY,MAAO,CAAA,EAAE,EAAE,IAAK,EAAA,CAAA;AAC7D,IAAI,IAAA,KAAA,CAAA;AAEJ,IAAA,IAAI,CAAC,KAAO,EAAA;AAEV,MAAA,KAAA,GAAQ,KAAK,iBAAkB,EAAA,CAAA;AAAA,KACtB,MAAA,IAAA,IAAA,CAAK,IAAK,CAAA,GAAA,CAAI,KAAK,CAAG,EAAA;AAE/B,MAAQ,KAAA,GAAA,IAAA,CAAK,oBAAoB,KAAK,CAAA,CAAA;AAAA,KACjC,MAAA;AAEL,MAAQ,KAAA,GAAA,KAAA,CAAA;AAAA,KACV;AAEA,IAAK,IAAA,CAAA,IAAA,CAAK,IAAI,KAAK,CAAA,CAAA;AACnB,IAAA,IAAA,CAAK,MAAO,EAAA,CAAA;AACZ,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAAA,EAEA,WAAW,EAAY,EAAA;AACrB,IAAK,IAAA,CAAA,IAAA,CAAK,OAAO,EAAE,CAAA,CAAA;AACnB,IAAA,IAAA,CAAK,MAAO,EAAA,CAAA;AAAA,GACd;AAAA,EAEA,UAAU,QAAoB,EAAA;AAC5B,IAAK,IAAA,CAAA,UAAA,CAAW,IAAI,QAAQ,CAAA,CAAA;AAC5B,IAAA,QAAA,CAAS,KAAK,GAAG,CAAA,CAAA;AAAA,GACnB;AAAA;AAAA,EAGA,MAAS,GAAA;AACP,IAAA,IAAA,CAAK,WAAW,OAAQ,CAAA,CAAC,aAAa,QAAS,CAAA,IAAA,CAAK,GAAG,CAAC,CAAA,CAAA;AAAA,GAC1D;AAAA,EAEA,IAAI,GAAgB,GAAA;AAClB,IAAO,OAAA,KAAA,CAAM,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;AAAA,GAC7B;AACF;;;;"}