{"version":3,"file":"registerListBox-a99736df.cjs.js","sources":["../src/registerSection.tsx","../src/registerListBox.tsx"],"sourcesContent":["import React from \"react\";\nimport { Header, Section } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicListBoxContext } from \"./contexts\";\nimport { BaseListBox } from \"./registerListBox\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n  Styleable,\n} from \"./utils\";\n\nexport interface BaseSectionProps extends Styleable {\n  items: React.ReactNode;\n  header: React.ReactNode;\n}\n\nexport function BaseSection(props: BaseSectionProps) {\n  const { header, items, ...rest } = props;\n  const contextProps = React.useContext(PlasmicListBoxContext);\n  const isStandalone = !contextProps;\n\n  const section = (\n    <Section {...rest} style={COMMON_STYLES}>\n      <Header>{header}</Header>\n      {items}\n    </Section>\n  );\n\n  if (isStandalone) {\n    return (\n      // BaseListbox should give section a listbox context (that it can't be used without)\n      // as well as the id manager (that is needed to identify and warn about duplication of ids)\n      // selection mode needs to be single/multiple to be able to trigger hover state on it.\n      <BaseListBox selectionMode=\"single\">{section}</BaseListBox>\n    );\n  }\n\n  return section;\n}\n\nexport function registerSection(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSection>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseSection,\n    {\n      name: makeComponentName(\"section\"),\n      displayName: \"Aria Section\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSection\",\n      importName: \"BaseSection\",\n      defaultStyles: {\n        width: \"stretch\",\n        padding: \"10px\",\n      },\n      props: {\n        header: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"text\",\n              value: \"Section Header.\",\n            },\n          ],\n        },\n        items: {\n          type: \"slot\",\n          mergeWithParent: true,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Key, ListBox, ListBoxRenderProps } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicListBoxContext } from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport {\n  makeDefaultListBoxItemChildren,\n  registerListBoxItem,\n} from \"./registerListBoxItem\";\nimport { registerSection } from \"./registerSection\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nexport interface BaseListBoxControlContextData {\n  itemIds: string[];\n  isStandalone: boolean;\n}\n\nconst LISTBOX_VARIANTS = [\"focused\" as const, \"focusVisible\" as const];\n\nconst { variants } = pickAriaComponentVariants(LISTBOX_VARIANTS);\n\nexport interface BaseListBoxProps\n  extends Omit<\n      React.ComponentProps<typeof ListBox>,\n      \"selectedKeys\" | \"defaultSelectedKeys\" | \"className\"\n    >,\n    HasControlContextData<BaseListBoxControlContextData>,\n    WithVariants<typeof LISTBOX_VARIANTS> {\n  children?: React.ReactNode;\n  selectedKeys?: string | string[] | undefined;\n  defaultSelectedKeys?: string | string[] | undefined;\n  className?: string;\n}\n\nexport const listboxHelpers = {\n  states: {\n    selectedValue: {\n      onChangeArgsToValue: (value: Set<Key> | string[] | string) => {\n        // only single selection is supported\n        return Array.from(value)[0];\n      },\n    },\n  },\n};\n\nfunction normalizeSelectedKeys(selectedKeys: string | string[] | undefined) {\n  // Listbox expects it to be of type \"all\" | Iterable\n  return typeof selectedKeys === \"string\" && selectedKeys !== \"all\"\n    ? [selectedKeys]\n    : selectedKeys;\n}\n\nexport function BaseListBox(props: BaseListBoxProps) {\n  const {\n    setControlContextData: setControlContextData,\n    children,\n    className,\n    selectedKeys,\n    defaultSelectedKeys,\n    plasmicUpdateVariant,\n    ...rest\n  } = props;\n  const context = React.useContext(PlasmicListBoxContext);\n  const isStandalone = !context;\n  const [ids, setIds] = useState<string[]>([]);\n  const idManager = useMemo(\n    () => context?.idManager ?? new OptionsItemIdManager(),\n    []\n  );\n\n  useEffect(() => {\n    setControlContextData?.({\n      itemIds: ids,\n      isStandalone,\n    });\n  }, [ids, isStandalone, setControlContextData]);\n\n  useEffect(() => {\n    idManager.subscribe((_ids: string[]) => {\n      setIds(_ids);\n    });\n  }, []);\n\n  const classNameProp = useCallback(\n    ({ isFocusVisible, isFocused }: ListBoxRenderProps) => {\n      plasmicUpdateVariant?.({\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const listbox = (\n    <ListBox\n      selectedKeys={normalizeSelectedKeys(selectedKeys)}\n      defaultSelectedKeys={normalizeSelectedKeys(defaultSelectedKeys)}\n      className={classNameProp}\n      style={COMMON_STYLES}\n      {...rest}\n    >\n      {children}\n    </ListBox>\n  );\n\n  if (isStandalone) {\n    return (\n      <PlasmicListBoxContext.Provider\n        value={{\n          idManager,\n        }}\n      >\n        {listbox}\n      </PlasmicListBoxContext.Provider>\n    );\n  }\n\n  return listbox;\n}\n\nexport const LIST_BOX_COMPONENT_NAME = makeComponentName(\"listbox\");\n\nexport function registerListBox(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseListBox>\n) {\n  const listBoxItemMeta = registerListBoxItem(loader, {\n    parentComponentName: LIST_BOX_COMPONENT_NAME,\n  });\n  const sectionMeta = registerSection(loader, {\n    parentComponentName: LIST_BOX_COMPONENT_NAME,\n    props: {\n      items: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-1\",\n              textValue: \"Section1-Item 1\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 1\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-2\",\n              textValue: \"Section1-Item 2\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 2\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-3\",\n              textValue: \"Section1-Item 3\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 3\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n        ],\n      },\n    },\n  });\n\n  registerComponentHelper(\n    loader,\n    BaseListBox,\n    {\n      name: LIST_BOX_COMPONENT_NAME,\n      displayName: \"Aria ListBox\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerListBox\",\n      importName: \"BaseListBox\",\n      variants,\n      defaultStyles: {\n        width: \"250px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          displayName: \"List Items\",\n          allowedComponents: [listBoxItemMeta.name, sectionMeta.name],\n          allowRootWrapper: true,\n          defaultValue: [\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"1\",\n                textValue: \"Item 1\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 1\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"2\",\n                textValue: \"Item 2\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 2\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"3\",\n                textValue: \"Item 3\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 3\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: sectionMeta.name,\n            },\n          ],\n        },\n        selectionMode: {\n          type: \"choice\",\n          description: \"The selection mode of the listbox\",\n          options: [\"none\", \"single\"],\n          defaultValue: \"none\",\n          hidden: (_props, ctx) => !ctx?.isStandalone,\n        },\n        selectedKeys: {\n          type: \"choice\",\n          editOnly: true,\n          uncontrolledProp: \"defaultSelectedKeys\",\n          displayName: \"Initial selected item\",\n          options: (_props, ctx) =>\n            ctx?.itemIds ? Array.from(ctx.itemIds) : [],\n          hidden: (props, ctx) =>\n            !ctx?.isStandalone || props.selectionMode === \"none\",\n          // We do not support multiple selections yet (Because React Aria select and combobox only support single selections).\n          multiSelect: false,\n        },\n        onSelectionChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"selectedValues\", type: \"object\" }],\n        },\n      },\n      states: {\n        selectedValue: {\n          type: \"writable\",\n          valueProp: \"selectedKeys\",\n          hidden: (props, ctx) =>\n            !ctx?.isStandalone || props.selectionMode === \"none\",\n          onChangeProp: \"onSelectionChange\",\n          variableType: \"text\",\n          ...listboxHelpers.states.selectedValue,\n        },\n      },\n      componentHelpers: {\n        helpers: listboxHelpers,\n        importName: \"listboxHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerListBox\",\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["__objRest","React","PlasmicListBoxContext","Section","__spreadValues","COMMON_STYLES","Header","registerComponentHelper","makeComponentName","pickAriaComponentVariants","useState","useMemo","_a","OptionsItemIdManager","useEffect","useCallback","ListBox","registerListBoxItem","makeDefaultListBoxItemChildren"],"mappings":"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"}