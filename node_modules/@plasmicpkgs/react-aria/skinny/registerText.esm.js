import React from 'react';
import { Text } from 'react-aria-components';
import { C as COMMON_STYLES } from './common-ceebbaea.esm.js';
import { e as extractPlasmicDataProps, m as makeComponentName, r as registerComponentHelper } from './utils-5d1b4c6b.esm.js';
import '@plasmicapp/host';
import '@plasmicapp/host/registerComponent';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function BaseText(_a) {
  var _b = _a, { children, slot, className } = _b, rest = __objRest(_b, ["children", "slot", "className"]);
  return /* @__PURE__ */ React.createElement(
    Text,
    __spreadProps(__spreadValues({}, extractPlasmicDataProps(rest)), {
      slot,
      className,
      style: COMMON_STYLES
    }),
    children
  );
}
const TEXT_COMPONENT_NAME = makeComponentName("text");
function registerText(loader, overrides) {
  return registerComponentHelper(
    loader,
    BaseText,
    {
      name: TEXT_COMPONENT_NAME,
      displayName: "Aria Text",
      importPath: "@plasmicpkgs/react-aria/skinny/registerText",
      importName: "BaseText",
      props: {
        children: {
          type: "slot",
          mergeWithParent: true,
          defaultValue: {
            type: "text",
            value: "Some text..."
          }
        },
        slot: {
          type: "choice",
          options: ["label", "description"],
          defaultValueHint: "label",
          defaultValue: "label"
        }
      },
      trapsFocus: true
    },
    overrides
  );
}

export { BaseText, TEXT_COMPONENT_NAME, registerText };
//# sourceMappingURL=registerText.esm.js.map
