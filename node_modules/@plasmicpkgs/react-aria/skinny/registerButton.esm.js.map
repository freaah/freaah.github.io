{"version":3,"file":"registerButton.esm.js","sources":["../src/registerButton.tsx"],"sourcesContent":["import { usePlasmicLink } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { mergeProps, useFocusRing, useHover, useLink } from \"react-aria\";\nimport type { ButtonProps, LinkProps } from \"react-aria-components\";\nimport { Button } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst BUTTON_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(BUTTON_VARIANTS);\n\ntype CommonProps = { children: React.ReactNode } & Omit<\n  ButtonProps,\n  \"className\" | \"children\"\n> &\n  Omit<LinkProps, \"className\" | \"children\">;\ntype LinkSpecificProps = Pick<LinkProps, \"href\" | \"target\">;\ntype ButtonSpecificProps = {\n  resetsForm?: boolean;\n  submitsForm?: boolean;\n};\n\ninterface BaseButtonProps\n  extends CommonProps,\n    LinkSpecificProps,\n    ButtonSpecificProps,\n    WithVariants<typeof BUTTON_VARIANTS> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const BaseButton = React.forwardRef(function BaseButtonInner(\n  props: BaseButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>\n) {\n  const { href } = props;\n\n  if (href) {\n    return (\n      <LinkButton\n        props={props}\n        ref={ref as React.RefObject<HTMLAnchorElement>}\n      />\n    );\n  } else {\n    const { submitsForm, resetsForm, children, plasmicUpdateVariant, ...rest } =\n      props;\n    const type = submitsForm ? \"submit\" : resetsForm ? \"reset\" : \"button\";\n\n    const buttonProps = mergeProps(rest, {\n      type,\n      style: COMMON_STYLES,\n      ref: ref as React.Ref<HTMLButtonElement>,\n    });\n\n    return (\n      <Button {...buttonProps}>\n        {({ isHovered, isPressed, isFocused, isFocusVisible, isDisabled }) =>\n          withObservedValues(\n            children,\n            {\n              hovered: isHovered,\n              pressed: isPressed,\n              focused: isFocused,\n              focusVisible: isFocusVisible,\n              disabled: isDisabled,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Button>\n    );\n  }\n});\n\nfunction LinkButton({\n  props,\n  ref,\n}: {\n  props: BaseButtonProps;\n  ref: React.RefObject<HTMLAnchorElement>;\n}) {\n  const { href, children, plasmicUpdateVariant, ...rest } = props;\n  const PlasmicLink = usePlasmicLink();\n  const { linkProps, isPressed } = useLink(props, ref);\n  const { hoverProps, isHovered } = useHover(props);\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing();\n\n  const combinedLinkProps = mergeProps(linkProps, hoverProps, focusProps, {\n    href,\n    className: props.className,\n    style: COMMON_STYLES,\n    ref,\n  });\n\n  return (\n    <PlasmicLink\n      {...combinedLinkProps}\n      data-focused={isFocused || undefined}\n      data-hovered={isHovered || undefined}\n      data-pressed={isPressed || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={props.isDisabled || undefined}\n    >\n      {withObservedValues(\n        children,\n        {\n          hovered: isHovered,\n          pressed: isPressed,\n          focused: isFocused,\n          focusVisible: isFocusVisible,\n          disabled: !!rest.isDisabled,\n        },\n        plasmicUpdateVariant\n      )}\n    </PlasmicLink>\n  );\n}\n\nexport const BUTTON_COMPONENT_NAME = makeComponentName(\"button\");\n\nexport function registerButton(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseButton>\n) {\n  registerComponentHelper(\n    loader,\n    BaseButton,\n    {\n      name: BUTTON_COMPONENT_NAME,\n      displayName: \"Aria Button\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerButton\",\n      importName: \"BaseButton\",\n      variants,\n      defaultStyles: {\n        // Ensure consistent design across rendered elements (button, anchor tag).\n        backgroundColor: \"#EFEFEF\",\n        borderColor: \"black\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        color: \"#000000\",\n        cursor: \"pointer\",\n        fontFamily: \"Arial\",\n        fontSize: \"1rem\",\n        lineHeight: \"1.2\",\n        padding: \"2px 10px\",\n        textDecorationLine: \"none\",\n      },\n      props: {\n        ...getCommonProps<BaseButtonProps>(\"button\", [\n          \"autoFocus\",\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"text\",\n            value: \"Button\",\n          },\n        },\n        href: {\n          type: \"href\",\n          description:\n            \"The URL this button navigates to. If present, this button is an <a> element.\",\n        },\n        target: {\n          type: \"choice\",\n          options: [\"_blank\", \"_self\", \"_parent\", \"_top\"],\n          description:\n            \"Same as target attribute of <a> element. Only applies when the href prop is present.\",\n          hidden: (props) => !props.href,\n          defaultValueHint: \"_self\",\n        },\n        submitsForm: {\n          type: \"boolean\",\n          displayName: \"Submits form?\",\n          defaultValueHint: false,\n          hidden: (props) => Boolean(props.resetsForm) || Boolean(props.href),\n          description:\n            \"Whether clicking this button should submit the enclosing form.\",\n          advanced: true,\n        },\n        resetsForm: {\n          type: \"boolean\",\n          displayName: \"Resets form?\",\n          defaultValueHint: false,\n          hidden: (props) => Boolean(props.submitsForm) || Boolean(props.href),\n          description:\n            \"Whether clicking this button should reset the enclosing form.\",\n          advanced: true,\n        },\n        onPress: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n        onFocus: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":[],"mappings":"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"}