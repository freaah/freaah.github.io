{"version":3,"file":"registerForm.cjs.js","sources":["../src/registerForm.tsx"],"sourcesContent":["import React from \"react\";\nimport type { FormProps } from \"react-aria-components\";\nimport { Form } from \"react-aria-components\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\ninterface BaseFormProps extends Omit<FormProps, \"onSubmit\"> {\n  onSubmit: (\n    data: Record<string, FormDataEntryValue | FormDataEntryValue[] | null>\n  ) => void;\n}\n\nexport function BaseForm(props: BaseFormProps) {\n  const { onSubmit, children, ...rest } = props;\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        const formData = new FormData(e.currentTarget);\n        const formValues: {\n          [key: string]: FormDataEntryValue | FormDataEntryValue[] | null;\n        } = {};\n        formData.forEach((value, key) => {\n          const field = e.currentTarget.elements.namedItem(key);\n          if (\n            field instanceof RadioNodeList &&\n            (Array.from(field.values()) as HTMLInputElement[]).every(\n              (f) => f.type === \"checkbox\"\n            )\n          ) {\n            formValues[key] = formData.getAll(key);\n          } else {\n            (field as HTMLInputElement).type;\n            formValues[key] = formData.get(key);\n          }\n        });\n        onSubmit?.(formValues);\n      }}\n      {...rest}\n    >\n      {children}\n    </Form>\n  );\n}\n\nexport function registerForm(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseForm>\n) {\n  registerComponentHelper(\n    loader,\n    BaseForm,\n    {\n      name: makeComponentName(\"form\"),\n      displayName: \"Aria Form\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerForm\",\n      importName: \"BaseForm\",\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n        },\n        onSubmit: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"data\", type: \"object\" }],\n        } as any,\n        onReset: {\n          type: \"eventHandler\",\n          argTypes: [],\n        } as any,\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["React","Form","registerComponentHelper","makeComponentName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBO,SAAS,SAAS,KAAsB,EAAA;AAC7C,EAAwC,MAAA,EAAA,GAAA,KAAA,EAAhC,YAAU,QAjBpB,EAAA,GAiB0C,IAAT,IAAS,GAAA,SAAA,CAAA,EAAA,EAAT,CAAvB,UAAU,EAAA,UAAA,CAAA,CAAA,CAAA;AAClB,EACE,uBAAAA,sBAAA,CAAA,aAAA;AAAA,IAACC,wBAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,QAAA,EAAU,CAAC,CAAM,KAAA;AACf,QAAA,CAAA,CAAE,cAAe,EAAA,CAAA;AACjB,QAAA,MAAM,QAAW,GAAA,IAAI,QAAS,CAAA,CAAA,CAAE,aAAa,CAAA,CAAA;AAC7C,QAAA,MAAM,aAEF,EAAC,CAAA;AACL,QAAS,QAAA,CAAA,OAAA,CAAQ,CAAC,KAAA,EAAO,GAAQ,KAAA;AAC/B,UAAA,MAAM,KAAQ,GAAA,CAAA,CAAE,aAAc,CAAA,QAAA,CAAS,UAAU,GAAG,CAAA,CAAA;AACpD,UAAA,IACE,iBAAiB,aAChB,IAAA,KAAA,CAAM,KAAK,KAAM,CAAA,MAAA,EAAQ,CAAyB,CAAA,KAAA;AAAA,YACjD,CAAC,CAAM,KAAA,CAAA,CAAE,IAAS,KAAA,UAAA;AAAA,WAEpB,EAAA;AACA,YAAA,UAAA,CAAW,GAAG,CAAA,GAAI,QAAS,CAAA,MAAA,CAAO,GAAG,CAAA,CAAA;AAAA,WAChC,MAAA;AACL,YAAC,KAA2B,CAAA,IAAA,CAAA;AAC5B,YAAA,UAAA,CAAW,GAAG,CAAA,GAAI,QAAS,CAAA,GAAA,CAAI,GAAG,CAAA,CAAA;AAAA,WACpC;AAAA,SACD,CAAA,CAAA;AACD,QAAW,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,UAAA,CAAA,CAAA;AAAA,OACb;AAAA,KACI,EAAA,IAAA,CAAA;AAAA,IAEH,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AAEgB,SAAA,YAAA,CACd,QACA,SACA,EAAA;AACA,EAAAC,6BAAA;AAAA,IACE,MAAA;AAAA,IACA,QAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAMC,wBAAkB,MAAM,CAAA;AAAA,MAC9B,WAAa,EAAA,WAAA;AAAA,MACb,UAAY,EAAA,6CAAA;AAAA,MACZ,UAAY,EAAA,UAAA;AAAA,MACZ,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,SACnB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,MAAQ,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC7C;AAAA,QACA,OAAS,EAAA;AAAA,UACP,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,EAAC;AAAA,SACb;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;"}