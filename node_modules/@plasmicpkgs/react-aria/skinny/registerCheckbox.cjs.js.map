{"version":3,"file":"registerCheckbox.cjs.js","sources":["../src/registerCheckbox.tsx"],"sourcesContent":["import { PlasmicElement } from \"@plasmicapp/host\";\nimport React, { useEffect, useState } from \"react\";\nimport type { CheckboxProps } from \"react-aria-components\";\nimport { Checkbox } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, hasParent } from \"./common\";\nimport { PlasmicCheckboxGroupContext } from \"./contexts\";\nimport {\n  BaseControlContextData,\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst CHECKBOX_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"indeterminate\" as const,\n  \"disabled\" as const,\n  \"selected\" as const,\n  \"readonly\" as const,\n  \"selected\" as const,\n];\n\nexport interface BaseCheckboxControlContextData extends BaseControlContextData {\n  idError?: string;\n}\n\ninterface BaseCheckboxProps\n  extends CheckboxProps,\n    HasControlContextData<BaseCheckboxControlContextData>,\n    WithVariants<typeof CHECKBOX_VARIANTS> {\n  children: React.ReactNode;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(CHECKBOX_VARIANTS);\n\nexport function BaseCheckbox(props: BaseCheckboxProps) {\n  const {\n    children,\n    plasmicUpdateVariant,\n    setControlContextData,\n    value,\n    ...rest\n  } = props;\n  const contextProps = React.useContext(PlasmicCheckboxGroupContext);\n  const isStandalone = !contextProps;\n\n  const [registeredId, setRegisteredId] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (!contextProps?.idManager) {\n      return;\n    }\n\n    const localId = contextProps.idManager.register(value);\n    setRegisteredId(localId);\n\n    return () => {\n      contextProps.idManager.unregister(localId);\n      setRegisteredId(undefined);\n    };\n  }, [value, contextProps?.idManager]);\n\n  setControlContextData?.({\n    parent: contextProps,\n    idError: (() => {\n      if (value === undefined) {\n        return \"Value must be defined\";\n      }\n      if (typeof value !== \"string\") {\n        return \"Value must be a string\";\n      }\n      if (!value.trim()) {\n        return \"Value must be defined\";\n      }\n      if (!isStandalone && value != registeredId) {\n        return \"Value must be unique\";\n      }\n      return undefined;\n    })(),\n  });\n\n  return (\n    <>\n      <Checkbox\n        {...rest}\n        value={registeredId}\n        key={registeredId}\n        style={COMMON_STYLES}\n      >\n        {({\n          isHovered,\n          isPressed,\n          isFocused,\n          isFocusVisible,\n          isDisabled,\n          isIndeterminate,\n          isSelected,\n          isReadOnly,\n        }) =>\n          withObservedValues(\n            children,\n            {\n              hovered: isHovered,\n              pressed: isPressed,\n              focused: isFocused,\n              focusVisible: isFocusVisible,\n              disabled: isDisabled,\n              indeterminate: isIndeterminate,\n              selected: isSelected,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Checkbox>\n    </>\n  );\n}\n\nexport const makeDefaultCheckboxChildren = ({\n  label,\n  showDocs,\n}: {\n  label: string;\n  showDocs?: boolean;\n}): PlasmicElement => ({\n  type: \"vbox\",\n  styles: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"2px\",\n    padding: 0,\n  },\n  children: [\n    {\n      type: \"hbox\",\n      styles: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\",\n        padding: 0,\n      },\n      children: [\n        {\n          type: \"box\",\n          styles: {\n            width: \"7px\",\n            height: \"7px\",\n            borderRadius: \"3px\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\",\n          },\n        },\n        {\n          type: \"text\",\n          value: label,\n        },\n      ],\n    },\n    ...(showDocs\n      ? [\n          {\n            type: \"text\",\n            value: \"Use the registered variants to see it in action...\",\n          } as PlasmicElement,\n        ]\n      : []),\n  ],\n});\n\nexport const CHECKBOX_COMPONENT_NAME = makeComponentName(\"checkbox\");\n\nexport function registerCheckbox(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseCheckbox>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseCheckbox,\n    {\n      name: CHECKBOX_COMPONENT_NAME,\n      displayName: \"Aria Checkbox\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerCheckbox\",\n      importName: \"BaseCheckbox\",\n      variants,\n      props: {\n        ...getCommonProps<BaseCheckboxProps>(\"checkbox\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"aria-label\",\n          \"isRequired\",\n          \"autoFocus\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: makeDefaultCheckboxChildren({\n            label: \"Label\",\n            showDocs: true,\n          }),\n        },\n        value: {\n          type: \"string\",\n          description:\n            'The value of the checkbox in \"selected\" state, used when submitting an HTML form.',\n          defaultValueHint: 'Checked value (default: \"on\")',\n          validator: (_value, _props, ctx) => {\n            if (ctx?.idError) {\n              return ctx.idError;\n            }\n            return true;\n          },\n        },\n        isSelected: {\n          type: \"boolean\",\n          displayName: \"Default Selected\",\n          editOnly: true,\n          uncontrolledProp: \"defaultSelected\",\n          description: \"Whether the checkbox should be selected by default\",\n          defaultValueHint: false,\n          defaultValue: false,\n          hidden: hasParent,\n        },\n        isIndeterminate: {\n          displayName: \"Indeterminate\",\n          type: \"boolean\",\n          description:\n            \"This state indicates that the checkbox is neither fully checked nor unchecked. It typically represents a partial selection when dealing with groups of options. Some but not all items in the group are selected, resulting in an indeterminate state for the checkbox.\",\n          defaultValueHint: false,\n        },\n        isInvalid: {\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        validationBehavior: {\n          type: \"choice\",\n          options: [\"native\", \"aria\"],\n          description:\n            \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n          defaultValueHint: \"native\",\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isSelected\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isSelected: {\n          type: \"writable\",\n          valueProp: \"isSelected\",\n          onChangeProp: \"onChange\",\n          variableType: \"boolean\",\n          hidden: hasParent,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["pickAriaComponentVariants","React","PlasmicCheckboxGroupContext","useState","useEffect","Checkbox","COMMON_STYLES","makeComponentName","registerComponentHelper","getCommonProps","hasParent"],"mappings":"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"}