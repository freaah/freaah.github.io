{"version":3,"file":"registerTooltip.cjs.js","sources":["../src/registerTooltip.tsx"],"sourcesContent":["import { usePlasmicCanvasComponentInfo } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { useFocusable } from \"react-aria\";\nimport { Tooltip, TooltipProps, TooltipTrigger } from \"react-aria-components\";\nimport { TooltipTriggerProps } from \"react-stately\";\nimport { COMMON_STYLES, getCommonOverlayProps } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\n/*\n  NOTE: Placement should be managed as variants, not just props.\n  When `shouldFlip` is true, the placement prop may not represent the final position\n  (e.g., if placement is set to \"bottom\" but lacks space, the tooltip may flip to \"top\").\n  However, data-selectors will consistently indicate the actual placement of the tooltip.\n*/\nconst TOOLTIP_VARIANTS = [\n  \"placementTop\" as const,\n  \"placementBottom\" as const,\n  \"placementLeft\" as const,\n  \"placementRight\" as const,\n];\n\nexport interface BaseTooltipProps\n  extends TooltipTriggerProps,\n    TooltipProps,\n    WithVariants<typeof TOOLTIP_VARIANTS> {\n  children: React.ReactElement<HTMLElement>;\n  tooltipContent?: React.ReactElement;\n  resetClassName?: string;\n  className?: string;\n}\n\ninterface TriggerWrapperProps {\n  children: React.ReactElement;\n  className?: string;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(TOOLTIP_VARIANTS);\n\n/*\n\n  React Aria's TooltipTrigger TooltipTrigger requires a focusable element with ref.\n  To make sure that this requirement is fulfilled, wrap everything in a focusable div.\n  https://react-spectrum.adobe.com/react-aria/Tooltip.html#example\n  (In the example, Aria Button works as a trigger because it uses useFocusable behind the scenes)\n\n  Discussion (React-aria-components TooltipTrigger with custom button):\n  https://github.com/adobe/react-spectrum/discussions/5119#discussioncomment-7084661\n\n  */\nfunction TriggerWrapper({ children, className }: TriggerWrapperProps) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const { focusableProps } = useFocusable({}, ref);\n  return (\n    <div\n      ref={ref}\n      className={className}\n      {...focusableProps}\n      style={COMMON_STYLES}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function BaseTooltip(props: BaseTooltipProps) {\n  const {\n    children,\n    isDisabled,\n    delay,\n    closeDelay,\n    trigger,\n    isOpen,\n    defaultOpen,\n    tooltipContent,\n    resetClassName,\n    placement,\n    offset,\n    crossOffset,\n    shouldFlip,\n    onOpenChange,\n    plasmicUpdateVariant,\n  } = props;\n\n  const { isSelected, selectedSlotName } =\n    usePlasmicCanvasComponentInfo?.(props) ?? {};\n  const isAutoOpen = selectedSlotName !== \"children\" && isSelected;\n  const _isOpen = (isAutoOpen || isOpen) ?? false;\n\n  return (\n    <TooltipTrigger\n      isDisabled={isDisabled}\n      delay={delay}\n      closeDelay={closeDelay}\n      trigger={trigger}\n      isOpen={_isOpen}\n      defaultOpen={defaultOpen}\n      onOpenChange={onOpenChange}\n    >\n      <TriggerWrapper className={resetClassName}>{children}</TriggerWrapper>\n      <Tooltip\n        isOpen={_isOpen}\n        offset={offset}\n        crossOffset={crossOffset}\n        shouldFlip={shouldFlip}\n        defaultOpen={defaultOpen}\n        className={resetClassName}\n        onOpenChange={onOpenChange}\n        placement={placement}\n      >\n        {({ placement: _placement }) =>\n          withObservedValues(\n            <>{tooltipContent}</>,\n            {\n              placementTop: _placement === \"top\",\n              placementBottom: _placement === \"bottom\",\n              placementLeft: _placement === \"left\",\n              placementRight: _placement === \"right\",\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Tooltip>\n    </TooltipTrigger>\n  );\n}\n\nexport function registerTooltip(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseTooltip>\n) {\n  registerComponentHelper(\n    loader,\n    BaseTooltip,\n    {\n      name: \"plasmic-react-aria-tooltip\",\n      displayName: \"Aria Tooltip\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerTooltip\",\n      importName: \"BaseTooltip\",\n      isAttachment: true,\n      styleSections: false,\n      variants,\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          displayName: \"Trigger\",\n          defaultValue: {\n            type: \"text\",\n            value: \"Hover me!\",\n            styles: {\n              width: \"hug\",\n            },\n          },\n        },\n        tooltipContent: {\n          type: \"slot\",\n          mergeWithParent: true,\n          displayName: \"Tooltip Content\",\n          // NOTE: This is not applied in attachment\n          defaultValue: {\n            type: \"text\",\n            value: \"Hello from Tooltip!\",\n            styles: {\n              background: \"black\",\n              color: \"white\",\n              padding: \"7px\",\n              borderRadius: \"7px\",\n            },\n          },\n        },\n        resetClassName: {\n          type: \"themeResetClass\",\n        },\n        isDisabled: {\n          type: \"boolean\",\n        },\n        delay: {\n          type: \"number\",\n          // Default value is explicitly set to 0 to prevent users from mistakenly thinking the tooltip isn’t opening due to a delay.\n          defaultValue: 0,\n          defaultValueHint: 0,\n          description:\n            \"The delay (in milliseconds) for the tooltip to show up.\",\n        },\n        closeDelay: {\n          type: \"number\",\n          // Default value is explicitly set to 0 to prevent users from mistakenly thinking the tooltip isn’t closing due to a delay.\n          defaultValue: 0,\n          defaultValueHint: 0,\n          description: \"The delay (in milliseconds) for the tooltip to close.\",\n        },\n        trigger: {\n          type: \"choice\",\n          options: [\"focus\", \"focus and hover\"],\n          defaultValueHint: \"focus and hover\",\n        },\n        ...getCommonOverlayProps<BaseTooltipProps>(\"popover\", {\n          placement: { defaultValueHint: \"top\" },\n          offset: { defaultValueHint: 0 },\n          containerPadding: { defaultValueHint: 12 },\n          crossOffset: { defaultValueHint: 0 },\n        }),\n        isOpen: {\n          type: \"boolean\",\n          editOnly: true,\n          uncontrolledProp: \"defaultOpen\",\n          description: \"Whether the overlay is open by default\",\n          defaultValueHint: false,\n          hidden: () => true,\n        },\n        onOpenChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isOpen: {\n          type: \"writable\",\n          valueProp: \"isOpen\",\n          onChangeProp: \"onOpenChange\",\n          variableType: \"boolean\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["pickAriaComponentVariants","React","useFocusable","COMMON_STYLES","usePlasmicCanvasComponentInfo","TooltipTrigger","Tooltip","registerComponentHelper","getCommonOverlayProps"],"mappings":"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"}