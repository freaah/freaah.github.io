{"version":3,"file":"registerTextArea.esm.js","sources":["../src/registerTextArea.tsx"],"sourcesContent":["import React, { ChangeEvent, useCallback } from \"react\";\nimport { mergeProps } from \"react-aria\";\nimport type { InputRenderProps, TextAreaProps } from \"react-aria-components\";\nimport { TextArea } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicTextFieldContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst TEXTAREA_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"hovered\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants } = pickAriaComponentVariants(TEXTAREA_VARIANTS);\n\nexport interface BaseTextAreaProps\n  extends Omit<TextAreaProps, \"className\">,\n    HasControlContextData,\n    WithVariants<typeof TEXTAREA_VARIANTS> {\n  className?: string;\n}\n\nexport const inputHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: (e: ChangeEvent<HTMLInputElement>) => {\n        return e.target.value;\n      },\n    },\n  },\n};\n\nexport function BaseTextArea(props: BaseTextAreaProps) {\n  const { className, plasmicUpdateVariant, setControlContextData, ...rest } =\n    props;\n\n  const textFieldContext = React.useContext(PlasmicTextFieldContext);\n\n  setControlContextData?.({\n    parent: textFieldContext,\n  });\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled,\n      isFocusVisible,\n      isFocused,\n      isHovered,\n    }: InputRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n        hovered: isHovered,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const mergedProps = mergeProps(rest, {\n    className: classNameProp,\n  });\n\n  return <TextArea {...mergedProps} style={COMMON_STYLES} />;\n}\n\nexport function registerTextArea(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseTextArea>\n) {\n  registerComponentHelper(\n    loader,\n    BaseTextArea,\n    {\n      name: makeComponentName(\"textarea\"),\n      displayName: \"Aria TextArea\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerTextArea\",\n      importName: \"BaseTextArea\",\n      variants,\n      props: {\n        ...getCommonProps<BaseTextAreaProps>(\"Text Area\", [\n          \"name\",\n          \"disabled\",\n          \"readOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"required\",\n          \"placeholder\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"inputMode\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n          ...inputHelpers.states.value,\n        },\n      },\n      componentHelpers: {\n        helpers: inputHelpers,\n        importName: \"inputHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerTextArea\",\n      },\n    },\n    overrides\n  );\n}\n"],"names":[],"mappings":"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"}