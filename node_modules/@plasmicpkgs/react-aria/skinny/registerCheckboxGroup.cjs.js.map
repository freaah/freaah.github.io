{"version":3,"file":"registerCheckboxGroup.cjs.js","sources":["../src/registerCheckboxGroup.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport type { CheckboxGroupProps } from \"react-aria-components\";\nimport { CheckboxGroup } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicCheckboxGroupContext } from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport {\n  CHECKBOX_COMPONENT_NAME,\n  makeDefaultCheckboxChildren,\n} from \"./registerCheckbox\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nexport interface BaseCheckboxControlContextData {\n  values: string[];\n}\n\nconst CHECKBOX_GROUP_VARIANTS = [\"disabled\" as const, \"readonly\" as const];\n\nexport interface BaseCheckboxGroupProps\n  extends CheckboxGroupProps,\n    HasControlContextData<BaseCheckboxControlContextData>,\n    WithVariants<typeof CHECKBOX_GROUP_VARIANTS> {\n  children?: React.ReactNode;\n}\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  CHECKBOX_GROUP_VARIANTS\n);\n\nexport function BaseCheckboxGroup(props: BaseCheckboxGroupProps) {\n  const { children, plasmicUpdateVariant, setControlContextData, ...rest } =\n    props;\n  const [ids, setIds] = useState<string[]>([]);\n  const idManager = useMemo(() => new OptionsItemIdManager(), []);\n\n  useEffect(() => {\n    setControlContextData?.({\n      values: ids,\n    });\n  }, [ids, setControlContextData]);\n\n  useEffect(() => {\n    idManager.subscribe((_ids: string[]) => {\n      setIds(_ids);\n    });\n  }, [idManager]);\n\n  return (\n    <PlasmicCheckboxGroupContext.Provider value={{ ...rest, idManager }}>\n      <CheckboxGroup {...rest} style={COMMON_STYLES}>\n        {({ isDisabled, isReadOnly }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </CheckboxGroup>\n    </PlasmicCheckboxGroupContext.Provider>\n  );\n}\n\nconst componentName = makeComponentName(\"checkboxGroup\");\n\nexport function registerCheckboxGroup(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseCheckboxGroup>\n) {\n  registerComponentHelper(\n    loader,\n    BaseCheckboxGroup,\n    {\n      name: componentName,\n      displayName: \"Aria Checkbox Group\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerCheckboxGroup\",\n      importName: \"BaseCheckboxGroup\",\n      variants,\n      props: {\n        ...getCommonProps<BaseCheckboxGroupProps>(\"checkbox group\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"aria-label\",\n          \"isRequired\",\n        ]),\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"vbox\",\n              styles: {\n                display: \"flex\",\n                gap: \"5px\",\n                padding: 0,\n                alignItems: \"flex-start\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Checkbox Group\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 1\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox1\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 2\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox2\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 3\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox3\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: DESCRIPTION_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value:\n                        \"Use the registered variants to see it in action...\",\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n        value: {\n          type: \"choice\",\n          editOnly: true,\n          uncontrolledProp: \"defaultValue\",\n          description: \"The current value\",\n          options: (_props, ctx) => (ctx?.values ? Array.from(ctx.values) : []),\n          multiSelect: true,\n        },\n        isInvalid: {\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        validationBehavior: {\n          type: \"choice\",\n          options: [\"native\", \"aria\"],\n          description:\n            \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n          defaultValueHint: \"native\",\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"array\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":["pickAriaComponentVariants","useState","useMemo","OptionsItemIdManager","useEffect","React","PlasmicCheckboxGroupContext","CheckboxGroup","COMMON_STYLES","makeComponentName","registerComponentHelper","getCommonProps","LABEL_COMPONENT_NAME","CHECKBOX_COMPONENT_NAME","makeDefaultCheckboxChildren","DESCRIPTION_COMPONENT_NAME"],"mappings":"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"}