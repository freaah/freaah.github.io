import { PlasmicElement } from "@plasmicapp/host";
import React from "react";
import type { CheckboxProps } from "react-aria-components";
import { BaseControlContextData, CodeComponentMetaOverrides, HasControlContextData, Registerable } from "./utils";
import { WithVariants } from "./variant-utils";
declare const CHECKBOX_VARIANTS: ("disabled" | "readonly" | "hovered" | "pressed" | "focused" | "focusVisible" | "selected" | "indeterminate")[];
export interface BaseCheckboxControlContextData extends BaseControlContextData {
    idError?: string;
}
interface BaseCheckboxProps extends CheckboxProps, HasControlContextData<BaseCheckboxControlContextData>, WithVariants<typeof CHECKBOX_VARIANTS> {
    children: React.ReactNode;
}
export declare function BaseCheckbox(props: BaseCheckboxProps): React.JSX.Element;
export declare const makeDefaultCheckboxChildren: ({ label, showDocs, }: {
    label: string;
    showDocs?: boolean | undefined;
}) => PlasmicElement;
export declare const CHECKBOX_COMPONENT_NAME: string;
export declare function registerCheckbox(loader?: Registerable, overrides?: CodeComponentMetaOverrides<typeof BaseCheckbox>): import("@plasmicapp/host").CodeComponentMeta<BaseCheckboxProps>;
export {};
