import { PlasmicElement, PropType } from "@plasmicapp/host";
import { CSSProperties } from "react";
import { BaseControlContextData, HasControlContextData } from "./utils";
export declare function hasParent<T>(_props: T, ctx: ConditionalContext<T>): boolean;
export declare function isParentReadOnly<T>(_props: T, ctx: ConditionalContext<T>): boolean;
export declare function isParentDisabled<T>(_props: T, ctx: ConditionalContext<T>): boolean;
export declare function resolveAutoComplete(autoCompleteProp?: string | string[]): string | undefined;
type ConditionalContext<T> = T extends HasControlContextData ? BaseControlContextData | null : null;
export declare function getCommonProps<T>(componentName: string, propNames: (keyof T)[]): Partial<Record<keyof T, PropType<T>>>;
type Overrides = {
    defaultValueHint?: any;
};
export declare function createPlacementProp<T>(componentName: string, overrides: Overrides): PropType<T>;
export declare function createOffsetProp<T>(componentName: string, overrides: Overrides): PropType<T>;
export declare function createContainerPaddingProp<T>(componentName: string, overrides: Overrides): PropType<T>;
export declare function createCrossOffsetProp<T>(componentName: string, overrides: Overrides): PropType<T>;
export declare function getCommonOverlayProps<T>(componentName: string, overrides: Record<string, Overrides>): Record<string, PropType<T>>;
export declare const arrowDown: PlasmicElement;
export declare const COMMON_STYLES: CSSProperties;
export {};
