{"version":3,"file":"react-aria.esm.js","sources":["../src/utils.ts","../src/common.ts","../src/variant-utils.tsx","../src/registerButton.tsx","../src/contexts.tsx","../src/registerCheckbox.tsx","../src/OptionsItemIdManager.ts","../src/registerText.tsx","../src/registerDescription.tsx","../src/registerLabel.tsx","../src/registerCheckboxGroup.tsx","../src/registerInput.tsx","../src/registerListBoxItem.tsx","../src/registerSection.tsx","../src/registerListBox.tsx","../src/registerPopover.tsx","../src/registerComboBox.tsx","../src/registerDialog.tsx","../src/registerModal.tsx","../src/registerDialogTrigger.tsx","../src/registerHeading.tsx","../src/registerOverlayArrow.tsx","../src/registerRadio.tsx","../src/registerRadioGroup.tsx","../src/registerSelect.tsx","../src/registerSliderOutput.tsx","../src/ErrorBoundary.tsx","../src/registerSliderThumb.tsx","../src/registerSliderTrack.tsx","../src/registerSlider.tsx","../src/registerSwitch.tsx","../src/registerTextArea.tsx","../src/registerTextField.tsx","../src/registerTooltip.tsx","../src/index.tsx"],"sourcesContent":["import {\n  usePlasmicCanvasComponentInfo,\n  usePlasmicCanvasContext,\n  type CodeComponentMeta,\n} from \"@plasmicapp/host\";\nimport registerComponent from \"@plasmicapp/host/registerComponent\";\nimport React, { useEffect } from \"react\";\n\nexport type HasControlContextData<T = BaseControlContextData> = {\n  setControlContextData?: (ctxData: T) => void;\n};\n\nexport type BaseControlContextData = {\n  parent?: {\n    isDisabled?: boolean;\n    isReadOnly?: boolean;\n  };\n};\n\nexport type Registerable = {\n  registerComponent: typeof registerComponent;\n};\n\nexport type OtherCodeComponentsMeta = {\n  text: CodeComponentMeta<any>;\n  description: CodeComponentMeta<any>;\n};\n\nexport type CodeComponentMetaOverrides<T extends React.ComponentType<any>> =\n  Partial<\n    Pick<\n      CodeComponentMeta<React.ComponentProps<T>>,\n      \"parentComponentName\" | \"props\" | \"displayName\" | \"name\"\n    >\n  >;\n\nexport function useAutoOpen({\n  props,\n  open,\n  close,\n}: {\n  props: any;\n  open?: () => void;\n  close?: () => void;\n}) {\n  const inPlasmicCanvas = !!usePlasmicCanvasContext();\n  const isSelected =\n    usePlasmicCanvasComponentInfo?.(props)?.isSelected ?? false;\n\n  useEffect(() => {\n    // selection in outline tab only matters in canvas\n    if (!inPlasmicCanvas) {\n      return;\n    }\n    if (isSelected) {\n      open?.();\n    } else {\n      close?.();\n    }\n    // Not putting open and close in the useEffect dependencies array, because it causes a re-render loop.\n  }, [isSelected, inPlasmicCanvas]);\n}\n\nexport function registerComponentHelper<T extends React.ComponentType<any>>(\n  loader: Registerable | undefined,\n  component: T,\n  meta: CodeComponentMeta<React.ComponentProps<T>>,\n  overrides?: CodeComponentMetaOverrides<T>\n) {\n  if (overrides) {\n    meta = {\n      ...meta,\n      ...overrides,\n      props: {\n        ...meta.props,\n        ...overrides.props,\n      },\n    };\n    if (overrides.parentComponentName) {\n      meta.name = makeChildComponentName(\n        overrides.parentComponentName,\n        meta.name\n      );\n    }\n  }\n  if (loader) {\n    loader.registerComponent(component, meta);\n  } else {\n    registerComponent(component, meta);\n  }\n  return meta;\n}\n\nexport function makeComponentName(name: string) {\n  return `plasmic-react-aria-${name}`;\n}\n\nexport function makeChildComponentName(\n  fullParentName: string | undefined,\n  fullChildName: string\n) {\n  if (!fullParentName) {\n    return fullChildName;\n  }\n  return `${fullParentName}-${fullChildName.replace(\n    \"plasmic-react-aria-\",\n    \"\"\n  )}`;\n}\n\nexport interface Styleable {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function extractPlasmicDataProps(props: Record<string, any>) {\n  return Object.fromEntries(\n    Object.entries(props).filter(([key]) => key.startsWith(\"data-plasmic-\"))\n  );\n}\n\nexport function withoutNils<T>(array: (T | undefined | null)[]) {\n  return array.filter((x): x is T => x != null);\n}\n\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return thing !== undefined && thing !== null;\n}\n","import { PlasmicElement, PropType } from \"@plasmicapp/host\";\nimport { CSSProperties } from \"react\";\nimport {\n  BaseControlContextData,\n  HasControlContextData,\n  isDefined,\n} from \"./utils\";\n\nexport function hasParent<T>(_props: T, ctx: ConditionalContext<T>): boolean {\n  return isDefined(ctx?.parent) === true;\n}\n\nexport function isParentReadOnly<T>(_props: T, ctx: ConditionalContext<T>) {\n  return ctx?.parent?.isReadOnly === true;\n}\n\nexport function isParentDisabled<T>(_props: T, ctx: ConditionalContext<T>) {\n  return ctx?.parent?.isDisabled === true;\n}\n\nexport function resolveAutoComplete(autoCompleteProp?: string | string[]) {\n  if (typeof autoCompleteProp === \"string\") {\n    return autoCompleteProp;\n  }\n  if (\n    !autoCompleteProp ||\n    !Array.isArray(autoCompleteProp) ||\n    autoCompleteProp.includes(\"off\")\n  ) {\n    return undefined;\n  }\n  if (autoCompleteProp.includes(\"off\")) {\n    return \"off\";\n  }\n  if (autoCompleteProp.includes(\"on\") && autoCompleteProp.length === 1) {\n    return \"on\";\n  }\n  return autoCompleteProp.filter((x) => x !== \"on\").join(\" \");\n}\n\ntype ConditionalContext<T> = T extends HasControlContextData\n  ? BaseControlContextData | null\n  : null;\n\nfunction createNameProp<T>(): PropType<T> {\n  return {\n    type: \"string\",\n    description: \"Name for this field if it is part of a form\",\n    displayName: \"Form field key\",\n    // hidden: hasParent,\n    hidden: () => true, // hiding required prop until the release of Aria Forms\n    advanced: true,\n  };\n}\n\nfunction createDisabledProp<T>(componentName: string): PropType<T> {\n  return {\n    displayName: \"Disabled\",\n    type: \"boolean\",\n    description: `Whether the ${componentName} is read-only and unfocusable`,\n    defaultValueHint: false,\n    hidden: isParentDisabled,\n  };\n}\n\nfunction createReadOnlyProp<T>(componentName: string): PropType<T> {\n  return {\n    displayName: \"Read only\",\n    type: \"boolean\",\n    description: `Whether the value of this ${componentName} can be changed by the user. Unlike disabled, read-only does not prevent the user from interacting with the component (such as focus).`,\n    defaultValueHint: false,\n    advanced: true,\n    hidden: isParentReadOnly,\n  };\n}\n\nfunction createRequiredProp<T>(componentName: string): PropType<T> {\n  return {\n    displayName: \"Required\",\n    type: \"boolean\",\n    description: `Whether user input is required on the ${componentName} before form submission.`,\n    defaultValueHint: false,\n    advanced: true,\n    // hidden: hasParent,\n    hidden: () => true, // hiding required prop until the release of Aria Forms\n  };\n}\n\nfunction createAutoFocusProp<T>(componentName: string): PropType<T> {\n  return {\n    type: \"boolean\",\n    description: `Whether the ${componentName} should be focused when rendered`,\n    defaultValueHint: false,\n    advanced: true,\n    hidden: hasParent,\n  };\n}\n\nfunction createAriaLabelProp<T>(componentName: string): PropType<T> {\n  return {\n    type: \"string\",\n    displayName: \"ARIA label\",\n    description: `Assistive technology uses this if there is no visible label for this ${componentName}`,\n    advanced: true,\n    hidden: hasParent,\n  };\n}\n\nfunction createChildrenProp<T>(): PropType<T> {\n  return {\n    type: \"slot\",\n    mergeWithParent: true,\n  };\n}\n\nexport function getCommonProps<T>(\n  componentName: string,\n  propNames: (keyof T)[]\n) {\n  const commonProps: Record<string, PropType<T>> = {\n    name: createNameProp<T>(),\n    disabled: createDisabledProp(componentName),\n    isDisabled: createDisabledProp(componentName),\n    readOnly: createReadOnlyProp(componentName),\n    isReadOnly: createReadOnlyProp(componentName),\n    autoFocus: createAutoFocusProp(componentName),\n    \"aria-label\": createAriaLabelProp(componentName),\n    required: createRequiredProp(componentName),\n    isRequired: createRequiredProp(componentName),\n    children: createChildrenProp(),\n    // NOTE: The following props are only applicable to inputs, textareas, and text fields\n    value: {\n      type: \"string\",\n      editOnly: true,\n      displayName: \"Initial value\",\n      uncontrolledProp: \"defaultValue\",\n      description: `The default value of the ${componentName}`,\n      hidden: hasParent,\n    },\n    maxLength: {\n      type: \"number\",\n      description: \"The maximum number of characters supported by the input\",\n      advanced: true,\n      hidden: hasParent,\n    },\n    minLength: {\n      type: \"number\",\n      description: \"The minimum number of characters supported by the input\",\n      advanced: true,\n      hidden: hasParent,\n    },\n    pattern: {\n      type: \"string\",\n      description:\n        \"Regex pattern that the value of the input must match to be valid\",\n      helpText:\n        \"For more information about writing Regular Expressions (regex), visit [Regexr](https://regexr.com/)\",\n      validator: (value: string) => {\n        try {\n          new RegExp(value);\n          return true;\n        } catch (error) {\n          return \"Invalid Regex\";\n        }\n      },\n      advanced: true,\n      hidden: hasParent,\n    },\n    type: {\n      type: \"choice\",\n      defaultValueHint: \"text\",\n      options: [\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"],\n      description:\n        \"The type of data that an input field is expected to handle. It influences the input's behavior, validation, and the kind of interface provided to the user.\",\n      advanced: true,\n      hidden: hasParent,\n    },\n    inputMode: {\n      type: \"choice\",\n      description:\n        \"hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents.\",\n      options: [\n        \"none\",\n        \"text\",\n        \"tel\",\n        \"url\",\n        \"email\",\n        \"numeric\",\n        \"decimal\",\n        \"search\",\n      ],\n      hidden: hasParent,\n    },\n    autoComplete: {\n      type: \"choice\",\n      advanced: true,\n      multiSelect: true,\n      hidden: hasParent,\n      description: \"Guidance as to the type of data expected in the field\",\n      helpText:\n        \"Learn more about the available options on the [MDN guide](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values)\",\n      options: [\n        \"on\",\n        \"off\",\n        \"name\",\n        \"honorific-prefix\",\n        \"given-name\",\n        \"additional-name\",\n        \"family-name\",\n        \"honorific-suffix\",\n        \"nickname\",\n        \"email\",\n        \"username\",\n        \"new-password\",\n        \"current-password\",\n        \"one-time-code\",\n        \"organization-title\",\n        \"organization\",\n        \"street-address\",\n        \"shipping\",\n        \"billing\",\n        \"address-line1\",\n        \"address-line2\",\n        \"address-line3\",\n        \"address-level4\",\n        \"address-level3\",\n        \"address-level2\",\n        \"address-level1\",\n        \"country\",\n        \"country-name\",\n        \"postal-code\",\n        \"cc-name\",\n        \"cc-given-name\",\n        \"cc-additional-name\",\n        \"cc-family-name\",\n        \"cc-number\",\n        \"cc-exp\",\n        \"cc-exp-month\",\n        \"cc-exp-year\",\n        \"cc-csc\",\n        \"cc-type\",\n        \"transaction-currency\",\n        \"transaction-amount\",\n        \"language\",\n        \"bday\",\n        \"bday-day\",\n        \"bday-month\",\n        \"bday-year\",\n        \"sex\",\n        \"tel\",\n        \"tel-country-code\",\n        \"tel-national\",\n        \"tel-area-code\",\n        \"tel-local\",\n        \"tel-local-suffix\",\n        \"tel-local-prefix\",\n        \"tel-extension\",\n        \"impp\",\n        \"url\",\n        \"photo\",\n        \"webauthn\",\n      ],\n    },\n    validationBehavior: {\n      type: \"choice\",\n      options: [\"native\", \"aria\"],\n      description:\n        \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n      defaultValueHint: \"native\",\n      advanced: true,\n      hidden: hasParent,\n    },\n    onChange: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"value\", type: \"string\" }],\n      hidden: hasParent,\n    },\n    onFocus: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"focusEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onBlur: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"focusEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onFocusChange: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"isFocused\", type: \"boolean\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onKeyDown: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"keyboardEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onKeyUp: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"keyboardEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onCopy: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"clipbordEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onCut: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"clipbordEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onPaste: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"clipbordEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onCompositionStart: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"compositionEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onCompositionEnd: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"compositionEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onCompositionUpdate: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"compositionEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onSelect: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"selectionEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onBeforeInput: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"inputEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    onInput: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"inputEvent\", type: \"object\" }],\n      advanced: true,\n      hidden: hasParent,\n    },\n    placeholder: {\n      type: \"string\",\n    },\n  };\n\n  // Filter the properties based on the provided fields array\n  const filteredProps: Partial<Record<keyof T, PropType<T>>> = {};\n  propNames.forEach((propName) => {\n    if (Object.prototype.hasOwnProperty.call(commonProps, propName)) {\n      filteredProps[propName] = commonProps[propName as string];\n    }\n  });\n\n  return filteredProps;\n}\n\ntype Overrides = {\n  defaultValueHint?: any;\n};\n\nexport function createPlacementProp<T>(\n  componentName: string,\n  overrides: Overrides\n): PropType<T> {\n  return {\n    type: \"choice\",\n    description: `Default placement of the ${componentName} relative to the trigger, if there is enough space`,\n    options: [\n      \"bottom\",\n      \"bottom left\",\n      \"bottom right\",\n      \"bottom start\",\n      \"bottom end\",\n      \"top\",\n      \"top left\",\n      \"top right\",\n      \"top start\",\n      \"top end\",\n      \"left\",\n      \"left top\",\n      \"left bottom\",\n      \"start\",\n      \"start top\",\n      \"start bottom\",\n      \"right\",\n      \"right top\",\n      \"right bottom\",\n      \"end\",\n      \"end top\",\n      \"end bottom\",\n    ],\n    ...(overrides ?? {}),\n  };\n}\n\nexport function createOffsetProp<T>(\n  componentName: string,\n  overrides: Overrides\n): PropType<T> {\n  return {\n    type: \"number\",\n    displayName: \"Offset\",\n    description: `Additional offset applied along the main axis between the ${componentName} and its trigger`,\n    advanced: true,\n    ...(overrides ?? {}),\n  };\n}\n\nexport function createContainerPaddingProp<T>(\n  componentName: string,\n  overrides: Overrides\n): PropType<T> {\n  return {\n    type: \"number\",\n    description: `The padding that should be applied between the ${componentName} and its surrounding container. This affects the positioning breakpoints that determine when it will attempt to flip.`,\n    advanced: true,\n    ...(overrides ?? {}),\n  };\n}\n\nexport function createCrossOffsetProp<T>(\n  componentName: string,\n  overrides: Overrides\n): PropType<T> {\n  return {\n    type: \"number\",\n    description: `The additional offset applied along the cross axis between the ${componentName} and its anchor element.`,\n    advanced: true,\n    ...(overrides ?? {}),\n  };\n}\n\nexport function getCommonOverlayProps<T>(\n  componentName: string,\n  overrides: Record<string, Overrides>\n) {\n  const commonProps: Record<string, PropType<T>> = {\n    placement: createPlacementProp<T>(componentName, overrides[\"placement\"]),\n    offset: createOffsetProp<T>(componentName, overrides[\"offset\"]),\n    containerPadding: createContainerPaddingProp<T>(\n      componentName,\n      overrides[\"containerPadding\"]\n    ),\n    crossOffset: createCrossOffsetProp<T>(\n      componentName,\n      overrides[\"crossOffset\"]\n    ),\n  };\n  return commonProps;\n}\n\nexport const arrowDown: PlasmicElement = {\n  type: \"hbox\",\n  children: [],\n  styles: {\n    width: 0,\n    height: 0,\n    padding: 0,\n    borderLeftWidth: \"5px\",\n    borderRightWidth: \"5px\",\n    borderTopWidth: \"5px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderLeftColor: \"transparent\",\n    borderRightColor: \"transparent\",\n    borderTopColor: \"black\",\n  },\n};\n// Set border-box to the root element of the aria code component to align with Plasmic's default of using border-box for all root elements.\nexport const COMMON_STYLES: CSSProperties = { boxSizing: \"border-box\" };\n","import { CodeComponentMeta } from \"@plasmicapp/host\";\nimport React from \"react\";\n\nconst ARIA_COMPONENTS_VARIANTS = {\n  hovered: {\n    cssSelector: \"[data-hovered]\",\n    displayName: \"Hovered\",\n  },\n  pressed: {\n    cssSelector: \"[data-pressed]\",\n    displayName: \"Pressed\",\n  },\n  focused: {\n    cssSelector: \"[data-focused]\",\n    displayName: \"Focused\",\n  },\n  focusVisible: {\n    cssSelector: \"[data-focus-visible]\",\n    displayName: \"Focus Visible\",\n  },\n  dragging: {\n    cssSelector: \"[data-dragging]\",\n    displayName: \"Dragging\",\n  },\n  selected: {\n    cssSelector: \"[data-selected]\",\n    displayName: \"Selected\",\n  },\n  readonly: {\n    cssSelector: \"[data-readonly]\",\n    displayName: \"Read Only\",\n  },\n  disabled: {\n    cssSelector: \"[data-disabled]\",\n    displayName: \"Disabled\",\n  },\n  indeterminate: {\n    cssSelector: \"[data-indeterminate]\",\n    displayName: \"Indeterminate\",\n  },\n  /*\n    NOTE: Placement should be managed as variants, not just props.\n    When `shouldFlip` is true, the placement prop may not represent the final position\n    (e.g., if placement is set to \"bottom\" but lacks space, the popover/tooltip may flip to \"top\").\n    However, data-selectors will consistently indicate the actual placement of the popover/tooltip.\n  */\n  placementLeft: {\n    cssSelector: \"[data-placement=left]\",\n    displayName: \"Placement (Left)\",\n  },\n  placementRight: {\n    cssSelector: \"[data-placement=right]\",\n    displayName: \"Placement (Right)\",\n  },\n  placementTop: {\n    cssSelector: \"[data-placement=top]\",\n    displayName: \"Placement (Top)\",\n  },\n  placementBottom: {\n    cssSelector: \"[data-placement=bottom]\",\n    displayName: \"Placement (Bottom)\",\n  },\n};\n\ntype AriaVariant = keyof typeof ARIA_COMPONENTS_VARIANTS;\n\ntype CodeComponentVariantsMeta = NonNullable<\n  CodeComponentMeta<unknown>[\"variants\"]\n>;\n\ntype VariantMeta = CodeComponentVariantsMeta[string];\n\ntype ArrayElement<T> = T extends (infer U)[] ? U : never;\n\nexport type UpdateVariant<T extends AriaVariant[]> =\n  | ((changes: Partial<Record<ArrayElement<T>, boolean>>) => void)\n  | undefined;\n\nexport interface WithVariants<T extends AriaVariant[]> {\n  // Optional callback to update the CC variant state\n  // as it's only provided if the component is the root of a Studio component\n  plasmicUpdateVariant?: UpdateVariant<T>;\n}\n\ntype WithObservedValues<T extends AriaVariant[]> = (\n  children: React.ReactNode,\n  state: Record<ArrayElement<T>, boolean>,\n  updateVariant: UpdateVariant<T>\n) => React.ReactNode;\n\nfunction ChangesObserver<T extends AriaVariant[]>({\n  children,\n  changes,\n  updateVariant,\n}: {\n  children: React.ReactNode;\n  changes: Partial<Record<ArrayElement<T>, boolean>>;\n  updateVariant?: UpdateVariant<T>;\n}) {\n  React.useEffect(() => {\n    if (updateVariant) {\n      updateVariant(changes);\n    }\n  }, [changes, updateVariant]);\n  return children;\n}\n\nfunction realWithObservedValues<T extends AriaVariant[]>(\n  children: React.ReactNode,\n  changes: Partial<Record<ArrayElement<T>, boolean>>,\n  updateVariant?: UpdateVariant<T>\n) {\n  return (\n    <ChangesObserver changes={changes} updateVariant={updateVariant}>\n      {children}\n    </ChangesObserver>\n  );\n}\n\nexport function pickAriaComponentVariants<T extends AriaVariant[]>(\n  keys: T\n): {\n  variants: Record<ArrayElement<T>, VariantMeta>;\n  withObservedValues: WithObservedValues<T>;\n} {\n  return {\n    variants: Object.fromEntries(\n      keys.map((key) => [key, ARIA_COMPONENTS_VARIANTS[key]])\n    ) as Record<ArrayElement<T>, VariantMeta>,\n    withObservedValues: realWithObservedValues<T>,\n  };\n}\n","import { usePlasmicLink } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { mergeProps, useFocusRing, useHover, useLink } from \"react-aria\";\nimport type { ButtonProps, LinkProps } from \"react-aria-components\";\nimport { Button } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst BUTTON_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(BUTTON_VARIANTS);\n\ntype CommonProps = { children: React.ReactNode } & Omit<\n  ButtonProps,\n  \"className\" | \"children\"\n> &\n  Omit<LinkProps, \"className\" | \"children\">;\ntype LinkSpecificProps = Pick<LinkProps, \"href\" | \"target\">;\ntype ButtonSpecificProps = {\n  resetsForm?: boolean;\n  submitsForm?: boolean;\n};\n\ninterface BaseButtonProps\n  extends CommonProps,\n    LinkSpecificProps,\n    ButtonSpecificProps,\n    WithVariants<typeof BUTTON_VARIANTS> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const BaseButton = React.forwardRef(function BaseButtonInner(\n  props: BaseButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>\n) {\n  const { href } = props;\n\n  if (href) {\n    return (\n      <LinkButton\n        props={props}\n        ref={ref as React.RefObject<HTMLAnchorElement>}\n      />\n    );\n  } else {\n    const { submitsForm, resetsForm, children, plasmicUpdateVariant, ...rest } =\n      props;\n    const type = submitsForm ? \"submit\" : resetsForm ? \"reset\" : \"button\";\n\n    const buttonProps = mergeProps(rest, {\n      type,\n      style: COMMON_STYLES,\n      ref: ref as React.Ref<HTMLButtonElement>,\n    });\n\n    return (\n      <Button {...buttonProps}>\n        {({ isHovered, isPressed, isFocused, isFocusVisible, isDisabled }) =>\n          withObservedValues(\n            children,\n            {\n              hovered: isHovered,\n              pressed: isPressed,\n              focused: isFocused,\n              focusVisible: isFocusVisible,\n              disabled: isDisabled,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Button>\n    );\n  }\n});\n\nfunction LinkButton({\n  props,\n  ref,\n}: {\n  props: BaseButtonProps;\n  ref: React.RefObject<HTMLAnchorElement>;\n}) {\n  const { href, children, plasmicUpdateVariant, ...rest } = props;\n  const PlasmicLink = usePlasmicLink();\n  const { linkProps, isPressed } = useLink(props, ref);\n  const { hoverProps, isHovered } = useHover(props);\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing();\n\n  const combinedLinkProps = mergeProps(linkProps, hoverProps, focusProps, {\n    href,\n    className: props.className,\n    style: COMMON_STYLES,\n    ref,\n  });\n\n  return (\n    <PlasmicLink\n      {...combinedLinkProps}\n      data-focused={isFocused || undefined}\n      data-hovered={isHovered || undefined}\n      data-pressed={isPressed || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-disabled={props.isDisabled || undefined}\n    >\n      {withObservedValues(\n        children,\n        {\n          hovered: isHovered,\n          pressed: isPressed,\n          focused: isFocused,\n          focusVisible: isFocusVisible,\n          disabled: !!rest.isDisabled,\n        },\n        plasmicUpdateVariant\n      )}\n    </PlasmicLink>\n  );\n}\n\nexport const BUTTON_COMPONENT_NAME = makeComponentName(\"button\");\n\nexport function registerButton(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseButton>\n) {\n  registerComponentHelper(\n    loader,\n    BaseButton,\n    {\n      name: BUTTON_COMPONENT_NAME,\n      displayName: \"Aria Button\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerButton\",\n      importName: \"BaseButton\",\n      variants,\n      defaultStyles: {\n        // Ensure consistent design across rendered elements (button, anchor tag).\n        backgroundColor: \"#EFEFEF\",\n        borderColor: \"black\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        color: \"#000000\",\n        cursor: \"pointer\",\n        fontFamily: \"Arial\",\n        fontSize: \"1rem\",\n        lineHeight: \"1.2\",\n        padding: \"2px 10px\",\n        textDecorationLine: \"none\",\n      },\n      props: {\n        ...getCommonProps<BaseButtonProps>(\"button\", [\n          \"autoFocus\",\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"text\",\n            value: \"Button\",\n          },\n        },\n        href: {\n          type: \"href\",\n          description:\n            \"The URL this button navigates to. If present, this button is an <a> element.\",\n        },\n        target: {\n          type: \"choice\",\n          options: [\"_blank\", \"_self\", \"_parent\", \"_top\"],\n          description:\n            \"Same as target attribute of <a> element. Only applies when the href prop is present.\",\n          hidden: (props) => !props.href,\n          defaultValueHint: \"_self\",\n        },\n        submitsForm: {\n          type: \"boolean\",\n          displayName: \"Submits form?\",\n          defaultValueHint: false,\n          hidden: (props) => Boolean(props.resetsForm) || Boolean(props.href),\n          description:\n            \"Whether clicking this button should submit the enclosing form.\",\n          advanced: true,\n        },\n        resetsForm: {\n          type: \"boolean\",\n          displayName: \"Resets form?\",\n          defaultValueHint: false,\n          hidden: (props) => Boolean(props.submitsForm) || Boolean(props.href),\n          description:\n            \"Whether clicking this button should reset the enclosing form.\",\n          advanced: true,\n        },\n        onPress: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n        onFocus: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React from \"react\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport { BaseCheckboxGroup } from \"./registerCheckboxGroup\";\nimport { BaseDialogTrigger } from \"./registerDialogTrigger\";\nimport type { BaseInput } from \"./registerInput\";\nimport type { BaseLabel } from \"./registerLabel\";\nimport { BaseRadioGroup } from \"./registerRadioGroup\";\nimport type { BaseSection } from \"./registerSection\";\nimport { BaseSlider } from \"./registerSlider\";\nimport { BaseTextField } from \"./registerTextField\";\n\n// We pass down context props via our own Plasmic*Context instead of directly\n// using react-aria-component's *Context, because react-aria-component's\n// contexts don't \"merge\" with contexts further up the tree, so if we render\n// a context provider, it will just be overwritten by react-aria-component's\n// context provider.  So we do the merging within our own Base* components\n// instead.\n\n// Creating the text field context here because input/textarea inside text field receive a null for the TextFieldContext\nexport const PlasmicTextFieldContext = React.createContext<\n  React.ComponentProps<typeof BaseTextField> | undefined\n>(undefined);\n\nexport const PlasmicCheckboxGroupContext = React.createContext<\n  | (React.ComponentProps<typeof BaseCheckboxGroup> & {\n      idManager: OptionsItemIdManager;\n    })\n  | undefined\n>(undefined);\n\nexport const PlasmicRadioGroupContext = React.createContext<\n  | (React.ComponentProps<typeof BaseRadioGroup> & {\n      idManager: OptionsItemIdManager;\n    })\n  | undefined\n>(undefined);\n\nexport const PlasmicDialogTriggerContext = React.createContext<\n  React.ComponentProps<typeof BaseDialogTrigger> | undefined\n>(undefined);\n\nexport type PlasmicSliderContextType<T extends number | number[]> =\n  | React.ComponentProps<typeof BaseSlider<T>>\n  | undefined;\n\nexport const PlasmicSliderContext =\n  React.createContext<PlasmicSliderContextType<number | number[]>>(undefined);\n\nexport const PlasmicLabelContext = React.createContext<\n  React.ComponentProps<typeof BaseLabel> | undefined\n>(undefined);\n\nexport const PlasmicPopoverTriggerContext = React.createContext<\n  boolean | undefined\n>(undefined);\n\nexport const PlasmicListBoxContext = React.createContext<\n  | {\n      idManager: OptionsItemIdManager;\n    }\n  | undefined\n>(undefined);\n\nexport const PlasmicSectionContext = React.createContext<\n  React.ComponentProps<typeof BaseSection> | undefined\n>(undefined);\n\nexport const PlasmicInputContext = React.createContext<\n  React.ComponentProps<typeof BaseInput> | undefined\n>(undefined);\n","import { PlasmicElement } from \"@plasmicapp/host\";\nimport React, { useEffect, useState } from \"react\";\nimport type { CheckboxProps } from \"react-aria-components\";\nimport { Checkbox } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, hasParent } from \"./common\";\nimport { PlasmicCheckboxGroupContext } from \"./contexts\";\nimport {\n  BaseControlContextData,\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst CHECKBOX_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"indeterminate\" as const,\n  \"disabled\" as const,\n  \"selected\" as const,\n  \"readonly\" as const,\n  \"selected\" as const,\n];\n\nexport interface BaseCheckboxControlContextData extends BaseControlContextData {\n  idError?: string;\n}\n\ninterface BaseCheckboxProps\n  extends CheckboxProps,\n    HasControlContextData<BaseCheckboxControlContextData>,\n    WithVariants<typeof CHECKBOX_VARIANTS> {\n  children: React.ReactNode;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(CHECKBOX_VARIANTS);\n\nexport function BaseCheckbox(props: BaseCheckboxProps) {\n  const {\n    children,\n    plasmicUpdateVariant,\n    setControlContextData,\n    value,\n    ...rest\n  } = props;\n  const contextProps = React.useContext(PlasmicCheckboxGroupContext);\n  const isStandalone = !contextProps;\n\n  const [registeredId, setRegisteredId] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (!contextProps?.idManager) {\n      return;\n    }\n\n    const localId = contextProps.idManager.register(value);\n    setRegisteredId(localId);\n\n    return () => {\n      contextProps.idManager.unregister(localId);\n      setRegisteredId(undefined);\n    };\n  }, [value, contextProps?.idManager]);\n\n  setControlContextData?.({\n    parent: contextProps,\n    idError: (() => {\n      if (value === undefined) {\n        return \"Value must be defined\";\n      }\n      if (typeof value !== \"string\") {\n        return \"Value must be a string\";\n      }\n      if (!value.trim()) {\n        return \"Value must be defined\";\n      }\n      if (!isStandalone && value != registeredId) {\n        return \"Value must be unique\";\n      }\n      return undefined;\n    })(),\n  });\n\n  return (\n    <>\n      <Checkbox\n        {...rest}\n        value={registeredId}\n        key={registeredId}\n        style={COMMON_STYLES}\n      >\n        {({\n          isHovered,\n          isPressed,\n          isFocused,\n          isFocusVisible,\n          isDisabled,\n          isIndeterminate,\n          isSelected,\n          isReadOnly,\n        }) =>\n          withObservedValues(\n            children,\n            {\n              hovered: isHovered,\n              pressed: isPressed,\n              focused: isFocused,\n              focusVisible: isFocusVisible,\n              disabled: isDisabled,\n              indeterminate: isIndeterminate,\n              selected: isSelected,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Checkbox>\n    </>\n  );\n}\n\nexport const makeDefaultCheckboxChildren = ({\n  label,\n  showDocs,\n}: {\n  label: string;\n  showDocs?: boolean;\n}): PlasmicElement => ({\n  type: \"vbox\",\n  styles: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"2px\",\n    padding: 0,\n  },\n  children: [\n    {\n      type: \"hbox\",\n      styles: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\",\n        padding: 0,\n      },\n      children: [\n        {\n          type: \"box\",\n          styles: {\n            width: \"7px\",\n            height: \"7px\",\n            borderRadius: \"3px\",\n            borderWidth: \"1px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\",\n          },\n        },\n        {\n          type: \"text\",\n          value: label,\n        },\n      ],\n    },\n    ...(showDocs\n      ? [\n          {\n            type: \"text\",\n            value: \"Use the registered variants to see it in action...\",\n          } as PlasmicElement,\n        ]\n      : []),\n  ],\n});\n\nexport const CHECKBOX_COMPONENT_NAME = makeComponentName(\"checkbox\");\n\nexport function registerCheckbox(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseCheckbox>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseCheckbox,\n    {\n      name: CHECKBOX_COMPONENT_NAME,\n      displayName: \"Aria Checkbox\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerCheckbox\",\n      importName: \"BaseCheckbox\",\n      variants,\n      props: {\n        ...getCommonProps<BaseCheckboxProps>(\"checkbox\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"aria-label\",\n          \"isRequired\",\n          \"autoFocus\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: makeDefaultCheckboxChildren({\n            label: \"Label\",\n            showDocs: true,\n          }),\n        },\n        value: {\n          type: \"string\",\n          description:\n            'The value of the checkbox in \"selected\" state, used when submitting an HTML form.',\n          defaultValueHint: 'Checked value (default: \"on\")',\n          validator: (_value, _props, ctx) => {\n            if (ctx?.idError) {\n              return ctx.idError;\n            }\n            return true;\n          },\n        },\n        isSelected: {\n          type: \"boolean\",\n          displayName: \"Default Selected\",\n          editOnly: true,\n          uncontrolledProp: \"defaultSelected\",\n          description: \"Whether the checkbox should be selected by default\",\n          defaultValueHint: false,\n          defaultValue: false,\n          hidden: hasParent,\n        },\n        isIndeterminate: {\n          displayName: \"Indeterminate\",\n          type: \"boolean\",\n          description:\n            \"This state indicates that the checkbox is neither fully checked nor unchecked. It typically represents a partial selection when dealing with groups of options. Some but not all items in the group are selected, resulting in an indeterminate state for the checkbox.\",\n          defaultValueHint: false,\n        },\n        isInvalid: {\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        validationBehavior: {\n          type: \"choice\",\n          options: [\"native\", \"aria\"],\n          description:\n            \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n          defaultValueHint: \"native\",\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isSelected\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isSelected: {\n          type: \"writable\",\n          valueProp: \"isSelected\",\n          onChangeProp: \"onChange\",\n          variableType: \"boolean\",\n          hidden: hasParent,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","type Observer = (ids: string[]) => void;\n\nexport class OptionsItemIdManager {\n  private readonly _ids: Set<string> = new Set();\n  private readonly _observers: Set<Observer> = new Set();\n\n  private generateDuplicateId(id: string, count = 1): string {\n    const dupId = `${id} duplicate(${count})`;\n    if (this._ids.has(dupId)) {\n      return this.generateDuplicateId(id, count + 1);\n    } else {\n      return dupId;\n    }\n  }\n\n  private generateMissingId(count = 1): string {\n    const missingId = `missing(${count})`;\n    if (this._ids.has(missingId)) {\n      return this.generateMissingId(count + 1);\n    } else {\n      return missingId;\n    }\n  }\n\n  register(id?: unknown): string {\n    const idStr = id === undefined ? undefined : String(id).trim();\n    let newId: string;\n\n    if (!idStr) {\n      // No id is provided, so generate one\n      newId = this.generateMissingId();\n    } else if (this._ids.has(idStr)) {\n      // The provided id is already registered with another uuid (i.e. it's not unique), so just generate a new one\n      newId = this.generateDuplicateId(idStr);\n    } else {\n      // The provided id is not already registered, so use it\n      newId = idStr;\n    }\n\n    this._ids.add(newId);\n    this.notify();\n    return newId;\n  }\n\n  unregister(id: string) {\n    this._ids.delete(id);\n    this.notify();\n  }\n\n  subscribe(observer: Observer) {\n    this._observers.add(observer);\n    observer(this.ids);\n  }\n\n  // Notify all observers about an event.\n  notify() {\n    this._observers.forEach((observer) => observer(this.ids));\n  }\n\n  get ids(): string[] {\n    return Array.from(this._ids);\n  }\n}\n","import React from \"react\";\nimport type { TextProps } from \"react-aria-components\";\nimport { Text } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  extractPlasmicDataProps,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport function BaseText({ children, slot, className, ...rest }: TextProps) {\n  return (\n    <Text\n      {...extractPlasmicDataProps(rest)}\n      slot={slot}\n      className={className}\n      style={COMMON_STYLES}\n    >\n      {children}\n    </Text>\n  );\n}\n\nexport const TEXT_COMPONENT_NAME = makeComponentName(\"text\");\n\nexport function registerText(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseText>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseText,\n    {\n      name: TEXT_COMPONENT_NAME,\n      displayName: \"Aria Text\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerText\",\n      importName: \"BaseText\",\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"text\",\n            value: \"Some text...\",\n          },\n        },\n        slot: {\n          type: \"choice\",\n          options: [\"label\", \"description\"],\n          defaultValueHint: \"label\",\n          defaultValue: \"label\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { BaseText, registerText } from \"./registerText\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n} from \"./utils\";\n\nexport const DESCRIPTION_COMPONENT_NAME = makeComponentName(\"description\");\n\nexport function registerDescription(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseText>\n) {\n  return registerText(loader, {\n    ...overrides,\n    name: DESCRIPTION_COMPONENT_NAME,\n    displayName: \"Aria Description\",\n    props: {\n      slot: {\n        type: \"string\",\n        hidden: () => true,\n        defaultValue: \"description\",\n      },\n    },\n  });\n}\n","import React from \"react\";\nimport { Label, LabelProps } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  extractPlasmicDataProps,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport function BaseLabel({ children, className, ...rest }: LabelProps) {\n  return (\n    <Label\n      {...extractPlasmicDataProps(rest)}\n      className={className}\n      style={COMMON_STYLES}\n    >\n      {children}\n    </Label>\n  );\n}\nexport const LABEL_COMPONENT_NAME = makeComponentName(\"label\");\n\nexport function registerLabel(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseLabel>\n) {\n  registerComponentHelper(\n    loader,\n    BaseLabel,\n    {\n      name: LABEL_COMPONENT_NAME,\n      displayName: \"Aria Label\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerLabel\",\n      importName: \"BaseLabel\",\n      defaultStyles: {\n        cursor: \"pointer\",\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"text\",\n            value: \"Label\",\n          },\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport type { CheckboxGroupProps } from \"react-aria-components\";\nimport { CheckboxGroup } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicCheckboxGroupContext } from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport {\n  CHECKBOX_COMPONENT_NAME,\n  makeDefaultCheckboxChildren,\n} from \"./registerCheckbox\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nexport interface BaseCheckboxControlContextData {\n  values: string[];\n}\n\nconst CHECKBOX_GROUP_VARIANTS = [\"disabled\" as const, \"readonly\" as const];\n\nexport interface BaseCheckboxGroupProps\n  extends CheckboxGroupProps,\n    HasControlContextData<BaseCheckboxControlContextData>,\n    WithVariants<typeof CHECKBOX_GROUP_VARIANTS> {\n  children?: React.ReactNode;\n}\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  CHECKBOX_GROUP_VARIANTS\n);\n\nexport function BaseCheckboxGroup(props: BaseCheckboxGroupProps) {\n  const { children, plasmicUpdateVariant, setControlContextData, ...rest } =\n    props;\n  const [ids, setIds] = useState<string[]>([]);\n  const idManager = useMemo(() => new OptionsItemIdManager(), []);\n\n  useEffect(() => {\n    setControlContextData?.({\n      values: ids,\n    });\n  }, [ids, setControlContextData]);\n\n  useEffect(() => {\n    idManager.subscribe((_ids: string[]) => {\n      setIds(_ids);\n    });\n  }, [idManager]);\n\n  return (\n    <PlasmicCheckboxGroupContext.Provider value={{ ...rest, idManager }}>\n      <CheckboxGroup {...rest} style={COMMON_STYLES}>\n        {({ isDisabled, isReadOnly }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </CheckboxGroup>\n    </PlasmicCheckboxGroupContext.Provider>\n  );\n}\n\nconst componentName = makeComponentName(\"checkboxGroup\");\n\nexport function registerCheckboxGroup(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseCheckboxGroup>\n) {\n  registerComponentHelper(\n    loader,\n    BaseCheckboxGroup,\n    {\n      name: componentName,\n      displayName: \"Aria Checkbox Group\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerCheckboxGroup\",\n      importName: \"BaseCheckboxGroup\",\n      variants,\n      props: {\n        ...getCommonProps<BaseCheckboxGroupProps>(\"checkbox group\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"aria-label\",\n          \"isRequired\",\n        ]),\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"vbox\",\n              styles: {\n                display: \"flex\",\n                gap: \"5px\",\n                padding: 0,\n                alignItems: \"flex-start\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Checkbox Group\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 1\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox1\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 2\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox2\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: CHECKBOX_COMPONENT_NAME,\n                  props: {\n                    children: makeDefaultCheckboxChildren({\n                      label: \"Checkbox 3\",\n                      showDocs: false,\n                    }),\n                    value: \"checkbox3\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: DESCRIPTION_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value:\n                        \"Use the registered variants to see it in action...\",\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n        value: {\n          type: \"choice\",\n          editOnly: true,\n          uncontrolledProp: \"defaultValue\",\n          description: \"The current value\",\n          options: (_props, ctx) => (ctx?.values ? Array.from(ctx.values) : []),\n          multiSelect: true,\n        },\n        isInvalid: {\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        validationBehavior: {\n          type: \"choice\",\n          options: [\"native\", \"aria\"],\n          description:\n            \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n          defaultValueHint: \"native\",\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"array\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { ChangeEvent, useCallback } from \"react\";\nimport { mergeProps } from \"react-aria\";\nimport type { InputProps, InputRenderProps } from \"react-aria-components\";\nimport { Input } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, resolveAutoComplete } from \"./common\";\nimport { PlasmicInputContext, PlasmicTextFieldContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst INPUT_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"hovered\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants } = pickAriaComponentVariants(INPUT_VARIANTS);\n\nexport interface BaseInputProps\n  extends Omit<InputProps, \"autoComplete\" | \"className\">,\n    HasControlContextData,\n    WithVariants<typeof INPUT_VARIANTS> {\n  autoComplete?: string[];\n  isUncontrolled?: boolean;\n  className?: string;\n}\n\nexport const inputHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: (e: ChangeEvent<HTMLInputElement>) => {\n        return e.target.value;\n      },\n    },\n  },\n};\n\nexport function BaseInput(props: BaseInputProps) {\n  const {\n    plasmicUpdateVariant,\n    setControlContextData,\n    autoComplete,\n    value,\n    className,\n    ...rest\n  } = props;\n  const textFieldContext = React.useContext(PlasmicTextFieldContext);\n  const context = React.useContext(PlasmicInputContext);\n\n  setControlContextData?.({\n    parent: textFieldContext,\n  });\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled,\n      isFocusVisible,\n      isFocused,\n      isHovered,\n    }: InputRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n        hovered: isHovered,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const mergedProps = mergeProps(rest, {\n    value: context?.isUncontrolled ? undefined : value,\n    autoComplete: resolveAutoComplete(autoComplete),\n    className: classNameProp,\n  });\n\n  return <Input {...mergedProps} style={COMMON_STYLES} />;\n}\n\nexport const INPUT_COMPONENT_NAME = makeComponentName(\"input\");\n\nexport function registerInput(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseInput>\n) {\n  registerComponentHelper(\n    loader,\n    BaseInput,\n    {\n      name: INPUT_COMPONENT_NAME,\n      displayName: \"Aria Input\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      importName: \"BaseInput\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        padding: \"4px 10px\",\n      },\n      props: {\n        ...getCommonProps<BaseInputProps>(\"Input\", [\n          \"name\",\n          \"disabled\",\n          \"readOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"required\",\n          \"placeholder\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"pattern\",\n          \"type\",\n          \"inputMode\",\n          \"autoComplete\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n          ...inputHelpers.states.value,\n        },\n      },\n\n      componentHelpers: {\n        helpers: inputHelpers,\n        importName: \"inputHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      },\n    },\n    overrides\n  );\n}\n","import { PlasmicElement } from \"@plasmicapp/host\";\nimport React, { useEffect, useState } from \"react\";\nimport { ListBox, ListBoxItem } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicListBoxContext } from \"./contexts\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { TEXT_COMPONENT_NAME } from \"./registerText\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst LIST_BOX_ITEM_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"selected\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  LIST_BOX_ITEM_VARIANTS\n);\n\nexport interface BaseListBoxControlContextData {\n  idError?: string;\n}\n\nexport interface BaseListBoxItemProps\n  extends React.ComponentProps<typeof ListBoxItem>,\n    HasControlContextData<BaseListBoxControlContextData>,\n    WithVariants<typeof LIST_BOX_ITEM_VARIANTS> {\n  id?: string;\n  children?: React.ReactNode;\n}\n\nexport function BaseListBoxItem(props: BaseListBoxItemProps) {\n  const { children, setControlContextData, plasmicUpdateVariant, id, ...rest } =\n    props;\n  const listboxContext = React.useContext(PlasmicListBoxContext);\n  const isStandalone = !listboxContext;\n  /**\n   * Ids of each listboxitem inside a listbox have to be unique. Otherwise, the items won't show up in the listbox.\n   * This is particularly important to ensure, because the most common use case would be to apply Repeat Element to the listbox item.\n   * The ids of each repeated item will initially be the same (until the user changes the id prop of the listboxitem).\n   *\n   * The registerId, therefore, is the unique id of the listboxitem.\n   * It is the id registered with the listbox context, so that it can auto-generate a unique id if it identifies a duplicate.\n   */\n  const [registeredId, setRegisteredId] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (!listboxContext) {\n      return;\n    }\n\n    const localId = listboxContext.idManager.register(id);\n    setRegisteredId(localId);\n\n    return () => {\n      listboxContext.idManager.unregister(localId);\n      setRegisteredId(undefined);\n    };\n  }, [id]);\n\n  setControlContextData?.({\n    idError: (() => {\n      if (id === undefined) {\n        return \"ID must be defined\";\n      }\n      if (typeof id !== \"string\") {\n        return \"ID must be a string\";\n      }\n      if (!id.trim()) {\n        return \"ID must be defined\";\n      }\n      if (!isStandalone && id != registeredId) {\n        return \"ID must be unique\";\n      }\n      return undefined;\n    })(),\n  });\n\n  const listboxItem = (\n    <ListBoxItem\n      key={registeredId}\n      id={registeredId}\n      {...rest}\n      style={COMMON_STYLES}\n    >\n      {({\n        isHovered,\n        isPressed,\n        isFocused,\n        isFocusVisible,\n        isSelected,\n        isDisabled,\n      }) =>\n        withObservedValues(\n          children,\n          {\n            hovered: isHovered,\n            pressed: isPressed,\n            focused: isFocused,\n            focusVisible: isFocusVisible,\n            selected: isSelected,\n            disabled: isDisabled,\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </ListBoxItem>\n  );\n\n  if (isStandalone) {\n    // selection mode needs to be single/multiple to be able to trigger hover state on it.\n    return <ListBox selectionMode=\"single\">{listboxItem}</ListBox>;\n  }\n\n  return listboxItem;\n}\n\nexport const makeDefaultListBoxItemChildren = (\n  label: string,\n  description?: string\n): PlasmicElement => ({\n  type: \"vbox\",\n  styles: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    gap: \"2px\",\n  },\n  children: [\n    {\n      type: \"component\",\n      name: TEXT_COMPONENT_NAME,\n      props: {\n        slot: \"label\",\n        children: {\n          type: \"text\",\n          styles: {\n            fontWeight: 500,\n          },\n          value: label,\n        },\n      },\n    },\n    {\n      type: \"component\",\n      name: DESCRIPTION_COMPONENT_NAME,\n      props: {\n        children: {\n          type: \"text\",\n          styles: {\n            color: \"#838383\",\n          },\n          value: description ?? `Some description for ${label}...`,\n        },\n      },\n    },\n  ],\n});\n\nexport function registerListBoxItem(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseListBoxItem>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseListBoxItem,\n    {\n      name: makeComponentName(\"item\"),\n      displayName: \"Aria ListBoxItem\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerListBoxItem\",\n      importName: \"BaseListBoxItem\",\n      variants,\n      props: {\n        id: {\n          type: \"string\",\n          description: \"A unique value for tracking the selected item in state\",\n          required: true,\n          displayName: \"Value\",\n          validator: (_value, _props, ctx) => {\n            if (ctx?.idError) {\n              return ctx.idError;\n            }\n            return true;\n          },\n        },\n        textValue: {\n          type: \"string\",\n          displayName: \"Label\",\n          description:\n            \"A user-friendly text representation of the item's contents, used for features like typeahead.\",\n        },\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: makeDefaultListBoxItemChildren(\"Item\"),\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React from \"react\";\nimport { Header, Section } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicListBoxContext } from \"./contexts\";\nimport { BaseListBox } from \"./registerListBox\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n  Styleable,\n} from \"./utils\";\n\nexport interface BaseSectionProps extends Styleable {\n  items: React.ReactNode;\n  header: React.ReactNode;\n}\n\nexport function BaseSection(props: BaseSectionProps) {\n  const { header, items, ...rest } = props;\n  const contextProps = React.useContext(PlasmicListBoxContext);\n  const isStandalone = !contextProps;\n\n  const section = (\n    <Section {...rest} style={COMMON_STYLES}>\n      <Header>{header}</Header>\n      {items}\n    </Section>\n  );\n\n  if (isStandalone) {\n    return (\n      // BaseListbox should give section a listbox context (that it can't be used without)\n      // as well as the id manager (that is needed to identify and warn about duplication of ids)\n      // selection mode needs to be single/multiple to be able to trigger hover state on it.\n      <BaseListBox selectionMode=\"single\">{section}</BaseListBox>\n    );\n  }\n\n  return section;\n}\n\nexport function registerSection(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSection>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseSection,\n    {\n      name: makeComponentName(\"section\"),\n      displayName: \"Aria Section\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSection\",\n      importName: \"BaseSection\",\n      defaultStyles: {\n        width: \"stretch\",\n        padding: \"10px\",\n      },\n      props: {\n        header: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"text\",\n              value: \"Section Header.\",\n            },\n          ],\n        },\n        items: {\n          type: \"slot\",\n          mergeWithParent: true,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Key, ListBox, ListBoxRenderProps } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicListBoxContext } from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport {\n  makeDefaultListBoxItemChildren,\n  registerListBoxItem,\n} from \"./registerListBoxItem\";\nimport { registerSection } from \"./registerSection\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nexport interface BaseListBoxControlContextData {\n  itemIds: string[];\n  isStandalone: boolean;\n}\n\nconst LISTBOX_VARIANTS = [\"focused\" as const, \"focusVisible\" as const];\n\nconst { variants } = pickAriaComponentVariants(LISTBOX_VARIANTS);\n\nexport interface BaseListBoxProps\n  extends Omit<\n      React.ComponentProps<typeof ListBox>,\n      \"selectedKeys\" | \"defaultSelectedKeys\" | \"className\"\n    >,\n    HasControlContextData<BaseListBoxControlContextData>,\n    WithVariants<typeof LISTBOX_VARIANTS> {\n  children?: React.ReactNode;\n  selectedKeys?: string | string[] | undefined;\n  defaultSelectedKeys?: string | string[] | undefined;\n  className?: string;\n}\n\nexport const listboxHelpers = {\n  states: {\n    selectedValue: {\n      onChangeArgsToValue: (value: Set<Key> | string[] | string) => {\n        // only single selection is supported\n        return Array.from(value)[0];\n      },\n    },\n  },\n};\n\nfunction normalizeSelectedKeys(selectedKeys: string | string[] | undefined) {\n  // Listbox expects it to be of type \"all\" | Iterable\n  return typeof selectedKeys === \"string\" && selectedKeys !== \"all\"\n    ? [selectedKeys]\n    : selectedKeys;\n}\n\nexport function BaseListBox(props: BaseListBoxProps) {\n  const {\n    setControlContextData: setControlContextData,\n    children,\n    className,\n    selectedKeys,\n    defaultSelectedKeys,\n    plasmicUpdateVariant,\n    ...rest\n  } = props;\n  const context = React.useContext(PlasmicListBoxContext);\n  const isStandalone = !context;\n  const [ids, setIds] = useState<string[]>([]);\n  const idManager = useMemo(\n    () => context?.idManager ?? new OptionsItemIdManager(),\n    []\n  );\n\n  useEffect(() => {\n    setControlContextData?.({\n      itemIds: ids,\n      isStandalone,\n    });\n  }, [ids, isStandalone, setControlContextData]);\n\n  useEffect(() => {\n    idManager.subscribe((_ids: string[]) => {\n      setIds(_ids);\n    });\n  }, []);\n\n  const classNameProp = useCallback(\n    ({ isFocusVisible, isFocused }: ListBoxRenderProps) => {\n      plasmicUpdateVariant?.({\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const listbox = (\n    <ListBox\n      selectedKeys={normalizeSelectedKeys(selectedKeys)}\n      defaultSelectedKeys={normalizeSelectedKeys(defaultSelectedKeys)}\n      className={classNameProp}\n      style={COMMON_STYLES}\n      {...rest}\n    >\n      {children}\n    </ListBox>\n  );\n\n  if (isStandalone) {\n    return (\n      <PlasmicListBoxContext.Provider\n        value={{\n          idManager,\n        }}\n      >\n        {listbox}\n      </PlasmicListBoxContext.Provider>\n    );\n  }\n\n  return listbox;\n}\n\nexport const LIST_BOX_COMPONENT_NAME = makeComponentName(\"listbox\");\n\nexport function registerListBox(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseListBox>\n) {\n  const listBoxItemMeta = registerListBoxItem(loader, {\n    parentComponentName: LIST_BOX_COMPONENT_NAME,\n  });\n  const sectionMeta = registerSection(loader, {\n    parentComponentName: LIST_BOX_COMPONENT_NAME,\n    props: {\n      items: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-1\",\n              textValue: \"Section1-Item 1\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 1\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-2\",\n              textValue: \"Section1-Item 2\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 2\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n          {\n            type: \"component\",\n            name: listBoxItemMeta.name,\n            props: {\n              id: \"section-1-3\",\n              textValue: \"Section1-Item 3\",\n              children: [\n                makeDefaultListBoxItemChildren(\n                  \"Item 3\",\n                  \"Add dynamic values to make it more interesting\"\n                ),\n              ],\n            },\n          },\n        ],\n      },\n    },\n  });\n\n  registerComponentHelper(\n    loader,\n    BaseListBox,\n    {\n      name: LIST_BOX_COMPONENT_NAME,\n      displayName: \"Aria ListBox\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerListBox\",\n      importName: \"BaseListBox\",\n      variants,\n      defaultStyles: {\n        width: \"250px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          displayName: \"List Items\",\n          allowedComponents: [listBoxItemMeta.name, sectionMeta.name],\n          allowRootWrapper: true,\n          defaultValue: [\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"1\",\n                textValue: \"Item 1\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 1\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"2\",\n                textValue: \"Item 2\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 2\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: listBoxItemMeta.name,\n              props: {\n                id: \"3\",\n                textValue: \"Item 3\",\n                children: [\n                  makeDefaultListBoxItemChildren(\n                    \"Item 3\",\n                    \"Add dynamic values to make it more interesting\"\n                  ),\n                ],\n              },\n            },\n            {\n              type: \"component\",\n              name: sectionMeta.name,\n            },\n          ],\n        },\n        selectionMode: {\n          type: \"choice\",\n          description: \"The selection mode of the listbox\",\n          options: [\"none\", \"single\"],\n          defaultValue: \"none\",\n          hidden: (_props, ctx) => !ctx?.isStandalone,\n        },\n        selectedKeys: {\n          type: \"choice\",\n          editOnly: true,\n          uncontrolledProp: \"defaultSelectedKeys\",\n          displayName: \"Initial selected item\",\n          options: (_props, ctx) =>\n            ctx?.itemIds ? Array.from(ctx.itemIds) : [],\n          hidden: (props, ctx) =>\n            !ctx?.isStandalone || props.selectionMode === \"none\",\n          // We do not support multiple selections yet (Because React Aria select and combobox only support single selections).\n          multiSelect: false,\n        },\n        onSelectionChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"selectedValues\", type: \"object\" }],\n        },\n      },\n      states: {\n        selectedValue: {\n          type: \"writable\",\n          valueProp: \"selectedKeys\",\n          hidden: (props, ctx) =>\n            !ctx?.isStandalone || props.selectionMode === \"none\",\n          onChangeProp: \"onSelectionChange\",\n          variableType: \"text\",\n          ...listboxHelpers.states.selectedValue,\n        },\n      },\n      componentHelpers: {\n        helpers: listboxHelpers,\n        importName: \"listboxHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerListBox\",\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport React, { useEffect } from \"react\";\nimport { Popover, PopoverContext } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonOverlayProps } from \"./common\";\nimport { PlasmicPopoverTriggerContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\n/*\n    NOTE: Placement should be managed as variants, not just props.\n    When `shouldFlip` is true, the placement prop may not represent the final position\n    (e.g., if placement is set to \"bottom\" but lacks space, the popover may flip to \"top\").\n    However, data-selectors will consistently indicate the actual placement of the popover.\n  */\nconst POPOVER_VARIANTS = [\n  \"placementTop\" as const,\n  \"placementBottom\" as const,\n  \"placementLeft\" as const,\n  \"placementRight\" as const,\n];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(POPOVER_VARIANTS);\n\nexport interface BasePopoverControlContextData {\n  canMatchTriggerWidth?: boolean;\n}\nexport interface BasePopoverProps\n  extends React.ComponentProps<typeof Popover>,\n    WithVariants<typeof POPOVER_VARIANTS>,\n    HasControlContextData<BasePopoverControlContextData> {\n  className?: string;\n  resetClassName?: string;\n  children?: React.ReactNode;\n  matchTriggerWidth?: boolean;\n}\n\nexport function BasePopover(props: BasePopoverProps) {\n  const {\n    resetClassName,\n    plasmicUpdateVariant,\n    setControlContextData,\n    matchTriggerWidth,\n    ...restProps\n  } = props;\n  // Popover can be inside DialogTrigger, Select, Combobox, etc. So we can't just use a particular context like DialogTrigger (like we do in Modal) to decide if it is standalone\n  const isStandalone = !React.useContext(PopoverContext);\n  const hasTrigger = !!React.useContext(PlasmicPopoverTriggerContext);\n  const triggerRef = React.useRef<any>(null);\n  const canvasContext = usePlasmicCanvasContext();\n  const matchTriggerWidthProp = hasTrigger && matchTriggerWidth;\n\n  /*\n    We only want to trap focus if:\n   1. The popover is NOT in canvas (because while the dialog is open on the canvas, the focus is trapped inside it, so any Studio modals like the Color Picker modal would glitch due to focus jumping back and forth)\n   2. The popover is NOT standalone or inside a Select/Combobox (focus trapping is already handled in Select/Combobox). A way to identify this is by the presence of a DialogTrigger context.\n */\n  const { children, ...mergedProps } = mergeProps(\n    {\n      // isNonModal: Whether the popover is non-modal, i.e. elements outside the popover may be interacted with by assistive technologies.\n      // Setting isNonModal to true in edit mode (canvas) means that the popover will not prevent the user from interacting with the canvas while the popover is open.\n      isNonModal: canvasContext && !canvasContext.interactive,\n    },\n    restProps,\n    { className: `${resetClassName}` },\n    // Override some props if the popover is standalone\n    isStandalone\n      ? {\n          triggerRef,\n          isNonModal: true,\n          // Always true, because we assume that popover is always going to be controlled by a parent like Select, Combobox, DialogTrigger, etc, and its only really standalone in component view\n          // In component view, we never want to start with an empty artboard, so isOpen has to be true\n          isOpen: true,\n        }\n      : null\n  );\n\n  useEffect(() => {\n    setControlContextData?.({\n      canMatchTriggerWidth: hasTrigger,\n    });\n  }, [hasTrigger, setControlContextData]);\n\n  return (\n    <>\n      {isStandalone && <div ref={triggerRef} />}\n      <Popover\n        // more about `--trigger-width` here: https://react-spectrum.adobe.com/react-aria/Select.html#popover-1\n        style={{\n          ...(matchTriggerWidthProp ? { width: `var(--trigger-width)` } : {}),\n          ...COMMON_STYLES,\n        }}\n        {...mergedProps}\n      >\n        {({ placement }) =>\n          withObservedValues(\n            children,\n            {\n              placementTop: placement === \"top\",\n              placementBottom: placement === \"bottom\",\n              placementLeft: placement === \"left\",\n              placementRight: placement === \"right\",\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Popover>\n    </>\n  );\n}\n\nexport const POPOVER_COMPONENT_NAME = makeComponentName(\"popover\");\n\nexport function registerPopover(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BasePopover>\n) {\n  registerComponentHelper(\n    loader,\n    BasePopover,\n    {\n      name: POPOVER_COMPONENT_NAME,\n      displayName: \"Aria Popover\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerPopover\",\n      importName: \"BasePopover\",\n      variants,\n      defaultStyles: {\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        width: \"300px\",\n        backgroundColor: \"#FDE3C3\",\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"vbox\",\n              styles: {\n                width: \"stretch\",\n                padding: \"20px\",\n                rowGap: \"10px\",\n              },\n              children: [\n                {\n                  type: \"text\",\n                  value: \"This is a Popover!\",\n                },\n                {\n                  type: \"text\",\n                  value: \"You can put anything you can imagine here!\",\n                  styles: {\n                    fontWeight: 500,\n                  },\n                },\n                {\n                  type: \"text\",\n                  value:\n                    \"Use it in a `Aria Dialog Trigger` component to trigger it on a button click!\",\n                },\n              ],\n            },\n          ],\n        },\n        shouldFlip: {\n          type: \"boolean\",\n          description:\n            \"Whether the element should flip its orientation (e.g. top to bottom or left to right) when there is insufficient room for it to render completely.\",\n          defaultValueHint: true,\n        },\n\n        resetClassName: {\n          type: \"themeResetClass\",\n        },\n        matchTriggerWidth: {\n          type: \"boolean\",\n          defaultValue: true,\n          hidden: (_props, ctx) => !ctx?.canMatchTriggerWidth,\n        },\n        ...getCommonOverlayProps<BasePopoverProps>(\"popover\", {\n          placement: { defaultValueHint: \"bottom\" },\n          offset: { defaultValueHint: 8 },\n          containerPadding: { defaultValueHint: 12 },\n          crossOffset: { defaultValueHint: 0 },\n        }),\n      },\n      // No isOpen state for popover, because we assume that its open state is always going to be controlled by a parent like Select, Combobox, DialogTrigger, etc.\n      styleSections: true,\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport {\n  ComboBox,\n  ComboBoxProps,\n  ComboBoxRenderProps,\n  ComboBoxStateContext,\n} from \"react-aria-components\";\nimport { arrowDown, COMMON_STYLES, getCommonProps } from \"./common\";\nimport {\n  PlasmicInputContext,\n  PlasmicListBoxContext,\n  PlasmicPopoverTriggerContext,\n} from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport { BUTTON_COMPONENT_NAME } from \"./registerButton\";\nimport { INPUT_COMPONENT_NAME } from \"./registerInput\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { LIST_BOX_COMPONENT_NAME } from \"./registerListBox\";\nimport { POPOVER_COMPONENT_NAME } from \"./registerPopover\";\nimport {\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n  useAutoOpen,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst COMBOBOX_NAME = makeComponentName(\"combobox\");\n\nexport interface BaseComboboxControlContextData {\n  itemIds: string[];\n}\n\nconst COMBOBOX_VARIANTS = [\"disabled\" as const];\n\nconst { variants: COMBOBOX_VARIANTS_DATA } =\n  pickAriaComponentVariants(COMBOBOX_VARIANTS);\n\nexport interface BaseComboboxProps\n  extends ComboBoxProps<{}>,\n    WithVariants<typeof COMBOBOX_VARIANTS>,\n    HasControlContextData<BaseComboboxControlContextData> {\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  className?: string;\n}\n\n/*\n  This React Hook is used to help with auto-opening the combobox when the canvas component is selected.\n  Currently, there is a bug in react-aria combobox (https://github.com/adobe/react-spectrum/issues/7149) where, when the combobox's popover is auto-opened, it is unable to render any listbox items.\n  Setting popover's open state to true in not enough unless, unless it has previously been opened via user interaction with combobox.\n  Also, <Combobox> does not support an `isOpen` prop either.\n\n  So, we use this custom hook to access the combobox's internal state via ComboBoxStateContext and change the `open` state manually via tha available `open` method.\n\n  Note: It cannot be used as a hook like useAutoOpen() within the BaseSelect component\n  because it needs access to SelectStateContext, which is only created in the BaseSelect component's render function.\n  */\nfunction ComboboxAutoOpen(props: any) {\n  const { open, close } = React.useContext(ComboBoxStateContext) ?? {};\n\n  useAutoOpen({ props, open, close });\n\n  return null;\n}\n\nexport function BaseComboBox(props: BaseComboboxProps) {\n  const {\n    children,\n    setControlContextData,\n    plasmicUpdateVariant,\n    className,\n    isOpen: _isOpen, // uncontrolled if not selected in canvas/edit mode\n    ...rest\n  } = props;\n\n  const classNameProp = useCallback(\n    ({ isDisabled }: ComboBoxRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const idManager = useMemo(() => new OptionsItemIdManager(), []);\n\n  useEffect(() => {\n    idManager.subscribe((ids: string[]) => {\n      setControlContextData?.({\n        itemIds: ids,\n      });\n    });\n  }, []);\n\n  return (\n    <ComboBox className={classNameProp} {...rest} style={COMMON_STYLES}>\n      <PlasmicPopoverTriggerContext.Provider value={true}>\n        <PlasmicListBoxContext.Provider\n          value={{\n            idManager,\n          }}\n        >\n          <PlasmicInputContext.Provider value={{ isUncontrolled: true }}>\n            <ComboboxAutoOpen {...props} />\n            {children}\n          </PlasmicInputContext.Provider>\n        </PlasmicListBoxContext.Provider>\n      </PlasmicPopoverTriggerContext.Provider>\n    </ComboBox>\n  );\n}\n\nexport function registerComboBox(loader?: Registerable) {\n  registerComponentHelper(loader, BaseComboBox, {\n    name: COMBOBOX_NAME,\n    displayName: \"Aria ComboBox\",\n    importPath: \"@plasmicpkgs/react-aria/skinny/registerComboBox\",\n    importName: \"BaseComboBox\",\n    variants: COMBOBOX_VARIANTS_DATA,\n    props: {\n      ...getCommonProps<BaseComboboxProps>(\"ComboBox\", [\n        \"name\",\n        \"aria-label\",\n        \"isDisabled\",\n      ]),\n      selectedKey: {\n        type: \"choice\",\n        editOnly: true,\n        uncontrolledProp: \"defaultSelectedKey\",\n        displayName: \"Initial selected item\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        // React Aria ComboBox do not support multiple selections yet\n        multiSelect: false,\n      },\n      disabledKeys: {\n        type: \"choice\",\n        displayName: \"Disabled values\",\n        description:\n          \"The items that are disabled. These items cannot be selected, focused, or otherwise interacted with.\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        multiSelect: true,\n        advanced: true,\n      },\n      isOpen: {\n        type: \"boolean\",\n        defaultValue: false,\n        // It doesn't make sense to make isOpen prop editable (it's controlled by user interaction and always closed by default), so we keep this prop hidden. We have listed the prop here in the meta only so we can expose a writeable state for it.\n        hidden: () => true,\n      },\n      onSelectionChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"selectedValue\", type: \"string\" }],\n      },\n      onOpenChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n      },\n\n      children: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"vbox\",\n            styles: {\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              width: \"300px\",\n              padding: 0,\n            },\n            children: [\n              {\n                type: \"component\",\n                name: LABEL_COMPONENT_NAME,\n                props: {\n                  children: {\n                    type: \"text\",\n                    value: \"Label\",\n                  },\n                },\n              },\n              {\n                type: \"hbox\",\n                styles: {\n                  padding: 0,\n                },\n                children: [\n                  {\n                    type: \"component\",\n                    name: INPUT_COMPONENT_NAME,\n                    styles: {\n                      width: \"100%\",\n                      borderRightWidth: 0,\n                    },\n                  },\n                  {\n                    type: \"component\",\n                    name: BUTTON_COMPONENT_NAME,\n                    props: {\n                      children: arrowDown,\n                    },\n                  },\n                ],\n              },\n              {\n                type: \"component\",\n                name: POPOVER_COMPONENT_NAME,\n                styles: {\n                  backgroundColor: \"white\",\n                  padding: \"10px\",\n                  overflow: \"scroll\",\n                  width: \"unset\",\n                },\n                props: {\n                  offset: 0,\n                  children: [\n                    {\n                      type: \"component\",\n                      name: LIST_BOX_COMPONENT_NAME,\n                      props: {\n                        selectionMode: \"single\",\n                      },\n                      styles: {\n                        borderWidth: 0,\n                        width: \"stretch\",\n                      },\n                    },\n                  ],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    states: {\n      selectedValue: {\n        type: \"writable\",\n        valueProp: \"selectedKey\",\n        onChangeProp: \"onSelectionChange\",\n        variableType: \"text\",\n      },\n      isOpen: {\n        type: \"writable\",\n        valueProp: \"isOpen\",\n        onChangeProp: \"onOpenChange\",\n        variableType: \"boolean\",\n      },\n    },\n    trapsFocus: true,\n  });\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { Dialog, DialogProps } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport interface BaseDialogProps extends DialogProps {\n  children: React.ReactNode;\n}\n\nexport function BaseDialog({ children, className }: BaseDialogProps) {\n  const canvasContext = usePlasmicCanvasContext();\n\n  if (canvasContext) {\n    /* <Dialog> cannot be used in canvas, because while the dialog is open on the canvas, the focus is trapped inside it, so any Studio modals like the Color Picker modal would glitch due to focus jumping back and forth */\n    return (\n      <div className={className} style={COMMON_STYLES}>\n        {children}\n      </div>\n    );\n  } else {\n    return (\n      <Dialog className={className} style={COMMON_STYLES}>\n        {children}\n      </Dialog>\n    );\n  }\n}\n\nexport const DIALOG_COMPONENT_NAME = makeComponentName(\"dialog\");\n\nexport function registerDialog(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseDialog>\n) {\n  registerComponentHelper(\n    loader,\n    BaseDialog,\n    {\n      name: DIALOG_COMPONENT_NAME,\n      displayName: \"Aria Dialog\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerDialog\",\n      importName: \"BaseDialog\",\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import {\n  PlasmicElement,\n  usePlasmicCanvasComponentInfo,\n  usePlasmicCanvasContext,\n} from \"@plasmicapp/host\";\nimport React, { forwardRef, useImperativeHandle } from \"react\";\nimport { mergeProps } from \"react-aria\";\nimport { Modal, ModalOverlay, ModalOverlayProps } from \"react-aria-components\";\nimport { hasParent } from \"./common\";\nimport { PlasmicDialogTriggerContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport interface BaseModalProps\n  extends ModalOverlayProps,\n    HasControlContextData {\n  heading: React.ReactNode;\n  modalOverlayClass: string;\n  resetClassName?: string;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport interface BaseModalActions {\n  close(): void;\n  open(): void;\n}\n\nexport const BaseModal = forwardRef<BaseModalActions, BaseModalProps>(\n  function BaseModalInner(props, ref) {\n    const {\n      children,\n      modalOverlayClass,\n      className,\n      isOpen,\n      resetClassName,\n      setControlContextData,\n      isDismissable,\n      ...rest\n    } = props;\n\n    const canvasCtx = usePlasmicCanvasContext();\n    const isEditMode = canvasCtx && canvasCtx.interactive === false;\n    const isSelected =\n      usePlasmicCanvasComponentInfo?.(props)?.isSelected ?? false;\n\n    const contextProps = React.useContext(PlasmicDialogTriggerContext);\n    const isStandalone = !contextProps;\n    const mergedProps = mergeProps(contextProps, rest, {\n      isOpen: isStandalone ? isSelected || isOpen : contextProps.isOpen,\n      /*\n        isDismissable on canvas (non-interactive mode) causes the following two issues:\n        1. Clicking anywhere inside the modal dismisses it\n        2. If the modal is auto-opened due to selection in outline tab, the modal stays open despite issue #1, but the text elements inside the modal are no longer selectable, and therefore the text or headings inside the modal are not editable.\n\n        To fix the above issue, we set an interim isDismissable state to false in edit mode, because it only matters in interactive mode.\n      */\n      isDismissable: isEditMode ? false : isDismissable,\n    });\n\n    setControlContextData?.({\n      parent: isStandalone ? undefined : {},\n    });\n\n    // Expose close operation using useImperativeHandle\n    useImperativeHandle(ref, () => ({\n      close: () => {\n        mergedProps.onOpenChange?.(false);\n      },\n      open: () => {\n        mergedProps.onOpenChange?.(true);\n      },\n    }));\n\n    return (\n      <ModalOverlay\n        {...mergedProps}\n        className={`${resetClassName} ${modalOverlayClass}`}\n      >\n        <Modal className={className}>{children}</Modal>\n      </ModalOverlay>\n    );\n  }\n);\n\nexport const MODAL_COMPONENT_NAME = makeComponentName(\"modal\");\n\nexport const MODAL_DEFAULT_SLOT_CONTENT: PlasmicElement = {\n  type: \"vbox\",\n  styles: {\n    width: \"stretch\",\n    padding: 0,\n    gap: \"10px\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n  },\n  children: [\n    {\n      type: \"text\",\n      value: \"Heading\",\n      tag: \"h2\",\n    },\n    {\n      type: \"text\",\n      value: \"This is a Modal!\",\n    },\n    {\n      type: \"text\",\n      value: \"You can put anything you can imagine here!\",\n      styles: {\n        fontWeight: 500,\n      },\n    },\n    {\n      type: \"text\",\n      value:\n        \"Use it in a `Aria Dialog Trigger` component to trigger it on a button click!\",\n    },\n  ],\n};\n\nexport function registerModal(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseModal>\n) {\n  registerComponentHelper(\n    loader,\n    BaseModal,\n    {\n      name: MODAL_COMPONENT_NAME,\n      displayName: \"Aria Modal\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerModal\",\n      importName: \"BaseModal\",\n      styleSections: true,\n      defaultStyles: {\n        // centering the modal on the page by default\n        position: \"fixed\",\n        top: \"10%\",\n        left: \"50%\",\n        width: \"50%\",\n        transform: \"translateX(-50%)\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        padding: \"20px\",\n        maxWidth: \"300px\",\n        backgroundColor: \"#FDE3C3\",\n      },\n      refActions: {\n        open: {\n          description: \"Open the modal\",\n          argTypes: [],\n        },\n        close: {\n          description: \"Close the modal\",\n          argTypes: [],\n        },\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: MODAL_DEFAULT_SLOT_CONTENT,\n        },\n        modalOverlayClass: {\n          type: \"class\",\n          displayName: \"Modal Overlay\",\n        },\n        isOpen: {\n          type: \"boolean\",\n          editOnly: true,\n          uncontrolledProp: \"defaultOpen\",\n          defaultValueHint: true,\n          defaultValue: true,\n          hidden: hasParent,\n        },\n        isDismissable: {\n          type: \"boolean\",\n          description:\n            \"Whether to close the modal when the user interacts outside it.\",\n        },\n        isKeyboardDismissDisabled: {\n          type: \"boolean\",\n          description:\n            \"Whether pressing the escape key to close the modal should be disabled.\",\n        },\n        onOpenChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n        },\n        resetClassName: {\n          type: \"themeResetClass\",\n        },\n      },\n      states: {\n        isOpen: {\n          type: \"writable\",\n          valueProp: \"isOpen\",\n          onChangeProp: \"onOpenChange\",\n          variableType: \"boolean\",\n          hidden: hasParent,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { usePlasmicCanvasComponentInfo } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { DialogTrigger } from \"react-aria-components\";\nimport { PlasmicDialogTriggerContext } from \"./contexts\";\nimport { BUTTON_COMPONENT_NAME } from \"./registerButton\";\nimport { DIALOG_COMPONENT_NAME } from \"./registerDialog\";\nimport {\n  MODAL_COMPONENT_NAME,\n  MODAL_DEFAULT_SLOT_CONTENT,\n} from \"./registerModal\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport interface BaseDialogTriggerProps\n  extends React.ComponentProps<typeof DialogTrigger> {\n  trigger?: React.ReactNode;\n  dialog?: React.ReactNode;\n}\n\nexport function BaseDialogTrigger(props: BaseDialogTriggerProps) {\n  const { trigger, dialog, isOpen, ...rest } = props;\n\n  const { isSelected, selectedSlotName } =\n    usePlasmicCanvasComponentInfo?.(props) ?? {};\n  const isAutoOpen = selectedSlotName !== \"trigger\" && isSelected;\n\n  const mergedProps = {\n    ...rest,\n    isOpen: (isAutoOpen || isOpen) ?? false,\n  };\n\n  return (\n    <PlasmicDialogTriggerContext.Provider value={mergedProps}>\n      <DialogTrigger {...mergedProps}>\n        {trigger}\n        {dialog}\n      </DialogTrigger>\n    </PlasmicDialogTriggerContext.Provider>\n  );\n}\n\nexport function registerDialogTrigger(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseDialogTrigger>\n) {\n  registerComponentHelper(\n    loader,\n    BaseDialogTrigger,\n    {\n      name: makeComponentName(\"dialogTrigger\"),\n      displayName: \"Aria Dialog Trigger\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerDialogTrigger\",\n      importName: \"BaseDialogTrigger\",\n      styleSections: false,\n      props: {\n        trigger: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"component\",\n            name: BUTTON_COMPONENT_NAME,\n            props: {\n              children: {\n                type: \"text\",\n                value: \"Open Dialog\",\n              },\n            },\n          },\n        },\n        dialog: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"component\",\n              name: MODAL_COMPONENT_NAME,\n              props: {\n                children: {\n                  type: \"component\",\n                  name: DIALOG_COMPONENT_NAME,\n                  props: {\n                    children: MODAL_DEFAULT_SLOT_CONTENT,\n                  },\n                },\n              },\n            },\n          ],\n        },\n        isOpen: {\n          type: \"boolean\",\n          defaultValueHint: false,\n          editOnly: true,\n          uncontrolledProp: \"defaultOpen\",\n        },\n        onOpenChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isOpen: {\n          type: \"writable\",\n          valueProp: \"isOpen\",\n          onChangeProp: \"onOpenChange\",\n          variableType: \"boolean\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React from \"react\";\nimport type { HeadingProps } from \"react-aria-components\";\nimport { Heading } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\n\nexport function BaseHeading({ children, ...rest }: HeadingProps) {\n  return (\n    <Heading {...rest} style={COMMON_STYLES}>\n      {children}\n    </Heading>\n  );\n}\n\nconst HEADING_COMPONENT_NAME = makeComponentName(\"heading\");\n\n/** @deprecated Use Plasmic's built-in `Text` component instead */\nexport function registerHeading(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseHeading>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseHeading,\n    {\n      name: HEADING_COMPONENT_NAME,\n      displayName: \"Aria Heading (deprecated)\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerHeading\",\n      importName: \"BaseHeading\",\n      defaultStyles: {\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n        marginBottom: \"10px\",\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"text\",\n            value: \"Heading\",\n          },\n        },\n        slot: {\n          type: \"string\",\n          defaultValue: \"title\",\n          hidden: () => true,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React from \"react\";\nimport type {\n  OverlayArrowProps,\n  OverlayArrowRenderProps,\n} from \"react-aria-components\";\nimport {\n  OverlayArrow,\n  PopoverContext,\n  TooltipContext,\n} from \"react-aria-components\";\nimport { arrowDown, COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst OVERLAY_ARROW_VARIANTS = [\n  // We do not offer a placementDown variant, because that's the default placement (an overlay arrow always has [data-placement=bottom] if it's not explicitly set)\n  \"placementTop\" as const,\n  \"placementLeft\" as const,\n  \"placementRight\" as const,\n];\n\nexport interface BaseOverlayArrowProps\n  extends OverlayArrowProps,\n    WithVariants<typeof OVERLAY_ARROW_VARIANTS> {\n  children: React.ReactNode;\n}\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  OVERLAY_ARROW_VARIANTS\n);\n\nexport function BaseOverlayArrow({\n  children,\n  plasmicUpdateVariant,\n  className,\n}: BaseOverlayArrowProps) {\n  const popoverContext = React.useContext(PopoverContext);\n  const tooltipContext = React.useContext(TooltipContext);\n  const isStandalone = !popoverContext && !tooltipContext; // i.e. without a trigger to point to\n  const overlayArrow = (\n    <OverlayArrow\n      style={{ lineHeight: \"0\", ...COMMON_STYLES }}\n      className={className}\n    >\n      {({ placement }: OverlayArrowRenderProps) =>\n        withObservedValues(\n          children,\n          {\n            placementTop: placement === \"top\",\n            placementLeft: placement === \"left\",\n            placementRight: placement === \"right\",\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </OverlayArrow>\n  );\n  if (isStandalone) {\n    return <div style={{ position: \"relative\" }}>{overlayArrow}</div>;\n  }\n  return overlayArrow;\n}\n\nexport const OVERLAY_ARROW_COMPONENT_NAME = makeComponentName(\"overlayArrow\");\n\nexport function registerOverlayArrow(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseOverlayArrow>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseOverlayArrow,\n    {\n      name: OVERLAY_ARROW_COMPONENT_NAME,\n      displayName: \"Aria Overlay Arrow\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerOverlayArrow\",\n      importName: \"BaseOverlayArrow\",\n      styleSections: false,\n      variants,\n      props: {\n        children: {\n          type: \"slot\",\n          defaultValue: arrowDown,\n        },\n      },\n    },\n    overrides\n  );\n}\n","import { PlasmicElement } from \"@plasmicapp/host\";\nimport React, { useEffect, useState } from \"react\";\nimport type { RadioProps } from \"react-aria-components\";\nimport { Radio, RadioGroup } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicRadioGroupContext } from \"./contexts\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport {\n  BaseControlContextData,\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst RADIO_VARIANTS = [\n  \"selected\" as const,\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n  \"readonly\" as const,\n  \"selected\" as const,\n];\n\nexport interface BaseRadioControlContextData extends BaseControlContextData {\n  idError?: string;\n}\n\nexport interface BaseRadioProps\n  extends RadioProps,\n    HasControlContextData<BaseRadioControlContextData>,\n    WithVariants<typeof RADIO_VARIANTS> {\n  children: React.ReactNode;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(RADIO_VARIANTS);\n\nexport function BaseRadio(props: BaseRadioProps) {\n  const {\n    children,\n    setControlContextData,\n    plasmicUpdateVariant,\n    value,\n    ...rest\n  } = props;\n  const contextProps = React.useContext(PlasmicRadioGroupContext);\n  const isStandalone = !contextProps;\n  const [registeredId, setRegisteredId] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (!contextProps?.idManager) {\n      return;\n    }\n\n    const localId = contextProps.idManager.register(value);\n    setRegisteredId(localId);\n\n    return () => {\n      contextProps.idManager.unregister(localId);\n      setRegisteredId(\"\");\n    };\n  }, [value, contextProps?.idManager]);\n\n  setControlContextData?.({\n    parent: contextProps,\n    idError: (() => {\n      if (value === undefined) {\n        return \"Value must be defined\";\n      }\n      if (typeof value !== \"string\") {\n        return \"Value must be a string\";\n      }\n      if (!value.trim()) {\n        return \"Value must be defined\";\n      }\n      if (!isStandalone && value != registeredId) {\n        return \"Value must be unique\";\n      }\n      return undefined;\n    })(),\n  });\n\n  const radio = (\n    <Radio\n      {...rest}\n      value={registeredId}\n      key={registeredId}\n      style={COMMON_STYLES}\n    >\n      {({\n        isHovered,\n        isPressed,\n        isFocused,\n        isFocusVisible,\n        isSelected,\n        isDisabled,\n        isReadOnly,\n      }) =>\n        withObservedValues(\n          children,\n          {\n            hovered: isHovered,\n            pressed: isPressed,\n            focused: isFocused,\n            focusVisible: isFocusVisible,\n            selected: isSelected,\n            disabled: isDisabled,\n            readonly: isReadOnly,\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </Radio>\n  );\n\n  if (isStandalone) {\n    return <RadioGroup>{radio}</RadioGroup>;\n  }\n\n  return radio;\n}\n\nexport const makeDefaultRadioChildren = (label: string): PlasmicElement => ({\n  type: \"hbox\",\n  styles: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    padding: 0,\n  },\n  children: [\n    {\n      type: \"box\",\n      styles: {\n        width: \"7px\",\n        height: \"7px\",\n        borderRadius: \"100%\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n      },\n    },\n    {\n      type: \"component\",\n      name: LABEL_COMPONENT_NAME,\n      props: {\n        children: {\n          type: \"text\",\n          value: label,\n        },\n      },\n    },\n  ],\n});\n\nexport function registerRadio(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseRadio>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseRadio,\n    {\n      name: makeComponentName(\"radio\"),\n      displayName: \"Aria Radio\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerRadio\",\n      importName: \"BaseRadio\",\n      variants,\n      props: {\n        ...getCommonProps<BaseRadioProps>(\"radio\", [\n          \"isDisabled\",\n          \"autoFocus\",\n          \"aria-label\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: makeDefaultRadioChildren(\"Radio\"),\n        },\n        value: {\n          type: \"string\",\n          description:\n            \"The value of the input element, used when submitting an HTML form.\",\n          validator: (_value, _props, ctx) => {\n            if (ctx?.idError) {\n              return ctx.idError;\n            }\n            return true;\n          },\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport type { RadioGroupProps } from \"react-aria-components\";\nimport { RadioGroup } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicRadioGroupContext } from \"./contexts\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { makeDefaultRadioChildren, registerRadio } from \"./registerRadio\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  Registerable,\n  makeChildComponentName,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nexport interface BaseRadioGroupControlContextData {\n  values: string[];\n}\n\nconst RADIO_GROUP_VARIANTS = [\"disabled\" as const, \"readonly\" as const];\n\nexport interface BaseRadioGroupProps\n  extends RadioGroupProps,\n    HasControlContextData<BaseRadioGroupControlContextData>,\n    WithVariants<typeof RADIO_GROUP_VARIANTS> {\n  children: React.ReactNode;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(RADIO_GROUP_VARIANTS);\n\nexport function BaseRadioGroup(props: BaseRadioGroupProps) {\n  const { children, plasmicUpdateVariant, setControlContextData, ...rest } =\n    props;\n\n  const [ids, setIds] = useState<string[]>([]);\n  const idManager = useMemo(() => new OptionsItemIdManager(), []);\n\n  useEffect(() => {\n    setControlContextData?.({\n      values: ids,\n    });\n  }, [ids, setControlContextData]);\n\n  useEffect(() => {\n    idManager.subscribe((_ids: string[]) => {\n      setIds(_ids);\n    });\n  }, [idManager]);\n\n  return (\n    <PlasmicRadioGroupContext.Provider value={{ ...props, idManager }}>\n      <RadioGroup {...rest} style={COMMON_STYLES}>\n        {({ isDisabled, isReadOnly }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </RadioGroup>\n    </PlasmicRadioGroupContext.Provider>\n  );\n}\n\nconst RADIO_GROUP_COMPONENT_NAME = makeComponentName(\"radioGroup\");\n\nexport function registerRadioGroup(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseRadioGroup>\n) {\n  const thisName = makeChildComponentName(\n    overrides?.parentComponentName,\n    RADIO_GROUP_COMPONENT_NAME\n  );\n\n  const radioMeta = registerRadio(loader, { parentComponentName: thisName });\n\n  registerComponentHelper(\n    loader,\n    BaseRadioGroup,\n    {\n      name: RADIO_GROUP_COMPONENT_NAME,\n      displayName: \"Aria RadioGroup\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerRadioGroup\",\n      importName: \"BaseRadioGroup\",\n      variants,\n      props: {\n        ...getCommonProps<BaseRadioGroupProps>(\"radio group\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"aria-label\",\n          \"isRequired\",\n        ]),\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"vbox\",\n              styles: {\n                display: \"flex\",\n                gap: \"5px\",\n                padding: 0,\n                alignItems: \"flex-start\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Radio Group\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: radioMeta.name,\n                  props: {\n                    children: makeDefaultRadioChildren(\"Radio 1\"),\n                    value: \"radio1\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: radioMeta.name,\n                  props: {\n                    children: makeDefaultRadioChildren(\"Radio 2\"),\n                    value: \"radio2\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: radioMeta.name,\n                  props: {\n                    children: makeDefaultRadioChildren(\"Radio 3\"),\n                    value: \"radio3\",\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: DESCRIPTION_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value:\n                        \"Use the registered variants to see it in action...\",\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n        value: {\n          type: \"choice\",\n          editOnly: true,\n          displayName: \"Initial value\",\n          uncontrolledProp: \"defaultValue\",\n          description: \"The current value\",\n          options: (_props, ctx) => (ctx?.values ? Array.from(ctx.values) : []),\n          multiSelect: false,\n        },\n        isInvalid: {\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        validationBehavior: {\n          type: \"choice\",\n          options: [\"native\", \"aria\"],\n          description:\n            \"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\",\n          defaultValueHint: \"native\",\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"string\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"array\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport {\n  Select,\n  SelectProps,\n  SelectRenderProps,\n  SelectStateContext,\n  SelectValue,\n} from \"react-aria-components\";\nimport { arrowDown, COMMON_STYLES, getCommonProps } from \"./common\";\nimport { OptionsItemIdManager } from \"./OptionsItemIdManager\";\nimport {\n  PlasmicListBoxContext,\n  PlasmicPopoverTriggerContext,\n} from \"./contexts\";\nimport { BUTTON_COMPONENT_NAME } from \"./registerButton\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { LIST_BOX_COMPONENT_NAME } from \"./registerListBox\";\nimport { POPOVER_COMPONENT_NAME } from \"./registerPopover\";\nimport {\n  HasControlContextData,\n  Registerable,\n  extractPlasmicDataProps,\n  makeComponentName,\n  registerComponentHelper,\n  useAutoOpen,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\n// It cannot be used as a hook like useAutoOpen() within the BaseSelect component\n// because it needs access to SelectStateContext, which is only created in the BaseSelect component's render function.\nfunction SelectAutoOpen(props: any) {\n  const { open, close } = React.useContext(SelectStateContext) ?? {};\n  useAutoOpen({\n    props,\n    open: () => {\n      open?.();\n      // using settimeout because the focus is not immediately available\n      setTimeout(() => {\n        /*\n          When the select's popover is opened in the canvas, the listbox gains focus, trapping the keyboard focus within it. Pressing the up or down arrow keys navigates through the listbox items.\n          However, there are three issues with this behavior:\n\n            1. Focus should not be triggered in canvas (non-interactive mode)\n            2. Canvas (non-interactive mode) should remain non-interactive: Navigation between listbox items or selection using the space key should not be possible.\n            3. Keyboard hotkeys (e.g., backspace, undo) stop working: Key presses are absorbed by the listbox, breaking the expected behavior for shortcuts like backspace or undo (reference).\n\n          To resolve this, we need to call document.activeElement.blur() to remove focus from the listbox.\n\n          However, since the select component is a code component embedded within the artboard iframe, the keyboard hotkeys (e.g., backspace, undo) will not work,\n          because they only function in the parent iframe (__wab_studio-frame).\n          To ensure hotkeys work properly, we need to shift focus from the active element in the child iframe (artboard iframe) to the parent iframe (__wab_studio-frame) by using window.parent.\n        */\n        (window.parent.document.activeElement as HTMLElement)?.blur?.();\n      }, 1);\n    },\n    close,\n  });\n\n  return null;\n}\n\nexport interface BaseSelectValueProps\n  extends React.ComponentProps<typeof SelectValue> {\n  customize?: boolean;\n}\n\nexport const BaseSelectValue = (props: BaseSelectValueProps) => {\n  const { children, customize, className } = props;\n  const placeholder = customize ? children : \"Select an item\";\n  return (\n    <SelectValue className={className} style={COMMON_STYLES}>\n      {({ isPlaceholder, selectedText }) => (\n        <>{isPlaceholder ? placeholder : selectedText}</>\n      )}\n    </SelectValue>\n  );\n};\n\nconst SELECT_NAME = makeComponentName(\"select\");\n\nexport interface BaseSelectControlContextData {\n  itemIds: string[];\n}\n\nconst SELECT_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants: SELECT_VARIANTS_DATA } =\n  pickAriaComponentVariants(SELECT_VARIANTS);\n\nexport interface BaseSelectProps\n  extends SelectProps<{}>, // NOTE: We don't need generic type here since we don't use items prop (that needs it). We just need to make the type checker happy\n    WithVariants<typeof SELECT_VARIANTS>,\n    HasControlContextData<BaseSelectControlContextData> {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport function BaseSelect(props: BaseSelectProps) {\n  const {\n    selectedKey,\n    onSelectionChange,\n    onOpenChange,\n    isDisabled,\n    className,\n    children,\n    disabledKeys,\n    name,\n    setControlContextData,\n    plasmicUpdateVariant,\n    \"aria-label\": ariaLabel,\n  } = props;\n\n  const idManager = useMemo(() => new OptionsItemIdManager(), []);\n\n  useEffect(() => {\n    idManager.subscribe((ids: string[]) => {\n      setControlContextData?.({\n        itemIds: ids,\n      });\n    });\n  }, []);\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled: isDisabled2,\n      isFocusVisible,\n      isFocused,\n    }: SelectRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled2,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  return (\n    <Select\n      selectedKey={selectedKey}\n      onSelectionChange={onSelectionChange}\n      onOpenChange={onOpenChange}\n      isDisabled={isDisabled}\n      className={classNameProp}\n      style={COMMON_STYLES}\n      name={name}\n      disabledKeys={disabledKeys}\n      aria-label={ariaLabel}\n      {...extractPlasmicDataProps(props)}\n    >\n      <SelectAutoOpen {...props} />\n      <PlasmicPopoverTriggerContext.Provider value={true}>\n        <PlasmicListBoxContext.Provider\n          value={{\n            idManager,\n          }}\n        >\n          {children}\n        </PlasmicListBoxContext.Provider>\n      </PlasmicPopoverTriggerContext.Provider>\n    </Select>\n  );\n}\n\nexport function registerSelect(loader?: Registerable) {\n  const selectValueMeta = registerComponentHelper(loader, BaseSelectValue, {\n    name: makeComponentName(\"select-value\"),\n    displayName: \"Aria Selected Value\",\n    importPath: \"@plasmicpkgs/react-aria/skinny/registerSelect\",\n    importName: \"BaseSelectValue\",\n    parentComponentName: SELECT_NAME,\n    props: {\n      customize: {\n        type: \"boolean\",\n        displayName: \"Customize placeholder\",\n        defaultValue: true,\n        description: \"Customize the placeholder text and styles\",\n      },\n      children: {\n        type: \"slot\",\n        displayName: \"Placeholder\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Select an item\",\n          },\n        ],\n        hidden: (props) => !props.customize,\n      },\n    },\n    trapsFocus: true,\n  });\n\n  registerComponentHelper(loader, BaseSelect, {\n    name: SELECT_NAME,\n    displayName: \"Aria Select\",\n    importPath: \"@plasmicpkgs/react-aria/skinny/registerSelect\",\n    importName: \"BaseSelect\",\n    variants: SELECT_VARIANTS_DATA,\n    props: {\n      ...getCommonProps<BaseSelectProps>(\"Select\", [\n        \"name\",\n        \"aria-label\",\n        \"isDisabled\",\n        \"autoFocus\",\n      ]),\n      selectedKey: {\n        type: \"choice\",\n        editOnly: true,\n        uncontrolledProp: \"defaultSelectedKey\",\n        displayName: \"Initial selected item\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        // React Aria Select do not support multiple selections yet\n        multiSelect: false,\n      },\n      onSelectionChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"selectedValue\", type: \"string\" }],\n      },\n      disabledKeys: {\n        type: \"choice\",\n        displayName: \"Disabled values\",\n        description:\n          \"The items that are disabled. These items cannot be selected, focused, or otherwise interacted with.\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        multiSelect: true,\n        advanced: true,\n      },\n      isOpen: {\n        type: \"boolean\",\n        defaultValue: false,\n        // It doesn't make sense to make isOpen prop editable (it's controlled by user interaction and always closed by default), so we keep this prop hidden. We have listed the prop here in the meta only so we can expose a writeable state for it.\n        hidden: () => true,\n      },\n      onOpenChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n      },\n      children: {\n        type: \"slot\",\n        mergeWithParent: true,\n        defaultValue: [\n          {\n            type: \"vbox\",\n            styles: {\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              width: \"300px\",\n              padding: 0,\n            },\n            children: [\n              {\n                type: \"component\",\n                name: LABEL_COMPONENT_NAME,\n                props: {\n                  children: {\n                    type: \"text\",\n                    value: \"Label\",\n                  },\n                },\n              },\n              {\n                type: \"component\",\n                name: BUTTON_COMPONENT_NAME,\n                styles: {\n                  width: \"100%\",\n                  padding: \"4px 10px\",\n                  background: \"white\",\n                },\n                props: {\n                  children: {\n                    type: \"hbox\",\n                    styles: {\n                      width: \"stretch\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      padding: 0,\n                    },\n                    children: [\n                      {\n                        type: \"component\",\n                        name: selectValueMeta.name,\n                      },\n                      arrowDown,\n                    ],\n                  },\n                },\n              },\n              {\n                type: \"component\",\n                name: POPOVER_COMPONENT_NAME,\n                styles: {\n                  backgroundColor: \"white\",\n                  padding: \"10px\",\n                  overflow: \"scroll\",\n                  width: \"unset\",\n                },\n                props: {\n                  children: [\n                    {\n                      type: \"component\",\n                      name: LIST_BOX_COMPONENT_NAME,\n                      props: {\n                        selectionMode: \"single\",\n                      },\n                      styles: {\n                        borderWidth: 0,\n                        width: \"stretch\",\n                      },\n                    },\n                  ],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    states: {\n      selectedValue: {\n        type: \"writable\",\n        valueProp: \"selectedKey\",\n        onChangeProp: \"onSelectionChange\",\n        variableType: \"text\",\n      },\n      isOpen: {\n        type: \"writable\",\n        valueProp: \"isOpen\",\n        onChangeProp: \"onOpenChange\",\n        variableType: \"boolean\",\n      },\n    },\n    trapsFocus: true,\n  });\n}\n","import React from \"react\";\nimport { SliderOutput } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst SLIDER_OUTPUT_VARIANTS = [\"disabled\" as const];\nexport interface BaseSliderOutputProps\n  extends React.ComponentProps<typeof SliderOutput>,\n    WithVariants<typeof SLIDER_OUTPUT_VARIANTS> {\n  children?: React.ReactNode;\n}\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  SLIDER_OUTPUT_VARIANTS\n);\n\nexport function BaseSliderOutput(props: BaseSliderOutputProps) {\n  const { plasmicUpdateVariant, children, ...rest } = props;\n  return (\n    <SliderOutput {...rest} style={COMMON_STYLES}>\n      {({ isDisabled }) =>\n        withObservedValues(\n          children,\n          {\n            disabled: isDisabled,\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </SliderOutput>\n  );\n}\n\nexport const SLIDER_OUTPUT_COMPONENT_NAME = makeComponentName(\"sliderOutput\");\n\nexport function registerSliderOutput(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSliderOutput>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseSliderOutput,\n    {\n      name: SLIDER_OUTPUT_COMPONENT_NAME,\n      displayName: \"Aria Slider Output\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSliderOutput\",\n      importName: \"BaseSliderOutput\",\n      variants,\n      props: {\n        children: {\n          mergeWithParent: true,\n          type: \"slot\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { Component, ReactNode } from \"react\";\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Slider, SliderThumb, SliderTrack } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst SLIDER_THUMB_VARIANTS = [\n  \"dragging\" as const,\n  \"hovered\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  SLIDER_THUMB_VARIANTS\n);\nexport interface BaseSliderThumbProps\n  extends React.ComponentProps<typeof SliderThumb>,\n    WithVariants<typeof SLIDER_THUMB_VARIANTS> {\n  advanced?: boolean;\n}\n\nexport function BaseSliderThumb({\n  children,\n  advanced,\n  plasmicUpdateVariant,\n  ...rest\n}: BaseSliderThumbProps) {\n  const thumb = (\n    <SliderThumb {...rest} style={COMMON_STYLES}>\n      {({ isDragging, isHovered, isFocused, isFocusVisible, isDisabled }) =>\n        withObservedValues(\n          <>{advanced ? children : undefined}</>,\n          {\n            dragging: isDragging,\n            hovered: isHovered,\n            focused: isFocused,\n            focusVisible: isFocusVisible,\n            disabled: isDisabled,\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </SliderThumb>\n  );\n\n  return (\n    <ErrorBoundary\n      // If the Slider Thumb is the root of a Studio component, then we need to wrap the thumb in a track\n      // to ensure that the thumb gets the required Slider context\n      fallback={\n        <Slider style={{ height: \"100%\", width: \"100%\" }}>\n          <SliderTrack>{thumb}</SliderTrack>\n        </Slider>\n      }\n    >\n      {thumb}\n    </ErrorBoundary>\n  );\n}\n\nexport const SLIDER_THUMB_COMPONENT_NAME = makeComponentName(\"sliderThumb\");\n\nexport function registerSliderThumb(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSliderThumb>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseSliderThumb,\n    {\n      name: SLIDER_THUMB_COMPONENT_NAME,\n      displayName: \"Aria Slider Thumb\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSliderThumb\",\n      importName: \"BaseSliderThumb\",\n      defaultStyles: {\n        position: \"absolute\",\n        top: \"5px\",\n        width: \"20px\",\n        height: \"20px\",\n        backgroundColor: \"#C80101\",\n        borderRadius: \"100%\",\n        cursor: \"pointer\",\n      },\n      variants,\n      props: {\n        ...getCommonProps<BaseSliderThumbProps>(\"slider thumb\", [\n          \"name\",\n          \"isDisabled\",\n          \"autoFocus\",\n        ]),\n        advanced: {\n          type: \"boolean\",\n          displayName: \"Advanced\",\n          description:\n            \"Enables the children slot for creating a more customized thumb\",\n        },\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          hidden: (props) => !props.advanced,\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { CodeComponentMeta } from \"@plasmicapp/host\";\nimport React, { useMemo } from \"react\";\nimport { Slider, SliderThumbProps, SliderTrack } from \"react-aria-components\";\nimport flattenChildren from \"react-keyed-flatten-children\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicSliderContext } from \"./contexts\";\nimport { BaseSliderThumbProps } from \"./registerSliderThumb\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  isDefined,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst SLIDER_TRACK_VARIANTS = [\"hovered\" as const];\n\nconst { variants, withObservedValues } = pickAriaComponentVariants(\n  SLIDER_TRACK_VARIANTS\n);\n\nexport interface BaseSliderTrackProps\n  extends React.ComponentProps<typeof SliderTrack>,\n    WithVariants<typeof SLIDER_TRACK_VARIANTS> {\n  progressBar?: React.ReactNode;\n  children?: React.ReactElement<HTMLElement>;\n}\n\nfunction isMultiValueGuard(value?: number | number[]): value is number[] {\n  return Array.isArray(value) && value.length > 1;\n}\n\nexport function BaseSliderTrack(props: BaseSliderTrackProps) {\n  const context = React.useContext(PlasmicSliderContext);\n  const isStandalone = !context;\n  const { children, progressBar, plasmicUpdateVariant, ...rest } = props;\n\n  const thumbsLength =\n    context && isMultiValueGuard(context.value) ? context.value.length : 1;\n  const isMultiValue = thumbsLength > 1;\n\n  const { minIndex, maxIndex } = useMemo(() => {\n    if (thumbsLength <= 1) {\n      return { minIndex: 0, maxIndex: 0 };\n    }\n    return { minIndex: 0, maxIndex: thumbsLength - 1 };\n  }, [thumbsLength]);\n\n  /**\n   * Generates the thumb components based on the number of thumbs\n   * and the number of values in the slider\n   *\n   * If the number of thumbs is less than the number of values, then\n   * the last thumb is repeated for the remaining values\n   *\n   * If the number of thumbs is greater than the number of values, then\n   * the additional thumbs are omitted\n   */\n  const thumbs = useMemo(() => {\n    const thumbNodes = flattenChildren(children);\n    if (!thumbNodes || thumbNodes.length === 0 || !isDefined(context?.value)) {\n      return [];\n    }\n\n    const values = isDefined(context)\n      ? Array.isArray(context.value)\n        ? context.value\n        : [context.value]\n      : [];\n\n    // Last thumb be re-used if the number of thumbs is less than the number of values\n    const lastThumb = thumbNodes[thumbNodes.length - 1];\n\n    return values.map((v, i) => {\n      const currentThumb = thumbNodes[i];\n      // Re-use the last thumb if there are no more thumbs left ( this is for ease of use - the user can just add one more value to the initial-values array and see another thumb right away, without having to explicitly add a new thumb component )\n      if (i >= thumbNodes.length) {\n        if (React.isValidElement(lastThumb)) {\n          return React.cloneElement(lastThumb, {\n            index: i,\n          } as SliderThumbProps);\n        }\n      }\n      if (!React.isValidElement(currentThumb)) {\n        return null;\n      }\n      return React.cloneElement(currentThumb, {\n        index: i,\n      } as SliderThumbProps);\n    });\n  }, [children, context?.value]);\n\n  const track = (\n    <SliderTrack style={{ position: \"relative\" }} {...rest}>\n      {({ state, isHovered }) => (\n        <>\n          {withObservedValues(\n            <>\n              <div\n                style={{\n                  width: `${\n                    (!isMultiValue\n                      ? state.getThumbPercent(minIndex)\n                      : state.getThumbPercent(maxIndex) -\n                        state.getThumbPercent(minIndex)) * 100\n                  }%`,\n                  height: \"100%\",\n                  position: \"absolute\",\n                  top: 0,\n                  left: !isMultiValue\n                    ? 0\n                    : state.getThumbPercent(minIndex) * 100 + \"%\",\n                }}\n              >\n                {progressBar}\n              </div>\n              {thumbs}\n            </>,\n            {\n              hovered: isHovered,\n            },\n            plasmicUpdateVariant\n          )}\n        </>\n      )}\n    </SliderTrack>\n  );\n\n  if (isStandalone) {\n    return (\n      <Slider style={{ height: \"100%\", width: \"100%\", ...COMMON_STYLES }}>\n        {track}\n      </Slider>\n    );\n  }\n\n  return track;\n}\n\nexport const SLIDER_TRACK_COMPONENT_NAME = makeComponentName(\"sliderTrack\");\n\nexport function registerSliderTrack(\n  sliderThumbMeta: CodeComponentMeta<BaseSliderThumbProps>,\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSliderTrack>\n) {\n  return registerComponentHelper(\n    loader,\n    BaseSliderTrack,\n    {\n      name: SLIDER_TRACK_COMPONENT_NAME,\n      displayName: \"Aria Slider Track\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSliderTrack\",\n      importName: \"BaseSliderTrack\",\n      variants,\n      defaultStyles: {\n        width: \"stretch\",\n        backgroundColor: \"#aaa\",\n        position: \"relative\",\n        height: \"10px\",\n        padding: 0,\n      },\n      props: {\n        children: {\n          type: \"slot\",\n          /**\n           * NOTE: We don't merge with parent here, because we want to allow the user to select the thumbs without having to first select the slider track.\n           * Also, there can be more than one thumbs (e.g. in a range slider), but `mergeWithParent` only shows prop controls of the slot content if there is only one direct descendant of the slot.\n           * */\n          // mergeWithParent: true,\n          displayName: \"Thumbs\",\n          description:\n            \"The thumbs of the slider. For range slider, you can add more than one thumb.\",\n          allowedComponents: [sliderThumbMeta.name],\n          allowRootWrapper: true,\n          defaultValue: [\n            {\n              type: \"component\",\n              name: sliderThumbMeta.name,\n            },\n          ],\n        },\n        progressBar: {\n          type: \"slot\",\n          mergeWithParent: true,\n          displayName: \"Progress Bar\",\n          defaultValue: [\n            {\n              type: \"box\",\n              styles: {\n                height: \"100%\",\n                width: \"100%\",\n                backgroundColor: \"#ffa6a6\",\n                padding: 0,\n              },\n            },\n          ],\n        },\n        onHoverStart: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n        onHoverEnd: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"event\", type: \"object\" }],\n        },\n        onHoverChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isHovering\", type: \"boolean\" }],\n        },\n      },\n    },\n    overrides\n  );\n}\n","import { CodeComponentMeta } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { Slider, type SliderProps } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicSliderContext } from \"./contexts\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { registerSliderOutput } from \"./registerSliderOutput\";\nimport { registerSliderThumb } from \"./registerSliderThumb\";\nimport { registerSliderTrack } from \"./registerSliderTrack\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst SLIDER_COMPONENT_NAME = makeComponentName(\"slider\");\nconst RANGE_SLIDER_COMPONENT_NAME = makeComponentName(\"range-slider\");\nconst SLIDER_VARIANTS = [\"disabled\" as const];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(SLIDER_VARIANTS);\n\nexport interface BaseSliderProps<T extends number | number[]>\n  extends SliderProps<T>,\n    WithVariants<typeof SLIDER_VARIANTS> {\n  children?: React.ReactNode;\n}\n\nexport function BaseSlider<T extends number | number[]>(\n  props: BaseSliderProps<T>\n) {\n  const { children, plasmicUpdateVariant, ...rest } = props;\n  return (\n    <PlasmicSliderContext.Provider\n      value={{\n        ...rest,\n        // Here's why the type casting is needed here: https://github.com/Microsoft/TypeScript/issues/3410\n        onChange: rest.onChange as (value: number | number[]) => void,\n        onChangeEnd: rest.onChangeEnd as (value: number | number[]) => void,\n      }}\n    >\n      <Slider<T> {...rest} style={COMMON_STYLES}>\n        {({ isDisabled }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Slider>\n    </PlasmicSliderContext.Provider>\n  );\n}\n\nfunction getCommonSliderProps<T extends number | number[]>(): CodeComponentMeta<\n  BaseSliderProps<T>\n>[\"props\"] {\n  return {\n    orientation: {\n      type: \"choice\",\n      options: [\"horizontal\", \"vertical\"],\n      defaultValueHint: \"horizontal\",\n      defaultValue: \"horizontal\",\n    },\n    minValue: {\n      type: \"number\",\n      description: \"The minimum value of the slider\",\n      defaultValueHint: 0,\n    },\n    maxValue: {\n      type: \"number\",\n      description: \"The maximum value of the slider\",\n      defaultValueHint: 100,\n    },\n    step: {\n      type: \"number\",\n      description: \"The step value of the slider\",\n      defaultValueHint: 1,\n    },\n  };\n}\n\nexport function registerSlider(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSlider<number>>\n) {\n  const sliderOutputMeta = registerSliderOutput(loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n\n  const sliderThumbMeta = registerSliderThumb(loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n  const sliderTrackMeta = registerSliderTrack(sliderThumbMeta, loader, {\n    parentComponentName: SLIDER_COMPONENT_NAME,\n  });\n\n  // Register the range slider\n  registerComponentHelper(\n    loader,\n    BaseSlider<number[]>,\n    {\n      name: RANGE_SLIDER_COMPONENT_NAME,\n      displayName: \"Aria Range Slider\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSlider\",\n      importName: \"BaseSlider\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n      },\n      props: {\n        ...getCommonProps<BaseSliderProps<number[]>>(\"slider\", [\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        ...getCommonSliderProps<number[]>(),\n        value: {\n          type: \"array\",\n          editOnly: true,\n          displayName: \"Initial value\",\n          uncontrolledProp: \"defaultValue\",\n          description: \"The intial value of the slider\",\n          defaultValue: [20, 50],\n          validator: (value) => {\n            if (!Array.isArray(value)) {\n              return \"Input must be an array.\";\n            }\n\n            for (let i = 1; i < value.length; i++) {\n              if (value[i] < value[i - 1]) {\n                return \"Array elements are not in ascending order.\";\n              }\n            }\n\n            return true;\n          },\n        },\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"hbox\",\n              styles: {\n                width: \"stretch\",\n                justifyContent: \"space-between\",\n                padding: \"8px 0px\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Label\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: sliderOutputMeta.name,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Output\",\n                    },\n                  },\n                },\n              ],\n            },\n            {\n              type: \"component\",\n              name: sliderTrackMeta.name,\n              props: {\n                children: [\n                  {\n                    type: \"component\",\n                    name: sliderThumbMeta.name,\n                  },\n                  {\n                    type: \"component\",\n                    name: sliderThumbMeta.name,\n                    styles: {\n                      backgroundColor: \"blue\",\n                    },\n                  },\n                ],\n              },\n            },\n          ],\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n        onChangeEnd: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"object\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"array\",\n        },\n      },\n      trapsFocus: true,\n    },\n    {\n      parentComponentName: SLIDER_COMPONENT_NAME,\n    }\n  );\n\n  registerComponentHelper(\n    loader,\n    BaseSlider<number>,\n    {\n      name: SLIDER_COMPONENT_NAME,\n      displayName: \"Aria Slider\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSlider\",\n      importName: \"BaseSlider\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n      },\n      props: {\n        ...getCommonProps<BaseSliderProps<number>>(\"slider\", [\n          \"isDisabled\",\n          \"aria-label\",\n        ]),\n        ...getCommonSliderProps<number>(),\n        children: {\n          type: \"slot\",\n          defaultValue: [\n            {\n              type: \"hbox\",\n              styles: {\n                width: \"stretch\",\n                justifyContent: \"space-between\",\n                padding: \"8px 0px\",\n              },\n              children: [\n                {\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Label\",\n                    },\n                  },\n                },\n                {\n                  type: \"component\",\n                  name: sliderOutputMeta.name,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Output\",\n                    },\n                  },\n                },\n              ],\n            },\n            {\n              type: \"component\",\n              name: sliderTrackMeta.name,\n            },\n          ],\n        },\n        value: {\n          type: \"number\",\n          editOnly: true,\n          displayName: \"Initial value\",\n          uncontrolledProp: \"defaultValue\",\n          description: \"The initial value of the slider\",\n          defaultValueHint: 0,\n          defaultValue: 0,\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"number\" }],\n        },\n        onChangeEnd: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"value\", type: \"number\" }],\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"number\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React from \"react\";\nimport type { SwitchProps } from \"react-aria-components\";\nimport { Switch } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport {\n  CodeComponentMetaOverrides,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst SWITCH_VARIANTS = [\n  \"hovered\" as const,\n  \"pressed\" as const,\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"selected\" as const,\n  \"disabled\" as const,\n  \"readonly\" as const,\n];\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(SWITCH_VARIANTS);\n\ninterface BaseSwitchProps\n  extends SwitchProps,\n    WithVariants<typeof SWITCH_VARIANTS> {\n  children: React.ReactNode;\n}\n\nexport function BaseSwitch(props: BaseSwitchProps) {\n  const { children, plasmicUpdateVariant, ...rest } = props;\n  return (\n    <Switch {...rest} style={COMMON_STYLES}>\n      {({\n        isHovered,\n        isPressed,\n        isFocused,\n        isFocusVisible,\n        isSelected,\n        isDisabled,\n        isReadOnly,\n      }) =>\n        withObservedValues(\n          children,\n          {\n            hovered: isHovered,\n            pressed: isPressed,\n            focused: isFocused,\n            focusVisible: isFocusVisible,\n            selected: isSelected,\n            disabled: isDisabled,\n            readonly: isReadOnly,\n          },\n          plasmicUpdateVariant\n        )\n      }\n    </Switch>\n  );\n}\n\nexport function registerSwitch(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseSwitch>\n) {\n  registerComponentHelper(\n    loader,\n    BaseSwitch,\n    {\n      name: makeComponentName(\"switch\"),\n      displayName: \"Aria Switch\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerSwitch\",\n      importName: \"BaseSwitch\",\n      variants,\n      defaultStyles: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: 0,\n      },\n      props: {\n        ...getCommonProps<BaseSwitchProps>(\"switch\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"hbox\",\n              styles: {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                gap: \"10px\",\n                padding: 0,\n              },\n              children: [\n                {\n                  // the track\n                  type: \"hbox\",\n                  styles: {\n                    width: \"30px\",\n                    height: \"16px\",\n                    padding: 0,\n                    backgroundColor: \"#D5D5D5\",\n                    cursor: \"pointer\",\n                    borderRadius: \"999px\",\n                  },\n                  children: {\n                    // the thumb\n                    type: \"hbox\",\n                    styles: {\n                      width: \"12px\",\n                      height: \"12px\",\n                      position: \"absolute\",\n                      top: \"2px\",\n                      left: \"2px\",\n                      borderRadius: \"100%\",\n                      backgroundColor: \"#fff\",\n                      padding: 0,\n                      transitionProperty: \"all\",\n                      transitionDuration: \"0.5s\",\n                      transitionTimingFunction: \"ease-in-out\",\n                    },\n                  },\n                },\n                {\n                  // the label\n                  type: \"component\",\n                  name: LABEL_COMPONENT_NAME,\n                  props: {\n                    children: {\n                      type: \"text\",\n                      value: \"Label\",\n                    },\n                  },\n                },\n              ],\n            },\n            {\n              type: \"component\",\n              name: DESCRIPTION_COMPONENT_NAME,\n              styles: {\n                fontSize: \"12px\",\n              },\n              props: {\n                children: {\n                  type: \"text\",\n                  value: \"Use the registered variants to see it in action...\",\n                },\n              },\n            },\n          ],\n        },\n        value: {\n          type: \"string\",\n          description:\n            'The value of the switch in \"selected\" state, used when submitting an HTML form.',\n          defaultValueHint: \"on\",\n        },\n        isSelected: {\n          type: \"boolean\",\n          editOnly: true,\n          displayName: \"Default Selected\",\n          uncontrolledProp: \"defaultSelected\",\n          description: \"Whether the switch should be selected by default\",\n          defaultValueHint: false,\n        },\n        onChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isSelected\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isSelected: {\n          type: \"writable\",\n          valueProp: \"isSelected\",\n          onChangeProp: \"onChange\",\n          variableType: \"boolean\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import React, { ChangeEvent, useCallback } from \"react\";\nimport { mergeProps } from \"react-aria\";\nimport type { InputRenderProps, TextAreaProps } from \"react-aria-components\";\nimport { TextArea } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps } from \"./common\";\nimport { PlasmicTextFieldContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  HasControlContextData,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst TEXTAREA_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"hovered\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants } = pickAriaComponentVariants(TEXTAREA_VARIANTS);\n\nexport interface BaseTextAreaProps\n  extends Omit<TextAreaProps, \"className\">,\n    HasControlContextData,\n    WithVariants<typeof TEXTAREA_VARIANTS> {\n  className?: string;\n}\n\nexport const inputHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: (e: ChangeEvent<HTMLInputElement>) => {\n        return e.target.value;\n      },\n    },\n  },\n};\n\nexport function BaseTextArea(props: BaseTextAreaProps) {\n  const { className, plasmicUpdateVariant, setControlContextData, ...rest } =\n    props;\n\n  const textFieldContext = React.useContext(PlasmicTextFieldContext);\n\n  setControlContextData?.({\n    parent: textFieldContext,\n  });\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled,\n      isFocusVisible,\n      isFocused,\n      isHovered,\n    }: InputRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n        hovered: isHovered,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  const mergedProps = mergeProps(rest, {\n    className: classNameProp,\n  });\n\n  return <TextArea {...mergedProps} style={COMMON_STYLES} />;\n}\n\nexport function registerTextArea(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseTextArea>\n) {\n  registerComponentHelper(\n    loader,\n    BaseTextArea,\n    {\n      name: makeComponentName(\"textarea\"),\n      displayName: \"Aria TextArea\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerTextArea\",\n      importName: \"BaseTextArea\",\n      variants,\n      props: {\n        ...getCommonProps<BaseTextAreaProps>(\"Text Area\", [\n          \"name\",\n          \"disabled\",\n          \"readOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"required\",\n          \"placeholder\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"inputMode\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n          ...inputHelpers.states.value,\n        },\n      },\n      componentHelpers: {\n        helpers: inputHelpers,\n        importName: \"inputHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerTextArea\",\n      },\n    },\n    overrides\n  );\n}\n","import React, { ReactNode } from \"react\";\nimport type { InputProps, TextFieldProps } from \"react-aria-components\";\nimport { TextField } from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, resolveAutoComplete } from \"./common\";\nimport { PlasmicTextFieldContext } from \"./contexts\";\nimport { DESCRIPTION_COMPONENT_NAME } from \"./registerDescription\";\nimport { INPUT_COMPONENT_NAME } from \"./registerInput\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\nconst TEXT_FIELD_VARIANTS = [\"disabled\" as const, \"readonly\" as const];\n\nexport interface BaseTextFieldProps\n  extends Omit<TextFieldProps, \"autoComplete\">,\n    WithVariants<typeof TEXT_FIELD_VARIANTS> {\n  label?: ReactNode;\n  description?: ReactNode;\n  multiline?: boolean;\n  inputProps?: InputProps;\n  autoComplete?: string[];\n  children: ReactNode;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(TEXT_FIELD_VARIANTS);\n\nexport function BaseTextField(props: BaseTextFieldProps) {\n  const { children, plasmicUpdateVariant, autoComplete, ...rest } = props;\n\n  return (\n    <PlasmicTextFieldContext.Provider value={props}>\n      <TextField\n        autoComplete={resolveAutoComplete(autoComplete)}\n        {...rest}\n        style={COMMON_STYLES}\n      >\n        {({ isDisabled, isReadOnly }) =>\n          withObservedValues(\n            children,\n            {\n              disabled: isDisabled,\n              readonly: isReadOnly,\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </TextField>\n    </PlasmicTextFieldContext.Provider>\n  );\n}\n\nexport const TEXT_FIELD_COMPONENT_NAME = makeComponentName(\"textField\");\n\nexport function registerTextField(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseTextField>\n) {\n  registerComponentHelper(\n    loader,\n    BaseTextField,\n    {\n      name: TEXT_FIELD_COMPONENT_NAME,\n      displayName: \"Aria TextField\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerTextField\",\n      importName: \"BaseTextField\",\n      variants,\n      // TODO: Support for validate prop\n      props: {\n        ...getCommonProps<BaseTextFieldProps>(\"Text Field\", [\n          \"name\",\n          \"isDisabled\",\n          \"isReadOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"isRequired\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"pattern\",\n          \"type\",\n          \"inputMode\",\n          \"validationBehavior\",\n          \"autoComplete\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onFocusChange\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"vbox\",\n            styles: {\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              width: \"300px\",\n              gap: \"5px\",\n              padding: 0,\n            },\n            children: [\n              {\n                type: \"component\",\n                name: LABEL_COMPONENT_NAME,\n                props: {\n                  children: {\n                    type: \"text\",\n                    value: \"Label\",\n                  },\n                },\n              },\n              {\n                type: \"component\",\n                name: INPUT_COMPONENT_NAME,\n                styles: {\n                  width: \"100%\",\n                },\n              },\n              {\n                type: \"component\",\n                name: DESCRIPTION_COMPONENT_NAME,\n                props: {\n                  children: {\n                    type: \"text\",\n                    value: \"Type something...\",\n                  },\n                },\n              },\n            ],\n          },\n        },\n\n        isInvalid: {\n          // TODO: Not sure if needed\n          displayName: \"Invalid\",\n          type: \"boolean\",\n          description: \"Whether the input value is invalid\",\n          defaultValueHint: false,\n        },\n        customValidationErrors: {\n          // TODO: Not sure if needed\n          type: \"array\",\n          description: \"Errors for custom validation\",\n        },\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { usePlasmicCanvasComponentInfo } from \"@plasmicapp/host\";\nimport React from \"react\";\nimport { useFocusable } from \"react-aria\";\nimport { Tooltip, TooltipProps, TooltipTrigger } from \"react-aria-components\";\nimport { TooltipTriggerProps } from \"react-stately\";\nimport { COMMON_STYLES, getCommonOverlayProps } from \"./common\";\nimport {\n  CodeComponentMetaOverrides,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\n/*\n  NOTE: Placement should be managed as variants, not just props.\n  When `shouldFlip` is true, the placement prop may not represent the final position\n  (e.g., if placement is set to \"bottom\" but lacks space, the tooltip may flip to \"top\").\n  However, data-selectors will consistently indicate the actual placement of the tooltip.\n*/\nconst TOOLTIP_VARIANTS = [\n  \"placementTop\" as const,\n  \"placementBottom\" as const,\n  \"placementLeft\" as const,\n  \"placementRight\" as const,\n];\n\nexport interface BaseTooltipProps\n  extends TooltipTriggerProps,\n    TooltipProps,\n    WithVariants<typeof TOOLTIP_VARIANTS> {\n  children: React.ReactElement<HTMLElement>;\n  tooltipContent?: React.ReactElement;\n  resetClassName?: string;\n  className?: string;\n}\n\ninterface TriggerWrapperProps {\n  children: React.ReactElement;\n  className?: string;\n}\n\nconst { variants, withObservedValues } =\n  pickAriaComponentVariants(TOOLTIP_VARIANTS);\n\n/*\n\n  React Aria's TooltipTrigger TooltipTrigger requires a focusable element with ref.\n  To make sure that this requirement is fulfilled, wrap everything in a focusable div.\n  https://react-spectrum.adobe.com/react-aria/Tooltip.html#example\n  (In the example, Aria Button works as a trigger because it uses useFocusable behind the scenes)\n\n  Discussion (React-aria-components TooltipTrigger with custom button):\n  https://github.com/adobe/react-spectrum/discussions/5119#discussioncomment-7084661\n\n  */\nfunction TriggerWrapper({ children, className }: TriggerWrapperProps) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const { focusableProps } = useFocusable({}, ref);\n  return (\n    <div\n      ref={ref}\n      className={className}\n      {...focusableProps}\n      style={COMMON_STYLES}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function BaseTooltip(props: BaseTooltipProps) {\n  const {\n    children,\n    isDisabled,\n    delay,\n    closeDelay,\n    trigger,\n    isOpen,\n    defaultOpen,\n    tooltipContent,\n    resetClassName,\n    placement,\n    offset,\n    crossOffset,\n    shouldFlip,\n    onOpenChange,\n    plasmicUpdateVariant,\n  } = props;\n\n  const { isSelected, selectedSlotName } =\n    usePlasmicCanvasComponentInfo?.(props) ?? {};\n  const isAutoOpen = selectedSlotName !== \"children\" && isSelected;\n  const _isOpen = (isAutoOpen || isOpen) ?? false;\n\n  return (\n    <TooltipTrigger\n      isDisabled={isDisabled}\n      delay={delay}\n      closeDelay={closeDelay}\n      trigger={trigger}\n      isOpen={_isOpen}\n      defaultOpen={defaultOpen}\n      onOpenChange={onOpenChange}\n    >\n      <TriggerWrapper className={resetClassName}>{children}</TriggerWrapper>\n      <Tooltip\n        isOpen={_isOpen}\n        offset={offset}\n        crossOffset={crossOffset}\n        shouldFlip={shouldFlip}\n        defaultOpen={defaultOpen}\n        className={resetClassName}\n        onOpenChange={onOpenChange}\n        placement={placement}\n      >\n        {({ placement: _placement }) =>\n          withObservedValues(\n            <>{tooltipContent}</>,\n            {\n              placementTop: _placement === \"top\",\n              placementBottom: _placement === \"bottom\",\n              placementLeft: _placement === \"left\",\n              placementRight: _placement === \"right\",\n            },\n            plasmicUpdateVariant\n          )\n        }\n      </Tooltip>\n    </TooltipTrigger>\n  );\n}\n\nexport function registerTooltip(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseTooltip>\n) {\n  registerComponentHelper(\n    loader,\n    BaseTooltip,\n    {\n      name: \"plasmic-react-aria-tooltip\",\n      displayName: \"Aria Tooltip\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerTooltip\",\n      importName: \"BaseTooltip\",\n      isAttachment: true,\n      styleSections: false,\n      variants,\n      props: {\n        children: {\n          type: \"slot\",\n          mergeWithParent: true,\n          displayName: \"Trigger\",\n          defaultValue: {\n            type: \"text\",\n            value: \"Hover me!\",\n            styles: {\n              width: \"hug\",\n            },\n          },\n        },\n        tooltipContent: {\n          type: \"slot\",\n          mergeWithParent: true,\n          displayName: \"Tooltip Content\",\n          // NOTE: This is not applied in attachment\n          defaultValue: {\n            type: \"text\",\n            value: \"Hello from Tooltip!\",\n            styles: {\n              background: \"black\",\n              color: \"white\",\n              padding: \"7px\",\n              borderRadius: \"7px\",\n            },\n          },\n        },\n        resetClassName: {\n          type: \"themeResetClass\",\n        },\n        isDisabled: {\n          type: \"boolean\",\n        },\n        delay: {\n          type: \"number\",\n          // Default value is explicitly set to 0 to prevent users from mistakenly thinking the tooltip isn’t opening due to a delay.\n          defaultValue: 0,\n          defaultValueHint: 0,\n          description:\n            \"The delay (in milliseconds) for the tooltip to show up.\",\n        },\n        closeDelay: {\n          type: \"number\",\n          // Default value is explicitly set to 0 to prevent users from mistakenly thinking the tooltip isn’t closing due to a delay.\n          defaultValue: 0,\n          defaultValueHint: 0,\n          description: \"The delay (in milliseconds) for the tooltip to close.\",\n        },\n        trigger: {\n          type: \"choice\",\n          options: [\"focus\", \"focus and hover\"],\n          defaultValueHint: \"focus and hover\",\n        },\n        ...getCommonOverlayProps<BaseTooltipProps>(\"popover\", {\n          placement: { defaultValueHint: \"top\" },\n          offset: { defaultValueHint: 0 },\n          containerPadding: { defaultValueHint: 12 },\n          crossOffset: { defaultValueHint: 0 },\n        }),\n        isOpen: {\n          type: \"boolean\",\n          editOnly: true,\n          uncontrolledProp: \"defaultOpen\",\n          description: \"Whether the overlay is open by default\",\n          defaultValueHint: false,\n          hidden: () => true,\n        },\n        onOpenChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isOpen: {\n          type: \"writable\",\n          valueProp: \"isOpen\",\n          onChangeProp: \"onOpenChange\",\n          variableType: \"boolean\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n","import { registerButton } from \"./registerButton\";\nimport { registerCheckbox } from \"./registerCheckbox\";\nimport { registerCheckboxGroup } from \"./registerCheckboxGroup\";\nimport { registerComboBox } from \"./registerComboBox\";\nimport { registerDescription } from \"./registerDescription\";\nimport { registerDialog } from \"./registerDialog\";\nimport { registerDialogTrigger } from \"./registerDialogTrigger\";\n// import { registerForm } from \"./registerForm\";\nimport { registerHeading } from \"./registerHeading\";\nimport { registerInput } from \"./registerInput\";\nimport { registerLabel } from \"./registerLabel\";\nimport { registerListBox } from \"./registerListBox\";\nimport { registerModal } from \"./registerModal\";\nimport { registerOverlayArrow } from \"./registerOverlayArrow\";\nimport { registerPopover } from \"./registerPopover\";\nimport { registerRadioGroup } from \"./registerRadioGroup\";\nimport { registerSelect } from \"./registerSelect\";\nimport { registerSlider } from \"./registerSlider\";\nimport { registerSwitch } from \"./registerSwitch\";\nimport { registerText } from \"./registerText\";\nimport { registerTextArea } from \"./registerTextArea\";\nimport { registerTextField } from \"./registerTextField\";\nimport { registerTooltip } from \"./registerTooltip\";\nimport { Registerable } from \"./utils\";\n\nexport function registerAll(loader?: Registerable) {\n  registerText(loader);\n  registerHeading(loader);\n  registerDescription(loader);\n  registerDialog(loader);\n  registerOverlayArrow(loader);\n  registerSelect(loader);\n  registerComboBox(loader);\n  registerButton(loader);\n  registerLabel(loader);\n  registerListBox(loader);\n  registerPopover(loader);\n  registerTextArea(loader);\n  registerInput(loader);\n  registerSwitch(loader);\n  // registerForm(loader);\n  registerCheckbox(loader);\n  registerCheckboxGroup(loader);\n  registerRadioGroup(loader);\n  registerTextField(loader);\n  registerModal(loader);\n  registerTooltip(loader);\n  registerDialogTrigger(loader);\n  registerSlider(loader);\n}\n"],"names":["__spreadProps","__spreadValues","variants","withObservedValues","__objRest","inputHelpers","_a","mergeProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCO,SAAS,WAAY,CAAA;AAAA,EAC1B,KAAA;AAAA,EACA,IAAA;AAAA,EACA,KAAA;AACF,CAIG,EAAA;AA5CH,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AA6CE,EAAM,MAAA,eAAA,GAAkB,CAAC,CAAC,uBAAwB,EAAA,CAAA;AAClD,EAAA,MAAM,UACJ,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,6BAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAgC,KAAhC,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAwC,eAAxC,IAAsD,GAAA,EAAA,GAAA,KAAA,CAAA;AAExD,EAAA,SAAA,CAAU,MAAM;AAEd,IAAA,IAAI,CAAC,eAAiB,EAAA;AACpB,MAAA,OAAA;AAAA,KACF;AACA,IAAA,IAAI,UAAY,EAAA;AACd,MAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,EAAA,CAAA;AAAA,KACK,MAAA;AACL,MAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,EAAA,CAAA;AAAA,KACF;AAAA,GAEC,EAAA,CAAC,UAAY,EAAA,eAAe,CAAC,CAAA,CAAA;AAClC,CAAA;AAEO,SAAS,uBACd,CAAA,MAAA,EACA,SACA,EAAA,IAAA,EACA,SACA,EAAA;AACA,EAAA,IAAI,SAAW,EAAA;AACb,IAAO,IAAA,GAAAA,eAAA,CAAAC,gBAAA,CAAAA,gBAAA,CAAA,EAAA,EACF,OACA,SAFE,CAAA,EAAA;AAAA,MAGL,KAAO,EAAAA,gBAAA,CAAAA,gBAAA,CAAA,EAAA,EACF,IAAK,CAAA,KAAA,CAAA,EACL,SAAU,CAAA,KAAA,CAAA;AAAA,KAEjB,CAAA,CAAA;AACA,IAAA,IAAI,UAAU,mBAAqB,EAAA;AACjC,MAAA,IAAA,CAAK,IAAO,GAAA,sBAAA;AAAA,QACV,SAAU,CAAA,mBAAA;AAAA,QACV,IAAK,CAAA,IAAA;AAAA,OACP,CAAA;AAAA,KACF;AAAA,GACF;AACA,EAAA,IAAI,MAAQ,EAAA;AACV,IAAO,MAAA,CAAA,iBAAA,CAAkB,WAAW,IAAI,CAAA,CAAA;AAAA,GACnC,MAAA;AACL,IAAA,iBAAA,CAAkB,WAAW,IAAI,CAAA,CAAA;AAAA,GACnC;AACA,EAAO,OAAA,IAAA,CAAA;AACT,CAAA;AAEO,SAAS,kBAAkB,IAAc,EAAA;AAC9C,EAAA,OAAO,CAAsB,mBAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAC/B,CAAA;AAEgB,SAAA,sBAAA,CACd,gBACA,aACA,EAAA;AACA,EAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,IAAO,OAAA,aAAA,CAAA;AAAA,GACT;AACA,EAAO,OAAA,CAAA,EAAG,kBAAkB,aAAc,CAAA,OAAA;AAAA,IACxC,qBAAA;AAAA,IACA,EAAA;AAAA,GACF,CAAA,CAAA,CAAA;AACF,CAAA;AAOO,SAAS,wBAAwB,KAA4B,EAAA;AAClE,EAAA,OAAO,MAAO,CAAA,WAAA;AAAA,IACZ,MAAO,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAE,MAAO,CAAA,CAAC,CAAC,GAAG,CAAM,KAAA,GAAA,CAAI,UAAW,CAAA,eAAe,CAAC,CAAA;AAAA,GACzE,CAAA;AACF,CAAA;AAMO,SAAS,UAAa,KAAyC,EAAA;AACpE,EAAO,OAAA,KAAA,KAAU,UAAa,KAAU,KAAA,IAAA,CAAA;AAC1C;;;;;;;;;;;;;;;;;;ACvHgB,SAAA,SAAA,CAAa,QAAW,GAAqC,EAAA;AAC3E,EAAO,OAAA,SAAA,CAAU,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,MAAM,CAAM,KAAA,IAAA,CAAA;AACpC,CAAA;AAEgB,SAAA,gBAAA,CAAoB,QAAW,GAA4B,EAAA;AAZ3E,EAAA,IAAA,EAAA,CAAA;AAaE,EAAO,OAAA,CAAA,CAAA,EAAA,GAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,MAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAa,UAAe,MAAA,IAAA,CAAA;AACrC,CAAA;AAEgB,SAAA,gBAAA,CAAoB,QAAW,GAA4B,EAAA;AAhB3E,EAAA,IAAA,EAAA,CAAA;AAiBE,EAAO,OAAA,CAAA,CAAA,EAAA,GAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,MAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAa,UAAe,MAAA,IAAA,CAAA;AACrC,CAAA;AAEO,SAAS,oBAAoB,gBAAsC,EAAA;AACxE,EAAI,IAAA,OAAO,qBAAqB,QAAU,EAAA;AACxC,IAAO,OAAA,gBAAA,CAAA;AAAA,GACT;AACA,EACE,IAAA,CAAC,gBACD,IAAA,CAAC,KAAM,CAAA,OAAA,CAAQ,gBAAgB,CAC/B,IAAA,gBAAA,CAAiB,QAAS,CAAA,KAAK,CAC/B,EAAA;AACA,IAAO,OAAA,KAAA,CAAA,CAAA;AAAA,GACT;AACA,EAAI,IAAA,gBAAA,CAAiB,QAAS,CAAA,KAAK,CAAG,EAAA;AACpC,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACA,EAAA,IAAI,iBAAiB,QAAS,CAAA,IAAI,CAAK,IAAA,gBAAA,CAAiB,WAAW,CAAG,EAAA;AACpE,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EAAO,OAAA,gBAAA,CAAiB,OAAO,CAAC,CAAA,KAAM,MAAM,IAAI,CAAA,CAAE,KAAK,GAAG,CAAA,CAAA;AAC5D,CAAA;AAMA,SAAS,cAAiC,GAAA;AACxC,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,WAAa,EAAA,6CAAA;AAAA,IACb,WAAa,EAAA,gBAAA;AAAA;AAAA,IAEb,QAAQ,MAAM,IAAA;AAAA;AAAA,IACd,QAAU,EAAA,IAAA;AAAA,GACZ,CAAA;AACF,CAAA;AAEA,SAAS,mBAAsB,aAAoC,EAAA;AACjE,EAAO,OAAA;AAAA,IACL,WAAa,EAAA,UAAA;AAAA,IACb,IAAM,EAAA,SAAA;AAAA,IACN,aAAa,CAAe,YAAA,EAAA,aAAA,CAAA,6BAAA,CAAA;AAAA,IAC5B,gBAAkB,EAAA,KAAA;AAAA,IAClB,MAAQ,EAAA,gBAAA;AAAA,GACV,CAAA;AACF,CAAA;AAEA,SAAS,mBAAsB,aAAoC,EAAA;AACjE,EAAO,OAAA;AAAA,IACL,WAAa,EAAA,WAAA;AAAA,IACb,IAAM,EAAA,SAAA;AAAA,IACN,aAAa,CAA6B,0BAAA,EAAA,aAAA,CAAA,sIAAA,CAAA;AAAA,IAC1C,gBAAkB,EAAA,KAAA;AAAA,IAClB,QAAU,EAAA,IAAA;AAAA,IACV,MAAQ,EAAA,gBAAA;AAAA,GACV,CAAA;AACF,CAAA;AAEA,SAAS,mBAAsB,aAAoC,EAAA;AACjE,EAAO,OAAA;AAAA,IACL,WAAa,EAAA,UAAA;AAAA,IACb,IAAM,EAAA,SAAA;AAAA,IACN,aAAa,CAAyC,sCAAA,EAAA,aAAA,CAAA,wBAAA,CAAA;AAAA,IACtD,gBAAkB,EAAA,KAAA;AAAA,IAClB,QAAU,EAAA,IAAA;AAAA;AAAA,IAEV,QAAQ,MAAM,IAAA;AAAA;AAAA,GAChB,CAAA;AACF,CAAA;AAEA,SAAS,oBAAuB,aAAoC,EAAA;AAClE,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,SAAA;AAAA,IACN,aAAa,CAAe,YAAA,EAAA,aAAA,CAAA,gCAAA,CAAA;AAAA,IAC5B,gBAAkB,EAAA,KAAA;AAAA,IAClB,QAAU,EAAA,IAAA;AAAA,IACV,MAAQ,EAAA,SAAA;AAAA,GACV,CAAA;AACF,CAAA;AAEA,SAAS,oBAAuB,aAAoC,EAAA;AAClE,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,WAAa,EAAA,YAAA;AAAA,IACb,aAAa,CAAwE,qEAAA,EAAA,aAAA,CAAA,CAAA;AAAA,IACrF,QAAU,EAAA,IAAA;AAAA,IACV,MAAQ,EAAA,SAAA;AAAA,GACV,CAAA;AACF,CAAA;AAEA,SAAS,kBAAqC,GAAA;AAC5C,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,MAAA;AAAA,IACN,eAAiB,EAAA,IAAA;AAAA,GACnB,CAAA;AACF,CAAA;AAEgB,SAAA,cAAA,CACd,eACA,SACA,EAAA;AACA,EAAA,MAAM,WAA2C,GAAA;AAAA,IAC/C,MAAM,cAAkB,EAAA;AAAA,IACxB,QAAA,EAAU,mBAAmB,aAAa,CAAA;AAAA,IAC1C,UAAA,EAAY,mBAAmB,aAAa,CAAA;AAAA,IAC5C,QAAA,EAAU,mBAAmB,aAAa,CAAA;AAAA,IAC1C,UAAA,EAAY,mBAAmB,aAAa,CAAA;AAAA,IAC5C,SAAA,EAAW,oBAAoB,aAAa,CAAA;AAAA,IAC5C,YAAA,EAAc,oBAAoB,aAAa,CAAA;AAAA,IAC/C,QAAA,EAAU,mBAAmB,aAAa,CAAA;AAAA,IAC1C,UAAA,EAAY,mBAAmB,aAAa,CAAA;AAAA,IAC5C,UAAU,kBAAmB,EAAA;AAAA;AAAA,IAE7B,KAAO,EAAA;AAAA,MACL,IAAM,EAAA,QAAA;AAAA,MACN,QAAU,EAAA,IAAA;AAAA,MACV,WAAa,EAAA,eAAA;AAAA,MACb,gBAAkB,EAAA,cAAA;AAAA,MAClB,aAAa,CAA4B,yBAAA,EAAA,aAAA,CAAA,CAAA;AAAA,MACzC,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,QAAA;AAAA,MACN,WAAa,EAAA,yDAAA;AAAA,MACb,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,QAAA;AAAA,MACN,WAAa,EAAA,yDAAA;AAAA,MACb,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,QAAA;AAAA,MACN,WACE,EAAA,kEAAA;AAAA,MACF,QACE,EAAA,qGAAA;AAAA,MACF,SAAA,EAAW,CAAC,KAAkB,KAAA;AAC5B,QAAI,IAAA;AACF,UAAA,IAAI,OAAO,KAAK,CAAA,CAAA;AAChB,UAAO,OAAA,IAAA,CAAA;AAAA,iBACA,KAAP,EAAA;AACA,UAAO,OAAA,eAAA,CAAA;AAAA,SACT;AAAA,OACF;AAAA,MACA,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,IAAM,EAAA,QAAA;AAAA,MACN,gBAAkB,EAAA,MAAA;AAAA,MAClB,SAAS,CAAC,MAAA,EAAQ,UAAU,KAAO,EAAA,KAAA,EAAO,SAAS,UAAU,CAAA;AAAA,MAC7D,WACE,EAAA,6JAAA;AAAA,MACF,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,QAAA;AAAA,MACN,WACE,EAAA,qHAAA;AAAA,MACF,OAAS,EAAA;AAAA,QACP,MAAA;AAAA,QACA,MAAA;AAAA,QACA,KAAA;AAAA,QACA,KAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,OACF;AAAA,MACA,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,YAAc,EAAA;AAAA,MACZ,IAAM,EAAA,QAAA;AAAA,MACN,QAAU,EAAA,IAAA;AAAA,MACV,WAAa,EAAA,IAAA;AAAA,MACb,MAAQ,EAAA,SAAA;AAAA,MACR,WAAa,EAAA,uDAAA;AAAA,MACb,QACE,EAAA,6IAAA;AAAA,MACF,OAAS,EAAA;AAAA,QACP,IAAA;AAAA,QACA,KAAA;AAAA,QACA,MAAA;AAAA,QACA,kBAAA;AAAA,QACA,YAAA;AAAA,QACA,iBAAA;AAAA,QACA,aAAA;AAAA,QACA,kBAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAA;AAAA,QACA,UAAA;AAAA,QACA,cAAA;AAAA,QACA,kBAAA;AAAA,QACA,eAAA;AAAA,QACA,oBAAA;AAAA,QACA,cAAA;AAAA,QACA,gBAAA;AAAA,QACA,UAAA;AAAA,QACA,SAAA;AAAA,QACA,eAAA;AAAA,QACA,eAAA;AAAA,QACA,eAAA;AAAA,QACA,gBAAA;AAAA,QACA,gBAAA;AAAA,QACA,gBAAA;AAAA,QACA,gBAAA;AAAA,QACA,SAAA;AAAA,QACA,cAAA;AAAA,QACA,aAAA;AAAA,QACA,SAAA;AAAA,QACA,eAAA;AAAA,QACA,oBAAA;AAAA,QACA,gBAAA;AAAA,QACA,WAAA;AAAA,QACA,QAAA;AAAA,QACA,cAAA;AAAA,QACA,aAAA;AAAA,QACA,QAAA;AAAA,QACA,SAAA;AAAA,QACA,sBAAA;AAAA,QACA,oBAAA;AAAA,QACA,UAAA;AAAA,QACA,MAAA;AAAA,QACA,UAAA;AAAA,QACA,YAAA;AAAA,QACA,WAAA;AAAA,QACA,KAAA;AAAA,QACA,KAAA;AAAA,QACA,kBAAA;AAAA,QACA,cAAA;AAAA,QACA,eAAA;AAAA,QACA,WAAA;AAAA,QACA,kBAAA;AAAA,QACA,kBAAA;AAAA,QACA,eAAA;AAAA,QACA,MAAA;AAAA,QACA,KAAA;AAAA,QACA,OAAA;AAAA,QACA,UAAA;AAAA,OACF;AAAA,KACF;AAAA,IACA,kBAAoB,EAAA;AAAA,MAClB,IAAM,EAAA,QAAA;AAAA,MACN,OAAA,EAAS,CAAC,QAAA,EAAU,MAAM,CAAA;AAAA,MAC1B,WACE,EAAA,gKAAA;AAAA,MACF,gBAAkB,EAAA,QAAA;AAAA,MAClB,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MAC5C,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACjD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACjD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,aAAe,EAAA;AAAA,MACb,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,WAAa,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,MACjD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACpD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACpD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACpD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,KAAO,EAAA;AAAA,MACL,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACpD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACpD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,kBAAoB,EAAA;AAAA,MAClB,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,kBAAoB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACvD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,gBAAkB,EAAA;AAAA,MAChB,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,kBAAoB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACvD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,mBAAqB,EAAA;AAAA,MACnB,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,kBAAoB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACvD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,gBAAkB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACrD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,aAAe,EAAA;AAAA,MACb,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACjD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,cAAA;AAAA,MACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,MACjD,QAAU,EAAA,IAAA;AAAA,MACV,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,IACA,WAAa,EAAA;AAAA,MACX,IAAM,EAAA,QAAA;AAAA,KACR;AAAA,GACF,CAAA;AAGA,EAAA,MAAM,gBAAuD,EAAC,CAAA;AAC9D,EAAU,SAAA,CAAA,OAAA,CAAQ,CAAC,QAAa,KAAA;AAC9B,IAAA,IAAI,OAAO,SAAU,CAAA,cAAA,CAAe,IAAK,CAAA,WAAA,EAAa,QAAQ,CAAG,EAAA;AAC/D,MAAc,aAAA,CAAA,QAAQ,CAAI,GAAA,WAAA,CAAY,QAAkB,CAAA,CAAA;AAAA,KAC1D;AAAA,GACD,CAAA,CAAA;AAED,EAAO,OAAA,aAAA,CAAA;AACT,CAAA;AAMgB,SAAA,mBAAA,CACd,eACA,SACa,EAAA;AACb,EAAO,OAAAA,gBAAA,CAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,aAAa,CAA4B,yBAAA,EAAA,aAAA,CAAA,kDAAA,CAAA;AAAA,IACzC,OAAS,EAAA;AAAA,MACP,QAAA;AAAA,MACA,aAAA;AAAA,MACA,cAAA;AAAA,MACA,cAAA;AAAA,MACA,YAAA;AAAA,MACA,KAAA;AAAA,MACA,UAAA;AAAA,MACA,WAAA;AAAA,MACA,WAAA;AAAA,MACA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,UAAA;AAAA,MACA,aAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,cAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,cAAA;AAAA,MACA,KAAA;AAAA,MACA,SAAA;AAAA,MACA,YAAA;AAAA,KACF;AAAA,GAAA,EACI,gCAAa,EAAC,CAAA,CAAA;AAEtB,CAAA;AAEgB,SAAA,gBAAA,CACd,eACA,SACa,EAAA;AACb,EAAO,OAAAA,gBAAA,CAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,WAAa,EAAA,QAAA;AAAA,IACb,aAAa,CAA6D,0DAAA,EAAA,aAAA,CAAA,gBAAA,CAAA;AAAA,IAC1E,QAAU,EAAA,IAAA;AAAA,GAAA,EACN,gCAAa,EAAC,CAAA,CAAA;AAEtB,CAAA;AAEgB,SAAA,0BAAA,CACd,eACA,SACa,EAAA;AACb,EAAO,OAAAA,gBAAA,CAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,aAAa,CAAkD,+CAAA,EAAA,aAAA,CAAA,qHAAA,CAAA;AAAA,IAC/D,QAAU,EAAA,IAAA;AAAA,GAAA,EACN,gCAAa,EAAC,CAAA,CAAA;AAEtB,CAAA;AAEgB,SAAA,qBAAA,CACd,eACA,SACa,EAAA;AACb,EAAO,OAAAA,gBAAA,CAAA;AAAA,IACL,IAAM,EAAA,QAAA;AAAA,IACN,aAAa,CAAkE,+DAAA,EAAA,aAAA,CAAA,wBAAA,CAAA;AAAA,IAC/E,QAAU,EAAA,IAAA;AAAA,GAAA,EACN,gCAAa,EAAC,CAAA,CAAA;AAEtB,CAAA;AAEgB,SAAA,qBAAA,CACd,eACA,SACA,EAAA;AACA,EAAA,MAAM,WAA2C,GAAA;AAAA,IAC/C,SAAW,EAAA,mBAAA,CAAuB,aAAe,EAAA,SAAA,CAAU,WAAW,CAAC,CAAA;AAAA,IACvE,MAAQ,EAAA,gBAAA,CAAoB,aAAe,EAAA,SAAA,CAAU,QAAQ,CAAC,CAAA;AAAA,IAC9D,gBAAkB,EAAA,0BAAA;AAAA,MAChB,aAAA;AAAA,MACA,UAAU,kBAAkB,CAAA;AAAA,KAC9B;AAAA,IACA,WAAa,EAAA,qBAAA;AAAA,MACX,aAAA;AAAA,MACA,UAAU,aAAa,CAAA;AAAA,KACzB;AAAA,GACF,CAAA;AACA,EAAO,OAAA,WAAA,CAAA;AACT,CAAA;AAEO,MAAM,SAA4B,GAAA;AAAA,EACvC,IAAM,EAAA,MAAA;AAAA,EACN,UAAU,EAAC;AAAA,EACX,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,CAAA;AAAA,IACP,MAAQ,EAAA,CAAA;AAAA,IACR,OAAS,EAAA,CAAA;AAAA,IACT,eAAiB,EAAA,KAAA;AAAA,IACjB,gBAAkB,EAAA,KAAA;AAAA,IAClB,cAAgB,EAAA,KAAA;AAAA,IAChB,eAAiB,EAAA,OAAA;AAAA,IACjB,gBAAkB,EAAA,OAAA;AAAA,IAClB,cAAgB,EAAA,OAAA;AAAA,IAChB,eAAiB,EAAA,aAAA;AAAA,IACjB,gBAAkB,EAAA,aAAA;AAAA,IAClB,cAAgB,EAAA,OAAA;AAAA,GAClB;AACF,CAAA,CAAA;AAEa,MAAA,aAAA,GAA+B,EAAE,SAAA,EAAW,YAAa,EAAA;;ACxetE,MAAM,wBAA2B,GAAA;AAAA,EAC/B,OAAS,EAAA;AAAA,IACP,WAAa,EAAA,gBAAA;AAAA,IACb,WAAa,EAAA,SAAA;AAAA,GACf;AAAA,EACA,OAAS,EAAA;AAAA,IACP,WAAa,EAAA,gBAAA;AAAA,IACb,WAAa,EAAA,SAAA;AAAA,GACf;AAAA,EACA,OAAS,EAAA;AAAA,IACP,WAAa,EAAA,gBAAA;AAAA,IACb,WAAa,EAAA,SAAA;AAAA,GACf;AAAA,EACA,YAAc,EAAA;AAAA,IACZ,WAAa,EAAA,sBAAA;AAAA,IACb,WAAa,EAAA,eAAA;AAAA,GACf;AAAA,EACA,QAAU,EAAA;AAAA,IACR,WAAa,EAAA,iBAAA;AAAA,IACb,WAAa,EAAA,UAAA;AAAA,GACf;AAAA,EACA,QAAU,EAAA;AAAA,IACR,WAAa,EAAA,iBAAA;AAAA,IACb,WAAa,EAAA,UAAA;AAAA,GACf;AAAA,EACA,QAAU,EAAA;AAAA,IACR,WAAa,EAAA,iBAAA;AAAA,IACb,WAAa,EAAA,WAAA;AAAA,GACf;AAAA,EACA,QAAU,EAAA;AAAA,IACR,WAAa,EAAA,iBAAA;AAAA,IACb,WAAa,EAAA,UAAA;AAAA,GACf;AAAA,EACA,aAAe,EAAA;AAAA,IACb,WAAa,EAAA,sBAAA;AAAA,IACb,WAAa,EAAA,eAAA;AAAA,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAe,EAAA;AAAA,IACb,WAAa,EAAA,uBAAA;AAAA,IACb,WAAa,EAAA,kBAAA;AAAA,GACf;AAAA,EACA,cAAgB,EAAA;AAAA,IACd,WAAa,EAAA,wBAAA;AAAA,IACb,WAAa,EAAA,mBAAA;AAAA,GACf;AAAA,EACA,YAAc,EAAA;AAAA,IACZ,WAAa,EAAA,sBAAA;AAAA,IACb,WAAa,EAAA,iBAAA;AAAA,GACf;AAAA,EACA,eAAiB,EAAA;AAAA,IACf,WAAa,EAAA,yBAAA;AAAA,IACb,WAAa,EAAA,oBAAA;AAAA,GACf;AACF,CAAA,CAAA;AA4BA,SAAS,eAAyC,CAAA;AAAA,EAChD,QAAA;AAAA,EACA,OAAA;AAAA,EACA,aAAA;AACF,CAIG,EAAA;AACD,EAAA,KAAA,CAAM,UAAU,MAAM;AACpB,IAAA,IAAI,aAAe,EAAA;AACjB,MAAA,aAAA,CAAc,OAAO,CAAA,CAAA;AAAA,KACvB;AAAA,GACC,EAAA,CAAC,OAAS,EAAA,aAAa,CAAC,CAAA,CAAA;AAC3B,EAAO,OAAA,QAAA,CAAA;AACT,CAAA;AAEA,SAAS,sBAAA,CACP,QACA,EAAA,OAAA,EACA,aACA,EAAA;AACA,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,EAAgB,OAAkB,EAAA,aAAA,EAAA,EAChC,QACH,CAAA,CAAA;AAEJ,CAAA;AAEO,SAAS,0BACd,IAIA,EAAA;AACA,EAAO,OAAA;AAAA,IACL,UAAU,MAAO,CAAA,WAAA;AAAA,MACf,IAAA,CAAK,IAAI,CAAC,GAAA,KAAQ,CAAC,GAAK,EAAA,wBAAA,CAAyB,GAAG,CAAC,CAAC,CAAA;AAAA,KACxD;AAAA,IACA,kBAAoB,EAAA,sBAAA;AAAA,GACtB,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA,MAAM,eAAkB,GAAA;AAAA,EACtB,SAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,eAAe,CAAA,CAAA;AAsBpC,MAAM,aAAa,KAAM,CAAA,UAAA,CAAW,SAAS,eAAA,CAClD,OACA,GACA,EAAA;AACA,EAAM,MAAA,EAAE,MAAS,GAAA,KAAA,CAAA;AAEjB,EAAA,IAAI,IAAM,EAAA;AACR,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,KAAA;AAAA,QACA,GAAA;AAAA,OAAA;AAAA,KACF,CAAA;AAAA,GAEG,MAAA;AACL,IAAA,MACE,EADM,GAAA,KAAA,EAAA,EAAA,WAAA,EAAa,UAAY,EAAA,QAAA,EAAU,oBA3D/C,EAAA,GA4DM,EADkE,EAAA,IAAA,GAAAC,WAAA,CAClE,EADkE,EAAA,CAA5D,aAAa,EAAA,YAAA,EAAY,UAAU,EAAA,sBAAA,CAAA,CAAA,CAAA;AAE3C,IAAA,MAAM,IAAO,GAAA,WAAA,GAAc,QAAW,GAAA,UAAA,GAAa,OAAU,GAAA,QAAA,CAAA;AAE7D,IAAM,MAAA,WAAA,GAAc,WAAW,IAAM,EAAA;AAAA,MACnC,IAAA;AAAA,MACA,KAAO,EAAA,aAAA;AAAA,MACP,GAAA;AAAA,KACD,CAAA,CAAA;AAED,IACE,uBAAA,KAAA,CAAA,aAAA,CAAC,MAAW,EAAAH,gBAAA,CAAA,EAAA,EAAA,WAAA,CAAA,EACT,CAAC,EAAE,WAAW,SAAW,EAAA,SAAA,EAAW,cAAgB,EAAA,UAAA,EACnD,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KAGN,CAAA,CAAA;AAAA,GAEJ;AACF,CAAC,CAAA,CAAA;AAED,SAAS,UAAW,CAAA;AAAA,EAClB,KAAA;AAAA,EACA,GAAA;AACF,CAGG,EAAA;AACD,EAA0D,MAAA,EAAA,GAAA,KAAA,EAAlD,EAAM,IAAA,EAAA,QAAA,EAAU,oBAhG1B,EAAA,GAgG4D,IAAT,IAAS,GAAAC,WAAA,CAAA,EAAA,EAAT,CAAzC,MAAA,EAAM,UAAU,EAAA,sBAAA,CAAA,CAAA,CAAA;AACxB,EAAA,MAAM,cAAc,cAAe,EAAA,CAAA;AACnC,EAAA,MAAM,EAAE,SAAW,EAAA,SAAA,EAAc,GAAA,OAAA,CAAQ,OAAO,GAAG,CAAA,CAAA;AACnD,EAAA,MAAM,EAAE,UAAA,EAAY,SAAU,EAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAChD,EAAA,MAAM,EAAE,UAAA,EAAY,SAAW,EAAA,cAAA,KAAmB,YAAa,EAAA,CAAA;AAE/D,EAAA,MAAM,iBAAoB,GAAA,UAAA,CAAW,SAAW,EAAA,UAAA,EAAY,UAAY,EAAA;AAAA,IACtE,IAAA;AAAA,IACA,WAAW,KAAM,CAAA,SAAA;AAAA,IACjB,KAAO,EAAA,aAAA;AAAA,IACP,GAAA;AAAA,GACD,CAAA,CAAA;AAED,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EACK,iBADL,CAAA,EAAA;AAAA,MAEC,gBAAc,SAAa,IAAA,KAAA,CAAA;AAAA,MAC3B,gBAAc,SAAa,IAAA,KAAA,CAAA;AAAA,MAC3B,gBAAc,SAAa,IAAA,KAAA,CAAA;AAAA,MAC3B,sBAAoB,cAAkB,IAAA,KAAA,CAAA;AAAA,MACtC,eAAA,EAAe,MAAM,UAAc,IAAA,KAAA,CAAA;AAAA,KAAA,CAAA;AAAA,IAElCE,oBAAA;AAAA,MACC,QAAA;AAAA,MACA;AAAA,QACE,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,QAAA,EAAU,CAAC,CAAC,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GACF,CAAA;AAEJ,CAAA;AAEa,MAAA,qBAAA,GAAwB,kBAAkB,QAAQ,CAAA,CAAA;AAE/C,SAAA,cAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,qBAAA;AAAA,MACN,WAAa,EAAA,aAAA;AAAA,MACb,UAAY,EAAA,+CAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,gBACZD,UAAA;AAAA,MACA,aAAe,EAAA;AAAA;AAAA,QAEb,eAAiB,EAAA,SAAA;AAAA,QACjB,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,KAAA;AAAA,QACb,KAAO,EAAA,SAAA;AAAA,QACP,MAAQ,EAAA,SAAA;AAAA,QACR,UAAY,EAAA,OAAA;AAAA,QACZ,QAAU,EAAA,MAAA;AAAA,QACV,UAAY,EAAA,KAAA;AAAA,QACZ,OAAS,EAAA,UAAA;AAAA,QACT,kBAAoB,EAAA,MAAA;AAAA,OACtB;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAgC,QAAU,EAAA;AAAA,QAC3C,WAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,OACD,CALI,CAAA,EAAA;AAAA,QAML,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,QAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,IAAM,EAAA;AAAA,UACJ,IAAM,EAAA,MAAA;AAAA,UACN,WACE,EAAA,8EAAA;AAAA,SACJ;AAAA,QACA,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,QAAA;AAAA,UACN,OAAS,EAAA,CAAC,QAAU,EAAA,OAAA,EAAS,WAAW,MAAM,CAAA;AAAA,UAC9C,WACE,EAAA,sFAAA;AAAA,UACF,MAAQ,EAAA,CAAC,KAAU,KAAA,CAAC,KAAM,CAAA,IAAA;AAAA,UAC1B,gBAAkB,EAAA,OAAA;AAAA,SACpB;AAAA,QACA,WAAa,EAAA;AAAA,UACX,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,eAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,UAClB,MAAA,EAAQ,CAAC,KAAU,KAAA,OAAA,CAAQ,MAAM,UAAU,CAAA,IAAK,OAAQ,CAAA,KAAA,CAAM,IAAI,CAAA;AAAA,UAClE,WACE,EAAA,gEAAA;AAAA,UACF,QAAU,EAAA,IAAA;AAAA,SACZ;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,cAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,UAClB,MAAA,EAAQ,CAAC,KAAU,KAAA,OAAA,CAAQ,MAAM,WAAW,CAAA,IAAK,OAAQ,CAAA,KAAA,CAAM,IAAI,CAAA;AAAA,UACnE,WACE,EAAA,+DAAA;AAAA,UACF,QAAU,EAAA,IAAA;AAAA,SACZ;AAAA,QACA,OAAS,EAAA;AAAA,UACP,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,QACA,OAAS,EAAA;AAAA,UACP,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,OACF,CAAA;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;ACzMa,MAAA,uBAAA,GAA0B,KAAM,CAAA,aAAA,CAE3C,KAAS,CAAA,CAAA,CAAA;AAEE,MAAA,2BAAA,GAA8B,KAAM,CAAA,aAAA,CAK/C,KAAS,CAAA,CAAA,CAAA;AAEE,MAAA,wBAAA,GAA2B,KAAM,CAAA,aAAA,CAK5C,KAAS,CAAA,CAAA,CAAA;AAEE,MAAA,2BAAA,GAA8B,KAAM,CAAA,aAAA,CAE/C,KAAS,CAAA,CAAA,CAAA;AAME,MAAA,oBAAA,GACX,KAAM,CAAA,aAAA,CAA2D,KAAS,CAAA,CAAA,CAAA;AAEzC,KAAM,CAAA,aAAA,CAEvC,KAAS,CAAA,EAAA;AAEE,MAAA,4BAAA,GAA+B,KAAM,CAAA,aAAA,CAEhD,KAAS,CAAA,CAAA,CAAA;AAEE,MAAA,qBAAA,GAAwB,KAAM,CAAA,aAAA,CAKzC,KAAS,CAAA,CAAA,CAAA;AAE0B,KAAM,CAAA,aAAA,CAEzC,KAAS,CAAA,EAAA;AAEE,MAAA,mBAAA,GAAsB,KAAM,CAAA,aAAA,CAEvC,KAAS,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDX,MAAM,iBAAoB,GAAA;AAAA,EACxB,SAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,eAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAaA,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,iBAAiB,CAAA,CAAA;AAEtC,SAAS,aAAa,KAA0B,EAAA;AACrD,EAAA,MAMI,EALF,GAAA,KAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,oBAAA;AAAA,IACA,qBAAA;AAAA,IACA,KAAA;AAAA,GA/CJ,GAiDM,EADC,EAAA,IAAA,GAAAC,WAAA,CACD,EADC,EAAA;AAAA,IAJH,UAAA;AAAA,IACA,sBAAA;AAAA,IACA,uBAAA;AAAA,IACA,OAAA;AAAA,GAAA,CAAA,CAAA;AAGF,EAAM,MAAA,YAAA,GAAe,KAAM,CAAA,UAAA,CAAW,2BAA2B,CAAA,CAAA;AACjE,EAAA,MAAM,eAAe,CAAC,YAAA,CAAA;AAEtB,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,QAA6B,EAAA,CAAA;AAErE,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,EAAC,6CAAc,SAAW,CAAA,EAAA;AAC5B,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,MAAM,OAAU,GAAA,YAAA,CAAa,SAAU,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AACrD,IAAA,eAAA,CAAgB,OAAO,CAAA,CAAA;AAEvB,IAAA,OAAO,MAAM;AACX,MAAa,YAAA,CAAA,SAAA,CAAU,WAAW,OAAO,CAAA,CAAA;AACzC,MAAA,eAAA,CAAgB,KAAS,CAAA,CAAA,CAAA;AAAA,KAC3B,CAAA;AAAA,GACC,EAAA,CAAC,KAAO,EAAA,YAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAc,SAAS,CAAC,CAAA,CAAA;AAEnC,EAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,IACtB,MAAQ,EAAA,YAAA;AAAA,IACR,UAAU,MAAM;AACd,MAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,QAAO,OAAA,uBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,OAAO,UAAU,QAAU,EAAA;AAC7B,QAAO,OAAA,wBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,KAAM,CAAA,IAAA,EAAQ,EAAA;AACjB,QAAO,OAAA,uBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,YAAgB,IAAA,KAAA,IAAS,YAAc,EAAA;AAC1C,QAAO,OAAA,sBAAA,CAAA;AAAA,OACT;AACA,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACN,GAAA;AAAA,GACL,CAAA,CAAA;AAEA,EAAA,uBAEI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EACK,IADL,CAAA,EAAA;AAAA,MAEC,KAAO,EAAA,YAAA;AAAA,MACP,GAAK,EAAA,YAAA;AAAA,MACL,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,CAAC;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,cAAA;AAAA,MACA,UAAA;AAAA,MACA,eAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,KAEA,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,QAAU,EAAA,UAAA;AAAA,QACV,aAAe,EAAA,eAAA;AAAA,QACf,QAAU,EAAA,UAAA;AAAA,QACV,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAGN,CAAA,CAAA;AAEJ,CAAA;AAEO,MAAM,8BAA8B,CAAC;AAAA,EAC1C,KAAA;AAAA,EACA,QAAA;AACF,CAGuB,MAAA;AAAA,EACrB,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,OAAS,EAAA,MAAA;AAAA,IACT,UAAY,EAAA,QAAA;AAAA,IACZ,GAAK,EAAA,KAAA;AAAA,IACL,OAAS,EAAA,CAAA;AAAA,GACX;AAAA,EACA,QAAU,EAAA;AAAA,IACR;AAAA,MACE,IAAM,EAAA,MAAA;AAAA,MACN,MAAQ,EAAA;AAAA,QACN,OAAS,EAAA,MAAA;AAAA,QACT,UAAY,EAAA,QAAA;AAAA,QACZ,GAAK,EAAA,MAAA;AAAA,QACL,OAAS,EAAA,CAAA;AAAA,OACX;AAAA,MACA,QAAU,EAAA;AAAA,QACR;AAAA,UACE,IAAM,EAAA,KAAA;AAAA,UACN,MAAQ,EAAA;AAAA,YACN,KAAO,EAAA,KAAA;AAAA,YACP,MAAQ,EAAA,KAAA;AAAA,YACR,YAAc,EAAA,KAAA;AAAA,YACd,WAAa,EAAA,KAAA;AAAA,YACb,WAAa,EAAA,OAAA;AAAA,YACb,WAAa,EAAA,OAAA;AAAA,WACf;AAAA,SACF;AAAA,QACA;AAAA,UACE,IAAM,EAAA,MAAA;AAAA,UACN,KAAO,EAAA,KAAA;AAAA,SACT;AAAA,OACF;AAAA,KACF;AAAA,IACA,GAAI,QACA,GAAA;AAAA,MACE;AAAA,QACE,IAAM,EAAA,MAAA;AAAA,QACN,KAAO,EAAA,oDAAA;AAAA,OACT;AAAA,QAEF,EAAC;AAAA,GACP;AACF,CAAA,CAAA,CAAA;AAEa,MAAA,uBAAA,GAA0B,kBAAkB,UAAU,CAAA,CAAA;AAEnD,SAAA,gBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,YAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,uBAAA;AAAA,MACN,WAAa,EAAA,eAAA;AAAA,MACb,UAAY,EAAA,iDAAA;AAAA,MACZ,UAAY,EAAA,cAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAkC,UAAY,EAAA;AAAA,QAC/C,MAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,WAAA;AAAA,OACD,CARI,CAAA,EAAA;AAAA,QASL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,cAAc,2BAA4B,CAAA;AAAA,YACxC,KAAO,EAAA,OAAA;AAAA,YACP,QAAU,EAAA,IAAA;AAAA,WACX,CAAA;AAAA,SACH;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,WACE,EAAA,mFAAA;AAAA,UACF,gBAAkB,EAAA,+BAAA;AAAA,UAClB,SAAW,EAAA,CAAC,MAAQ,EAAA,MAAA,EAAQ,GAAQ,KAAA;AAClC,YAAA,IAAI,2BAAK,OAAS,EAAA;AAChB,cAAA,OAAO,GAAI,CAAA,OAAA,CAAA;AAAA,aACb;AACA,YAAO,OAAA,IAAA,CAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,kBAAA;AAAA,UACb,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,iBAAA;AAAA,UAClB,WAAa,EAAA,oDAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,UAClB,YAAc,EAAA,KAAA;AAAA,UACd,MAAQ,EAAA,SAAA;AAAA,SACV;AAAA,QACA,eAAiB,EAAA;AAAA,UACf,WAAa,EAAA,eAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WACE,EAAA,yQAAA;AAAA,UACF,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,SAAW,EAAA;AAAA,UACT,WAAa,EAAA,SAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,oCAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,kBAAoB,EAAA;AAAA,UAClB,IAAM,EAAA,QAAA;AAAA,UACN,OAAA,EAAS,CAAC,QAAA,EAAU,MAAM,CAAA;AAAA,UAC1B,WACE,EAAA,gKAAA;AAAA,UACF,gBAAkB,EAAA,QAAA;AAAA,SACpB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SACpD;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,YAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,SAAA;AAAA,UACd,MAAQ,EAAA,SAAA;AAAA,SACV;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;AC5QO,MAAM,oBAAqB,CAAA;AAAA,EAA3B,WAAA,GAAA;AACL,IAAiB,IAAA,CAAA,IAAA,uBAAwB,GAAI,EAAA,CAAA;AAC7C,IAAiB,IAAA,CAAA,UAAA,uBAAgC,GAAI,EAAA,CAAA;AAAA,GAAA;AAAA,EAE7C,mBAAA,CAAoB,EAAY,EAAA,KAAA,GAAQ,CAAW,EAAA;AACzD,IAAM,MAAA,KAAA,GAAQ,GAAG,EAAgB,CAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACjC,IAAA,IAAI,IAAK,CAAA,IAAA,CAAK,GAAI,CAAA,KAAK,CAAG,EAAA;AACxB,MAAA,OAAO,IAAK,CAAA,mBAAA,CAAoB,EAAI,EAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAAA,KACxC,MAAA;AACL,MAAO,OAAA,KAAA,CAAA;AAAA,KACT;AAAA,GACF;AAAA,EAEQ,iBAAA,CAAkB,QAAQ,CAAW,EAAA;AAC3C,IAAA,MAAM,YAAY,CAAW,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAC7B,IAAA,IAAI,IAAK,CAAA,IAAA,CAAK,GAAI,CAAA,SAAS,CAAG,EAAA;AAC5B,MAAO,OAAA,IAAA,CAAK,iBAAkB,CAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAAA,KAClC,MAAA;AACL,MAAO,OAAA,SAAA,CAAA;AAAA,KACT;AAAA,GACF;AAAA,EAEA,SAAS,EAAsB,EAAA;AAC7B,IAAA,MAAM,QAAQ,EAAO,KAAA,KAAA,CAAA,GAAY,SAAY,MAAO,CAAA,EAAE,EAAE,IAAK,EAAA,CAAA;AAC7D,IAAI,IAAA,KAAA,CAAA;AAEJ,IAAA,IAAI,CAAC,KAAO,EAAA;AAEV,MAAA,KAAA,GAAQ,KAAK,iBAAkB,EAAA,CAAA;AAAA,KACtB,MAAA,IAAA,IAAA,CAAK,IAAK,CAAA,GAAA,CAAI,KAAK,CAAG,EAAA;AAE/B,MAAQ,KAAA,GAAA,IAAA,CAAK,oBAAoB,KAAK,CAAA,CAAA;AAAA,KACjC,MAAA;AAEL,MAAQ,KAAA,GAAA,KAAA,CAAA;AAAA,KACV;AAEA,IAAK,IAAA,CAAA,IAAA,CAAK,IAAI,KAAK,CAAA,CAAA;AACnB,IAAA,IAAA,CAAK,MAAO,EAAA,CAAA;AACZ,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAAA,EAEA,WAAW,EAAY,EAAA;AACrB,IAAK,IAAA,CAAA,IAAA,CAAK,OAAO,EAAE,CAAA,CAAA;AACnB,IAAA,IAAA,CAAK,MAAO,EAAA,CAAA;AAAA,GACd;AAAA,EAEA,UAAU,QAAoB,EAAA;AAC5B,IAAK,IAAA,CAAA,UAAA,CAAW,IAAI,QAAQ,CAAA,CAAA;AAC5B,IAAA,QAAA,CAAS,KAAK,GAAG,CAAA,CAAA;AAAA,GACnB;AAAA;AAAA,EAGA,MAAS,GAAA;AACP,IAAA,IAAA,CAAK,WAAW,OAAQ,CAAA,CAAC,aAAa,QAAS,CAAA,IAAA,CAAK,GAAG,CAAC,CAAA,CAAA;AAAA,GAC1D;AAAA,EAEA,IAAI,GAAgB,GAAA;AAClB,IAAO,OAAA,KAAA,CAAM,IAAK,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;AAAA,GAC7B;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDO,SAAS,SAAS,EAAmD,EAAA;AAAnD,EAAE,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,EAAU,MAAM,SAZ3C,EAAA,GAYyB,IAAgC,IAAhC,GAAAG,WAAA,CAAA,EAAA,EAAgC,CAA9B,UAAA,EAAU,MAAM,EAAA,WAAA,CAAA,CAAA,CAAA;AACzC,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,IAAA;AAAA,IACKJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,uBAAA,CAAwB,IAAI,CADjC,CAAA,EAAA;AAAA,MAEC,IAAA;AAAA,MACA,SAAA;AAAA,MACA,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AAEa,MAAA,mBAAA,GAAsB,kBAAkB,MAAM,CAAA,CAAA;AAE3C,SAAA,YAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,QAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,mBAAA;AAAA,MACN,WAAa,EAAA,WAAA;AAAA,MACb,UAAY,EAAA,6CAAA;AAAA,MACZ,UAAY,EAAA,UAAA;AAAA,MACZ,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,cAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,IAAM,EAAA;AAAA,UACJ,IAAM,EAAA,QAAA;AAAA,UACN,OAAA,EAAS,CAAC,OAAA,EAAS,aAAa,CAAA;AAAA,UAChC,gBAAkB,EAAA,OAAA;AAAA,UAClB,YAAc,EAAA,OAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;ACpDa,MAAA,0BAAA,GAA6B,kBAAkB,aAAa,CAAA,CAAA;AAEzD,SAAA,mBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,YAAA,CAAa,MAAQ,EAAAD,eAAA,CAAAC,gBAAA,CAAA,EAAA,EACvB,SADuB,CAAA,EAAA;AAAA,IAE1B,IAAM,EAAA,0BAAA;AAAA,IACN,WAAa,EAAA,kBAAA;AAAA,IACb,KAAO,EAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,IAAM,EAAA,QAAA;AAAA,QACN,QAAQ,MAAM,IAAA;AAAA,QACd,YAAc,EAAA,aAAA;AAAA,OAChB;AAAA,KACF;AAAA,GACD,CAAA,CAAA,CAAA;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdO,SAAS,UAAU,EAA8C,EAAA;AAA9C,EAAA,IAAA,EAAA,GAAA,EAAA,EAAE,YAAU,SAXtC,EAAA,GAW0B,IAA0B,IAA1B,GAAAG,WAAA,CAAA,EAAA,EAA0B,CAAxB,UAAU,EAAA,WAAA,CAAA,CAAA,CAAA;AACpC,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IACKJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,uBAAA,CAAwB,IAAI,CADjC,CAAA,EAAA;AAAA,MAEC,SAAA;AAAA,MACA,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AACa,MAAA,oBAAA,GAAuB,kBAAkB,OAAO,CAAA,CAAA;AAE7C,SAAA,aAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,oBAAA;AAAA,MACN,WAAa,EAAA,YAAA;AAAA,MACb,UAAY,EAAA,8CAAA;AAAA,MACZ,UAAY,EAAA,WAAA;AAAA,MACZ,aAAe,EAAA;AAAA,QACb,MAAQ,EAAA,SAAA;AAAA,OACV;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,OAAA;AAAA,WACT;AAAA,SACF;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA,MAAM,uBAAA,GAA0B,CAAC,UAAA,EAAqB,UAAmB,CAAA,CAAA;AASzE,MAAM,YAAEC,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,uBAAA;AACF,CAAA,CAAA;AAEO,SAAS,kBAAkB,KAA+B,EAAA;AAC/D,EACE,MAAA,EAAA,GAAA,KAAA,EADM,EAAU,QAAA,EAAA,oBAAA,EAAsB,qBAvC1C,EAAA,GAwCI,IADgE,IAChE,GAAAC,WAAA,CAAA,EAAA,EADgE,CAA1D,UAAA,EAAU,sBAAsB,EAAA,uBAAA,CAAA,CAAA,CAAA;AAExC,EAAA,MAAM,CAAC,GAAK,EAAA,MAAM,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,YAAY,OAAQ,CAAA,MAAM,IAAI,oBAAqB,EAAA,EAAG,EAAE,CAAA,CAAA;AAE9D,EAAA,SAAA,CAAU,MAAM;AACd,IAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,MACtB,MAAQ,EAAA,GAAA;AAAA,KACV,CAAA,CAAA;AAAA,GACC,EAAA,CAAC,GAAK,EAAA,qBAAqB,CAAC,CAAA,CAAA;AAE/B,EAAA,SAAA,CAAU,MAAM;AACd,IAAU,SAAA,CAAA,SAAA,CAAU,CAAC,IAAmB,KAAA;AACtC,MAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AAAA,KACZ,CAAA,CAAA;AAAA,GACH,EAAG,CAAC,SAAS,CAAC,CAAA,CAAA;AAEd,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,4BAA4B,QAA5B,EAAA,EAAqC,OAAOJ,eAAK,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAL,EAAW,SAAU,EAAA,CAAA,EAAA,sCAC/D,aAAkB,EAAAD,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAlB,EAAwB,KAAO,EAAA,aAAA,EAAA,CAAA,EAC7B,CAAC,EAAE,UAAA,EAAY,YACd,KAAAE,oBAAA;AAAA,IACE,QAAA;AAAA,IACA;AAAA,MACE,QAAU,EAAA,UAAA;AAAA,MACV,QAAU,EAAA,UAAA;AAAA,KACZ;AAAA,IACA,oBAAA;AAAA,GAGN,CACF,CAAA,CAAA;AAEJ,CAAA;AAEA,MAAM,aAAA,GAAgB,kBAAkB,eAAe,CAAA,CAAA;AAEvC,SAAA,qBAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,iBAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,aAAA;AAAA,MACN,WAAa,EAAA,qBAAA;AAAA,MACb,UAAY,EAAA,sDAAA;AAAA,MACZ,UAAY,EAAA,mBAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAuC,gBAAkB,EAAA;AAAA,QAC1D,MAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,OACD,CAPI,CAAA,EAAA;AAAA,QAQL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,OAAS,EAAA,MAAA;AAAA,gBACT,GAAK,EAAA,KAAA;AAAA,gBACL,OAAS,EAAA,CAAA;AAAA,gBACT,UAAY,EAAA,YAAA;AAAA,eACd;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,oBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,gBAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,uBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,UAAU,2BAA4B,CAAA;AAAA,sBACpC,KAAO,EAAA,YAAA;AAAA,sBACP,QAAU,EAAA,KAAA;AAAA,qBACX,CAAA;AAAA,oBACD,KAAO,EAAA,WAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,uBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,UAAU,2BAA4B,CAAA;AAAA,sBACpC,KAAO,EAAA,YAAA;AAAA,sBACP,QAAU,EAAA,KAAA;AAAA,qBACX,CAAA;AAAA,oBACD,KAAO,EAAA,WAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,uBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,UAAU,2BAA4B,CAAA;AAAA,sBACpC,KAAO,EAAA,YAAA;AAAA,sBACP,QAAU,EAAA,KAAA;AAAA,qBACX,CAAA;AAAA,oBACD,KAAO,EAAA,WAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,0BAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KACE,EAAA,oDAAA;AAAA,qBACJ;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,cAAA;AAAA,UAClB,WAAa,EAAA,mBAAA;AAAA,UACb,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,MAAS,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,MAAM,CAAA,GAAI,EAAC;AAAA,UACnE,WAAa,EAAA,IAAA;AAAA,SACf;AAAA,QACA,SAAW,EAAA;AAAA,UACT,WAAa,EAAA,SAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,oCAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,kBAAoB,EAAA;AAAA,UAClB,IAAM,EAAA,QAAA;AAAA,UACN,OAAA,EAAS,CAAC,QAAA,EAAU,MAAM,CAAA;AAAA,UAC1B,WACE,EAAA,gKAAA;AAAA,UACF,gBAAkB,EAAA,QAAA;AAAA,SACpB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,OAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9LA,MAAM,cAAiB,GAAA;AAAA,EACrB,SAAA;AAAA,EACA,cAAA;AAAA,EACA,SAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEC,UAAA,EAAa,GAAA,yBAAA,CAA0B,cAAc,CAAA,CAAA;AAWtD,MAAMG,cAAe,GAAA;AAAA,EAC1B,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA;AAAA,MACL,mBAAA,EAAqB,CAAC,CAAqC,KAAA;AACzD,QAAA,OAAO,EAAE,MAAO,CAAA,KAAA,CAAA;AAAA,OAClB;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA;AAEO,SAAS,UAAU,KAAuB,EAAA;AAC/C,EAAA,MAOI,EANF,GAAA,KAAA,EAAA;AAAA,IAAA,oBAAA;AAAA,IACA,qBAAA;AAAA,IACA,YAAA;AAAA,IACA,KAAA;AAAA,IACA,SAAA;AAAA,GAjDJ,GAmDM,EADC,EAAA,IAAA,GAAAD,WAAA,CACD,EADC,EAAA;AAAA,IALH,sBAAA;AAAA,IACA,uBAAA;AAAA,IACA,cAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,GAAA,CAAA,CAAA;AAGF,EAAM,MAAA,gBAAA,GAAmB,KAAM,CAAA,UAAA,CAAW,uBAAuB,CAAA,CAAA;AACjE,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,UAAA,CAAW,mBAAmB,CAAA,CAAA;AAEpD,EAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,IACtB,MAAQ,EAAA,gBAAA;AAAA,GACV,CAAA,CAAA;AAEA,EAAA,MAAM,aAAgB,GAAA,WAAA;AAAA,IACpB,CAAC;AAAA,MACC,UAAA;AAAA,MACA,cAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,KACsB,KAAA;AACtB,MAAuB,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAA;AAAA,QACrB,QAAU,EAAA,UAAA;AAAA,QACV,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,OAAS,EAAA,SAAA;AAAA,OACX,CAAA,CAAA;AACA,MAAA,OAAO,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA;AAAA,KACtB;AAAA,IACA,CAAC,WAAW,oBAAoB,CAAA;AAAA,GAClC,CAAA;AAEA,EAAM,MAAA,WAAA,GAAc,WAAW,IAAM,EAAA;AAAA,IACnC,KAAA,EAAA,CAAO,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,cAAA,IAAiB,KAAY,CAAA,GAAA,KAAA;AAAA,IAC7C,YAAA,EAAc,oBAAoB,YAAY,CAAA;AAAA,IAC9C,SAAW,EAAA,aAAA;AAAA,GACZ,CAAA,CAAA;AAED,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAU,WAAV,CAAA,EAAA,EAAuB,OAAO,aAAe,EAAA,CAAA,CAAA,CAAA;AACvD,CAAA;AAEa,MAAA,oBAAA,GAAuB,kBAAkB,OAAO,CAAA,CAAA;AAE7C,SAAA,aAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,oBAAA;AAAA,MACN,WAAa,EAAA,YAAA;AAAA,MACb,UAAY,EAAA,8CAAA;AAAA,MACZ,UAAY,EAAA,WAAA;AAAA,gBACZC,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,OAAA;AAAA,QACP,WAAa,EAAA,KAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,OAAS,EAAA,UAAA;AAAA,OACX;AAAA,MACA,KAAA,EAAOD,gBACF,CAAA,EAAA,EAAA,cAAA,CAA+B,OAAS,EAAA;AAAA,QACzC,MAAA;AAAA,QACA,UAAA;AAAA,QACA,UAAA;AAAA,QACA,WAAA;AAAA,QACA,YAAA;AAAA,QACA,UAAA;AAAA,QACA,aAAA;AAAA,QACA,OAAA;AAAA,QACA,WAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,MAAA;AAAA,QACA,WAAA;AAAA,QACA,cAAA;AAAA,QACA,UAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,oBAAA;AAAA,QACA,kBAAA;AAAA,QACA,qBAAA;AAAA,QACA,UAAA;AAAA,QACA,eAAA;AAAA,QACA,SAAA;AAAA,OACD,CAAA,CAAA;AAAA,MAEH,MAAQ,EAAA;AAAA,QACN,KAAO,EAAAA,gBAAA,CAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,MAAA;AAAA,SAAA,EACXI,eAAa,MAAO,CAAA,KAAA,CAAA;AAAA,OAE3B;AAAA,MAEA,gBAAkB,EAAA;AAAA,QAChB,OAAS,EAAAA,cAAA;AAAA,QACT,UAAY,EAAA,cAAA;AAAA,QACZ,UAAY,EAAA,8CAAA;AAAA,OACd;AAAA,KACF;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9IA,MAAM,sBAAyB,GAAA;AAAA,EAC7B,SAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEH,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,sBAAA;AACF,CAAA,CAAA;AAcO,SAAS,gBAAgB,KAA6B,EAAA;AAC3D,EAAA,MACE,EADM,GAAA,KAAA,EAAA,EAAA,QAAA,EAAU,qBAAuB,EAAA,oBAAA,EAAsB,EA1CjE,EAAA,GA2CI,EADoE,EAAA,IAAA,GAAAC,WAAA,CACpE,EADoE,EAAA,CAA9D,UAAU,EAAA,uBAAA,EAAuB,sBAAsB,EAAA,IAAA,CAAA,CAAA,CAAA;AAE/D,EAAM,MAAA,cAAA,GAAiB,KAAM,CAAA,UAAA,CAAW,qBAAqB,CAAA,CAAA;AAC7D,EAAA,MAAM,eAAe,CAAC,cAAA,CAAA;AAStB,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,QAA6B,EAAA,CAAA;AAErE,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,MAAM,OAAU,GAAA,cAAA,CAAe,SAAU,CAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AACpD,IAAA,eAAA,CAAgB,OAAO,CAAA,CAAA;AAEvB,IAAA,OAAO,MAAM;AACX,MAAe,cAAA,CAAA,SAAA,CAAU,WAAW,OAAO,CAAA,CAAA;AAC3C,MAAA,eAAA,CAAgB,KAAS,CAAA,CAAA,CAAA;AAAA,KAC3B,CAAA;AAAA,GACF,EAAG,CAAC,EAAE,CAAC,CAAA,CAAA;AAEP,EAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,IACtB,UAAU,MAAM;AACd,MAAA,IAAI,OAAO,KAAW,CAAA,EAAA;AACpB,QAAO,OAAA,oBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,OAAO,OAAO,QAAU,EAAA;AAC1B,QAAO,OAAA,qBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,EAAG,CAAA,IAAA,EAAQ,EAAA;AACd,QAAO,OAAA,oBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,YAAgB,IAAA,EAAA,IAAM,YAAc,EAAA;AACvC,QAAO,OAAA,mBAAA,CAAA;AAAA,OACT;AACA,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACN,GAAA;AAAA,GACL,CAAA,CAAA;AAEA,EAAA,MAAM,WACJ,mBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAAJ,eAAA,CAAAC,gBAAA,CAAA;AAAA,MACC,GAAK,EAAA,YAAA;AAAA,MACL,EAAI,EAAA,YAAA;AAAA,KAAA,EACA,IAHL,CAAA,EAAA;AAAA,MAIC,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,CAAC;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,cAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,KAEA,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,QAAU,EAAA,UAAA;AAAA,QACV,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAEJ,CAAA;AAGF,EAAA,IAAI,YAAc,EAAA;AAEhB,IAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAQ,aAAc,EAAA,QAAA,EAAA,EAAU,WAAY,CAAA,CAAA;AAAA,GACtD;AAEA,EAAO,OAAA,WAAA,CAAA;AACT,CAAA;AAEa,MAAA,8BAAA,GAAiC,CAC5C,KAAA,EACA,WACoB,MAAA;AAAA,EACpB,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,OAAS,EAAA,MAAA;AAAA,IACT,UAAY,EAAA,YAAA;AAAA,IACZ,GAAK,EAAA,KAAA;AAAA,GACP;AAAA,EACA,QAAU,EAAA;AAAA,IACR;AAAA,MACE,IAAM,EAAA,WAAA;AAAA,MACN,IAAM,EAAA,mBAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,OAAA;AAAA,QACN,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,MAAQ,EAAA;AAAA,YACN,UAAY,EAAA,GAAA;AAAA,WACd;AAAA,UACA,KAAO,EAAA,KAAA;AAAA,SACT;AAAA,OACF;AAAA,KACF;AAAA,IACA;AAAA,MACE,IAAM,EAAA,WAAA;AAAA,MACN,IAAM,EAAA,0BAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,MAAQ,EAAA;AAAA,YACN,KAAO,EAAA,SAAA;AAAA,WACT;AAAA,UACA,KAAA,EAAO,oCAAe,CAAwB,qBAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AAAA,SAChD;AAAA,OACF;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA,CAAA;AAEgB,SAAA,mBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,eAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,MAAM,CAAA;AAAA,MAC9B,WAAa,EAAA,kBAAA;AAAA,MACb,UAAY,EAAA,oDAAA;AAAA,MACZ,UAAY,EAAA,iBAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAO,EAAA;AAAA,QACL,EAAI,EAAA;AAAA,UACF,IAAM,EAAA,QAAA;AAAA,UACN,WAAa,EAAA,wDAAA;AAAA,UACb,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,OAAA;AAAA,UACb,SAAW,EAAA,CAAC,MAAQ,EAAA,MAAA,EAAQ,GAAQ,KAAA;AAClC,YAAA,IAAI,2BAAK,OAAS,EAAA;AAChB,cAAA,OAAO,GAAI,CAAA,OAAA,CAAA;AAAA,aACb;AACA,YAAO,OAAA,IAAA,CAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,SAAW,EAAA;AAAA,UACT,IAAM,EAAA,QAAA;AAAA,UACN,WAAa,EAAA,OAAA;AAAA,UACb,WACE,EAAA,+FAAA;AAAA,SACJ;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAA,EAAc,+BAA+B,MAAM,CAAA;AAAA,SACrD;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMO,SAAS,YAAY,KAAyB,EAAA;AACnD,EAAmC,MAAA,EAAA,GAAA,KAAA,EAA3B,UAAQ,KAnBlB,EAAA,GAmBqC,IAAT,IAAS,GAAAE,WAAA,CAAA,EAAA,EAAT,CAAlB,QAAQ,EAAA,OAAA,CAAA,CAAA,CAAA;AAChB,EAAM,MAAA,YAAA,GAAe,KAAM,CAAA,UAAA,CAAW,qBAAqB,CAAA,CAAA;AAC3D,EAAA,MAAM,eAAe,CAAC,YAAA,CAAA;AAEtB,EAAM,MAAA,OAAA,mBACH,KAAA,CAAA,aAAA,CAAA,OAAA,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAY,IAAZ,CAAA,EAAA,EAAkB,KAAO,EAAA,aAAA,EAAA,CAAA,kBACvB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAQ,MAAO,CAAA,EACf,KACH,CAAA,CAAA;AAGF,EAAA,IAAI,YAAc,EAAA;AAChB,IAAA;AAAA;AAAA;AAAA;AAAA,sBAIG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,aAAc,EAAA,QAAA,EAAA,EAAU,OAAQ,CAAA;AAAA,MAAA;AAAA,GAEjD;AAEA,EAAO,OAAA,OAAA,CAAA;AACT,CAAA;AAEgB,SAAA,eAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,SAAS,CAAA;AAAA,MACjC,WAAa,EAAA,cAAA;AAAA,MACb,UAAY,EAAA,gDAAA;AAAA,MACZ,UAAY,EAAA,aAAA;AAAA,MACZ,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,SAAA;AAAA,QACP,OAAS,EAAA,MAAA;AAAA,OACX;AAAA,MACA,KAAO,EAAA;AAAA,QACL,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,KAAO,EAAA,iBAAA;AAAA,aACT;AAAA,WACF;AAAA,SACF;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,SACnB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA,MAAM,gBAAA,GAAmB,CAAC,SAAA,EAAoB,cAAuB,CAAA,CAAA;AAErE,MAAM,YAAEC,UAAA,EAAa,GAAA,yBAAA,CAA0B,gBAAgB,CAAA,CAAA;AAexD,MAAM,cAAiB,GAAA;AAAA,EAC5B,MAAQ,EAAA;AAAA,IACN,aAAe,EAAA;AAAA,MACb,mBAAA,EAAqB,CAAC,KAAwC,KAAA;AAE5D,QAAA,OAAO,KAAM,CAAA,IAAA,CAAK,KAAK,CAAA,CAAE,CAAC,CAAA,CAAA;AAAA,OAC5B;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA;AAEA,SAAS,sBAAsB,YAA6C,EAAA;AAE1E,EAAA,OAAO,OAAO,YAAiB,KAAA,QAAA,IAAY,iBAAiB,KACxD,GAAA,CAAC,YAAY,CACb,GAAA,YAAA,CAAA;AACN,CAAA;AAEO,SAAS,YAAY,KAAyB,EAAA;AACnD,EAAA,MAQI,EAPF,GAAA,KAAA,EAAA;AAAA,IAAA,qBAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,YAAA;AAAA,IACA,mBAAA;AAAA,IACA,oBAAA;AAAA,GAlEJ,GAoEM,EADC,EAAA,IAAA,GAAAE,WAAA,CACD,EADC,EAAA;AAAA,IANH,uBAAA;AAAA,IACA,UAAA;AAAA,IACA,WAAA;AAAA,IACA,cAAA;AAAA,IACA,qBAAA;AAAA,IACA,sBAAA;AAAA,GAAA,CAAA,CAAA;AAGF,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,UAAA,CAAW,qBAAqB,CAAA,CAAA;AACtD,EAAA,MAAM,eAAe,CAAC,OAAA,CAAA;AACtB,EAAA,MAAM,CAAC,GAAK,EAAA,MAAM,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,SAAY,GAAA,OAAA;AAAA,IAChB,MAAG;AAzEP,MAAAE,IAAAA,GAAAA,CAAAA;AAyEU,MAAA,OAAA,CAAAA,MAAA,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,SAAA,KAAT,IAAAA,GAAAA,GAAAA,GAAsB,IAAI,oBAAqB,EAAA,CAAA;AAAA,KAAA;AAAA,IACrD,EAAC;AAAA,GACH,CAAA;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,MACtB,OAAS,EAAA,GAAA;AAAA,MACT,YAAA;AAAA,KACF,CAAA,CAAA;AAAA,GACC,EAAA,CAAC,GAAK,EAAA,YAAA,EAAc,qBAAqB,CAAC,CAAA,CAAA;AAE7C,EAAA,SAAA,CAAU,MAAM;AACd,IAAU,SAAA,CAAA,SAAA,CAAU,CAAC,IAAmB,KAAA;AACtC,MAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AAAA,KACZ,CAAA,CAAA;AAAA,GACH,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,MAAM,aAAgB,GAAA,WAAA;AAAA,IACpB,CAAC,EAAE,cAAgB,EAAA,SAAA,EAAoC,KAAA;AACrD,MAAuB,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAA;AAAA,QACrB,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,OAChB,CAAA,CAAA;AACA,MAAA,OAAO,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA;AAAA,KACtB;AAAA,IACA,CAAC,WAAW,oBAAoB,CAAA;AAAA,GAClC,CAAA;AAEA,EAAA,MAAM,OACJ,mBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,OAAA;AAAA,IAAAL,gBAAA,CAAA;AAAA,MACC,YAAA,EAAc,sBAAsB,YAAY,CAAA;AAAA,MAChD,mBAAA,EAAqB,sBAAsB,mBAAmB,CAAA;AAAA,MAC9D,SAAW,EAAA,aAAA;AAAA,MACX,KAAO,EAAA,aAAA;AAAA,KACH,EAAA,IAAA,CAAA;AAAA,IAEH,QAAA;AAAA,GACH,CAAA;AAGF,EAAA,IAAI,YAAc,EAAA;AAChB,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,qBAAsB,CAAA,QAAA;AAAA,MAAtB;AAAA,QACC,KAAO,EAAA;AAAA,UACL,SAAA;AAAA,SACF;AAAA,OAAA;AAAA,MAEC,OAAA;AAAA,KACH,CAAA;AAAA,GAEJ;AAEA,EAAO,OAAA,OAAA,CAAA;AACT,CAAA;AAEa,MAAA,uBAAA,GAA0B,kBAAkB,SAAS,CAAA,CAAA;AAElD,SAAA,eAAA,CACd,QACA,SACA,EAAA;AACA,EAAM,MAAA,eAAA,GAAkB,oBAAoB,MAAQ,EAAA;AAAA,IAClD,mBAAqB,EAAA,uBAAA;AAAA,GACtB,CAAA,CAAA;AACD,EAAM,MAAA,WAAA,GAAc,gBAAgB,MAAQ,EAAA;AAAA,IAC1C,mBAAqB,EAAA,uBAAA;AAAA,IACrB,KAAO,EAAA;AAAA,MACL,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,MAAM,eAAgB,CAAA,IAAA;AAAA,YACtB,KAAO,EAAA;AAAA,cACL,EAAI,EAAA,aAAA;AAAA,cACJ,SAAW,EAAA,iBAAA;AAAA,cACX,QAAU,EAAA;AAAA,gBACR,8BAAA;AAAA,kBACE,QAAA;AAAA,kBACA,gDAAA;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,MAAM,eAAgB,CAAA,IAAA;AAAA,YACtB,KAAO,EAAA;AAAA,cACL,EAAI,EAAA,aAAA;AAAA,cACJ,SAAW,EAAA,iBAAA;AAAA,cACX,QAAU,EAAA;AAAA,gBACR,8BAAA;AAAA,kBACE,QAAA;AAAA,kBACA,gDAAA;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,MAAM,eAAgB,CAAA,IAAA;AAAA,YACtB,KAAO,EAAA;AAAA,cACL,EAAI,EAAA,aAAA;AAAA,cACJ,SAAW,EAAA,iBAAA;AAAA,cACX,QAAU,EAAA;AAAA,gBACR,8BAAA;AAAA,kBACE,QAAA;AAAA,kBACA,gDAAA;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AAED,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,uBAAA;AAAA,MACN,WAAa,EAAA,cAAA;AAAA,MACb,UAAY,EAAA,gDAAA;AAAA,MACZ,UAAY,EAAA,aAAA;AAAA,gBACZC,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,OAAA;AAAA,QACP,WAAa,EAAA,KAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,OACf;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,WAAa,EAAA,YAAA;AAAA,UACb,iBAAmB,EAAA,CAAC,eAAgB,CAAA,IAAA,EAAM,YAAY,IAAI,CAAA;AAAA,UAC1D,gBAAkB,EAAA,IAAA;AAAA,UAClB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,cACtB,KAAO,EAAA;AAAA,gBACL,EAAI,EAAA,GAAA;AAAA,gBACJ,SAAW,EAAA,QAAA;AAAA,gBACX,QAAU,EAAA;AAAA,kBACR,8BAAA;AAAA,oBACE,QAAA;AAAA,oBACA,gDAAA;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,cACtB,KAAO,EAAA;AAAA,gBACL,EAAI,EAAA,GAAA;AAAA,gBACJ,SAAW,EAAA,QAAA;AAAA,gBACX,QAAU,EAAA;AAAA,kBACR,8BAAA;AAAA,oBACE,QAAA;AAAA,oBACA,gDAAA;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,cACtB,KAAO,EAAA;AAAA,gBACL,EAAI,EAAA,GAAA;AAAA,gBACJ,SAAW,EAAA,QAAA;AAAA,gBACX,QAAU,EAAA;AAAA,kBACR,8BAAA;AAAA,oBACE,QAAA;AAAA,oBACA,gDAAA;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,WAAY,CAAA,IAAA;AAAA,aACpB;AAAA,WACF;AAAA,SACF;AAAA,QACA,aAAe,EAAA;AAAA,UACb,IAAM,EAAA,QAAA;AAAA,UACN,WAAa,EAAA,mCAAA;AAAA,UACb,OAAA,EAAS,CAAC,MAAA,EAAQ,QAAQ,CAAA;AAAA,UAC1B,YAAc,EAAA,MAAA;AAAA,UACd,MAAQ,EAAA,CAAC,MAAQ,EAAA,GAAA,KAAQ,EAAC,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,YAAA,CAAA;AAAA,SACjC;AAAA,QACA,YAAc,EAAA;AAAA,UACZ,IAAM,EAAA,QAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,qBAAA;AAAA,UAClB,WAAa,EAAA,uBAAA;AAAA,UACb,OAAA,EAAS,CAAC,MAAA,EAAQ,GAChB,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAU,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,OAAO,CAAA,GAAI,EAAC;AAAA,UAC5C,MAAA,EAAQ,CAAC,KAAO,EAAA,GAAA,KACd,EAAC,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,YAAA,CAAA,IAAgB,MAAM,aAAkB,KAAA,MAAA;AAAA;AAAA,UAEhD,WAAa,EAAA,KAAA;AAAA,SACf;AAAA,QACA,iBAAmB,EAAA;AAAA,UACjB,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,gBAAkB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SACvD;AAAA,OACF;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,aAAe,EAAAD,gBAAA,CAAA;AAAA,UACb,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,cAAA;AAAA,UACX,MAAA,EAAQ,CAAC,KAAO,EAAA,GAAA,KACd,EAAC,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,YAAA,CAAA,IAAgB,MAAM,aAAkB,KAAA,MAAA;AAAA,UAChD,YAAc,EAAA,mBAAA;AAAA,UACd,YAAc,EAAA,MAAA;AAAA,SAAA,EACX,eAAe,MAAO,CAAA,aAAA,CAAA;AAAA,OAE7B;AAAA,MACA,gBAAkB,EAAA;AAAA,QAChB,OAAS,EAAA,cAAA;AAAA,QACT,UAAY,EAAA,gBAAA;AAAA,QACZ,UAAY,EAAA,gDAAA;AAAA,OACd;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3RA,MAAM,gBAAmB,GAAA;AAAA,EACvB,cAAA;AAAA,EACA,iBAAA;AAAA,EACA,eAAA;AAAA,EACA,gBAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,gBAAgB,CAAA,CAAA;AAerC,SAAS,YAAY,KAAyB,EAAA;AACnD,EAAA,MAMI,EALF,GAAA,KAAA,EAAA;AAAA,IAAA,cAAA;AAAA,IACA,oBAAA;AAAA,IACA,qBAAA;AAAA,IACA,iBAAA;AAAA,GAjDJ,GAmDM,EADC,EAAA,SAAA,GAAAC,WAAA,CACD,EADC,EAAA;AAAA,IAJH,gBAAA;AAAA,IACA,sBAAA;AAAA,IACA,uBAAA;AAAA,IACA,mBAAA;AAAA,GAAA,CAAA,CAAA;AAIF,EAAA,MAAM,YAAe,GAAA,CAAC,KAAM,CAAA,UAAA,CAAW,cAAc,CAAA,CAAA;AACrD,EAAA,MAAM,UAAa,GAAA,CAAC,CAAC,KAAA,CAAM,WAAW,4BAA4B,CAAA,CAAA;AAClE,EAAM,MAAA,UAAA,GAAa,KAAM,CAAA,MAAA,CAAY,IAAI,CAAA,CAAA;AACzC,EAAA,MAAM,gBAAgB,uBAAwB,EAAA,CAAA;AAC9C,EAAA,MAAM,wBAAwB,UAAc,IAAA,iBAAA,CAAA;AAO5C,EAAqC,MAAA,EAAA,GAAAG,YAAA;AAAA,IACnC;AAAA;AAAA;AAAA,MAGE,UAAA,EAAY,aAAiB,IAAA,CAAC,aAAc,CAAA,WAAA;AAAA,KAC9C;AAAA,IACA,SAAA;AAAA,IACA,EAAE,SAAW,EAAA,CAAA,EAAG,cAAiB,CAAA,CAAA,EAAA;AAAA;AAAA,IAEjC,YACI,GAAA;AAAA,MACE,UAAA;AAAA,MACA,UAAY,EAAA,IAAA;AAAA;AAAA;AAAA,MAGZ,MAAQ,EAAA,IAAA;AAAA,KAEV,GAAA,IAAA;AAAA,KAjBE,EAhEV,QAAA,EAAA,GAgEuC,EAAhB,EAAA,WAAA,GAAAH,WAAA,CAAgB,IAAhB,CAAb,UAAA,CAAA,CAAA,CAAA;AAoBR,EAAA,SAAA,CAAU,MAAM;AACd,IAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,MACtB,oBAAsB,EAAA,UAAA;AAAA,KACxB,CAAA,CAAA;AAAA,GACC,EAAA,CAAC,UAAY,EAAA,qBAAqB,CAAC,CAAA,CAAA;AAEtC,EAAA,iEAEK,YAAgB,oBAAA,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,GAAA,EAAK,YAAY,CACvC,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,OAAA;AAAA,IAAAH,gBAAA,CAAA;AAAA,MAEC,KAAA,EAAOA,sCACD,qBAAwB,GAAA,EAAE,OAAO,CAAuB,oBAAA,CAAA,EAAA,GAAI,EAC7D,CAAA,EAAA,aAAA,CAAA;AAAA,KAED,EAAA,WAAA,CAAA;AAAA,IAEH,CAAC,EAAE,SAAA,EACF,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,cAAc,SAAc,KAAA,KAAA;AAAA,QAC5B,iBAAiB,SAAc,KAAA,QAAA;AAAA,QAC/B,eAAe,SAAc,KAAA,MAAA;AAAA,QAC7B,gBAAgB,SAAc,KAAA,OAAA;AAAA,OAChC;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAGN,CAAA,CAAA;AAEJ,CAAA;AAEa,MAAA,sBAAA,GAAyB,kBAAkB,SAAS,CAAA,CAAA;AAEjD,SAAA,eAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,sBAAA;AAAA,MACN,WAAa,EAAA,cAAA;AAAA,MACb,UAAY,EAAA,gDAAA;AAAA,MACZ,UAAY,EAAA,aAAA;AAAA,gBACZD,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,WAAa,EAAA,KAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,KAAO,EAAA,OAAA;AAAA,QACP,eAAiB,EAAA,SAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAAD,gBAAA,CAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,KAAO,EAAA,SAAA;AAAA,gBACP,OAAS,EAAA,MAAA;AAAA,gBACT,MAAQ,EAAA,MAAA;AAAA,eACV;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA,kBACE,IAAM,EAAA,MAAA;AAAA,kBACN,KAAO,EAAA,oBAAA;AAAA,iBACT;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,MAAA;AAAA,kBACN,KAAO,EAAA,4CAAA;AAAA,kBACP,MAAQ,EAAA;AAAA,oBACN,UAAY,EAAA,GAAA;AAAA,mBACd;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,MAAA;AAAA,kBACN,KACE,EAAA,8EAAA;AAAA,iBACJ;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,SAAA;AAAA,UACN,WACE,EAAA,oJAAA;AAAA,UACF,gBAAkB,EAAA,IAAA;AAAA,SACpB;AAAA,QAEA,cAAgB,EAAA;AAAA,UACd,IAAM,EAAA,iBAAA;AAAA,SACR;AAAA,QACA,iBAAmB,EAAA;AAAA,UACjB,IAAM,EAAA,SAAA;AAAA,UACN,YAAc,EAAA,IAAA;AAAA,UACd,MAAQ,EAAA,CAAC,MAAQ,EAAA,GAAA,KAAQ,EAAC,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,oBAAA,CAAA;AAAA,SACjC;AAAA,OAAA,EACG,sBAAwC,SAAW,EAAA;AAAA,QACpD,SAAA,EAAW,EAAE,gBAAA,EAAkB,QAAS,EAAA;AAAA,QACxC,MAAA,EAAQ,EAAE,gBAAA,EAAkB,CAAE,EAAA;AAAA,QAC9B,gBAAA,EAAkB,EAAE,gBAAA,EAAkB,EAAG,EAAA;AAAA,QACzC,WAAA,EAAa,EAAE,gBAAA,EAAkB,CAAE,EAAA;AAAA,OACpC,CAAA,CAAA;AAAA;AAAA,MAGH,aAAe,EAAA,IAAA;AAAA,MACf,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7KA,MAAM,aAAA,GAAgB,kBAAkB,UAAU,CAAA,CAAA;AAMlD,MAAM,iBAAA,GAAoB,CAAC,UAAmB,CAAA,CAAA;AAE9C,MAAM,EAAE,QAAA,EAAU,sBAAuB,EAAA,GACvC,0BAA0B,iBAAiB,CAAA,CAAA;AAsB7C,SAAS,iBAAiB,KAAY,EAAA;AA3DtC,EAAA,IAAA,EAAA,CAAA;AA4DE,EAAM,MAAA,EAAE,MAAM,KAAM,EAAA,GAAA,CAAI,WAAM,UAAW,CAAA,oBAAoB,CAArC,KAAA,IAAA,GAAA,EAAA,GAA0C,EAAC,CAAA;AAEnE,EAAA,WAAA,CAAY,EAAE,KAAA,EAAO,IAAM,EAAA,KAAA,EAAO,CAAA,CAAA;AAElC,EAAO,OAAA,IAAA,CAAA;AACT,CAAA;AAEO,SAAS,aAAa,KAA0B,EAAA;AACrD,EAAA,MAOI,EANF,GAAA,KAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,SAAA;AAAA,IACA,MAAQ,EAAA,OAAA;AAAA,GAzEZ,GA2EM,EADC,EAAA,IAAA,GAAAG,WAAA,CACD,EADC,EAAA;AAAA,IALH,UAAA;AAAA,IACA,uBAAA;AAAA,IACA,sBAAA;AAAA,IACA,WAAA;AAAA,IACA,QAAA;AAAA,GAAA,CAAA,CAAA;AAIF,EAAA,MAAM,aAAgB,GAAA,WAAA;AAAA,IACpB,CAAC,EAAE,UAAA,EAAsC,KAAA;AACvC,MAAuB,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAA;AAAA,QACrB,QAAU,EAAA,UAAA;AAAA,OACZ,CAAA,CAAA;AACA,MAAA,OAAO,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA;AAAA,KACtB;AAAA,IACA,CAAC,WAAW,oBAAoB,CAAA;AAAA,GAClC,CAAA;AAEA,EAAA,MAAM,YAAY,OAAQ,CAAA,MAAM,IAAI,oBAAqB,EAAA,EAAG,EAAE,CAAA,CAAA;AAE9D,EAAA,SAAA,CAAU,MAAM;AACd,IAAU,SAAA,CAAA,SAAA,CAAU,CAAC,GAAkB,KAAA;AACrC,MAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,QACtB,OAAS,EAAA,GAAA;AAAA,OACX,CAAA,CAAA;AAAA,KACD,CAAA,CAAA;AAAA,GACH,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,QAAA,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAS,SAAW,EAAA,aAAA,EAAA,EAAmB,IAAvC,CAAA,EAAA,EAA6C,KAAO,EAAA,aAAA,EAAA,CAAA,kBAClD,KAAA,CAAA,aAAA,CAAA,4BAAA,CAA6B,QAA7B,EAAA,EAAsC,OAAO,IAC5C,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,qBAAsB,CAAA,QAAA;AAAA,IAAtB;AAAA,MACC,KAAO,EAAA;AAAA,QACL,SAAA;AAAA,OACF;AAAA,KAAA;AAAA,oBAEC,KAAA,CAAA,aAAA,CAAA,mBAAA,CAAoB,QAApB,EAAA,EAA6B,KAAO,EAAA,EAAE,cAAgB,EAAA,IAAA,EACrD,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,gBAAqB,EAAAA,gBAAA,CAAA,EAAA,EAAA,KAAA,CAAO,GAC5B,QACH,CAAA;AAAA,GAEJ,CACF,CAAA,CAAA;AAEJ,CAAA;AAEO,SAAS,iBAAiB,MAAuB,EAAA;AACtD,EAAA,uBAAA,CAAwB,QAAQ,YAAc,EAAA;AAAA,IAC5C,IAAM,EAAA,aAAA;AAAA,IACN,WAAa,EAAA,eAAA;AAAA,IACb,UAAY,EAAA,iDAAA;AAAA,IACZ,UAAY,EAAA,cAAA;AAAA,IACZ,QAAU,EAAA,sBAAA;AAAA,IACV,KAAA,EAAOD,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAkC,UAAY,EAAA;AAAA,MAC/C,MAAA;AAAA,MACA,YAAA;AAAA,MACA,YAAA;AAAA,KACD,CALI,CAAA,EAAA;AAAA,MAML,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,QAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,gBAAkB,EAAA,oBAAA;AAAA,QAClB,WAAa,EAAA,uBAAA;AAAA,QACb,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAU,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,OAAO,CAAA,GAAI,EAAC;AAAA;AAAA,QAErE,WAAa,EAAA,KAAA;AAAA,OACf;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,QAAA;AAAA,QACN,WAAa,EAAA,iBAAA;AAAA,QACb,WACE,EAAA,qGAAA;AAAA,QACF,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAU,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,OAAO,CAAA,GAAI,EAAC;AAAA,QACrE,WAAa,EAAA,IAAA;AAAA,QACb,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,YAAc,EAAA,KAAA;AAAA;AAAA,QAEd,QAAQ,MAAM,IAAA;AAAA,OAChB;AAAA,MACA,iBAAmB,EAAA;AAAA,QACjB,IAAM,EAAA,cAAA;AAAA,QACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,OACtD;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,cAAA;AAAA,QACN,UAAU,CAAC,EAAE,MAAM,QAAU,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,OAChD;AAAA,MAEA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,MAAA;AAAA,YACN,MAAQ,EAAA;AAAA,cACN,cAAgB,EAAA,YAAA;AAAA,cAChB,UAAY,EAAA,YAAA;AAAA,cACZ,KAAO,EAAA,OAAA;AAAA,cACP,OAAS,EAAA,CAAA;AAAA,aACX;AAAA,YACA,QAAU,EAAA;AAAA,cACR;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,oBAAA;AAAA,gBACN,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR,IAAM,EAAA,MAAA;AAAA,oBACN,KAAO,EAAA,OAAA;AAAA,mBACT;AAAA,iBACF;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,MAAA;AAAA,gBACN,MAAQ,EAAA;AAAA,kBACN,OAAS,EAAA,CAAA;AAAA,iBACX;AAAA,gBACA,QAAU,EAAA;AAAA,kBACR;AAAA,oBACE,IAAM,EAAA,WAAA;AAAA,oBACN,IAAM,EAAA,oBAAA;AAAA,oBACN,MAAQ,EAAA;AAAA,sBACN,KAAO,EAAA,MAAA;AAAA,sBACP,gBAAkB,EAAA,CAAA;AAAA,qBACpB;AAAA,mBACF;AAAA,kBACA;AAAA,oBACE,IAAM,EAAA,WAAA;AAAA,oBACN,IAAM,EAAA,qBAAA;AAAA,oBACN,KAAO,EAAA;AAAA,sBACL,QAAU,EAAA,SAAA;AAAA,qBACZ;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,sBAAA;AAAA,gBACN,MAAQ,EAAA;AAAA,kBACN,eAAiB,EAAA,OAAA;AAAA,kBACjB,OAAS,EAAA,MAAA;AAAA,kBACT,QAAU,EAAA,QAAA;AAAA,kBACV,KAAO,EAAA,OAAA;AAAA,iBACT;AAAA,gBACA,KAAO,EAAA;AAAA,kBACL,MAAQ,EAAA,CAAA;AAAA,kBACR,QAAU,EAAA;AAAA,oBACR;AAAA,sBACE,IAAM,EAAA,WAAA;AAAA,sBACN,IAAM,EAAA,uBAAA;AAAA,sBACN,KAAO,EAAA;AAAA,wBACL,aAAe,EAAA,QAAA;AAAA,uBACjB;AAAA,sBACA,MAAQ,EAAA;AAAA,wBACN,WAAa,EAAA,CAAA;AAAA,wBACb,KAAO,EAAA,SAAA;AAAA,uBACT;AAAA,qBACF;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,KACF,CAAA;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,aAAe,EAAA;AAAA,QACb,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,aAAA;AAAA,QACX,YAAc,EAAA,mBAAA;AAAA,QACd,YAAc,EAAA,MAAA;AAAA,OAChB;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,QAAA;AAAA,QACX,YAAc,EAAA,cAAA;AAAA,QACd,YAAc,EAAA,SAAA;AAAA,OAChB;AAAA,KACF;AAAA,IACA,UAAY,EAAA,IAAA;AAAA,GACb,CAAA,CAAA;AACH;;AC9OO,SAAS,UAAW,CAAA,EAAE,QAAU,EAAA,SAAA,EAA8B,EAAA;AACnE,EAAA,MAAM,gBAAgB,uBAAwB,EAAA,CAAA;AAE9C,EAAA,IAAI,aAAe,EAAA;AAEjB,IAAA,uBACG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,SAAsB,EAAA,KAAA,EAAO,iBAC/B,QACH,CAAA,CAAA;AAAA,GAEG,MAAA;AACL,IAAA,uBACG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,SAAsB,EAAA,KAAA,EAAO,iBAClC,QACH,CAAA,CAAA;AAAA,GAEJ;AACF,CAAA;AAEa,MAAA,qBAAA,GAAwB,kBAAkB,QAAQ,CAAA,CAAA;AAE/C,SAAA,cAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,qBAAA;AAAA,MACN,WAAa,EAAA,aAAA;AAAA,MACb,UAAY,EAAA,+CAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,MACZ,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,SACnB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBO,MAAM,SAAY,GAAA,UAAA;AAAA,EACvB,SAAS,cAAe,CAAA,KAAA,EAAO,GAAK,EAAA;AAlCtC,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAmCI,IAAA,MASI,EARF,GAAA,KAAA,EAAA;AAAA,MAAA,QAAA;AAAA,MACA,iBAAA;AAAA,MACA,SAAA;AAAA,MACA,MAAA;AAAA,MACA,cAAA;AAAA,MACA,qBAAA;AAAA,MACA,aAAA;AAAA,KA1CN,GA4CQ,EADC,EAAA,IAAA,GAAAG,WAAA,CACD,EADC,EAAA;AAAA,MAPH,UAAA;AAAA,MACA,mBAAA;AAAA,MACA,WAAA;AAAA,MACA,QAAA;AAAA,MACA,gBAAA;AAAA,MACA,uBAAA;AAAA,MACA,eAAA;AAAA,KAAA,CAAA,CAAA;AAIF,IAAA,MAAM,YAAY,uBAAwB,EAAA,CAAA;AAC1C,IAAM,MAAA,UAAA,GAAa,SAAa,IAAA,SAAA,CAAU,WAAgB,KAAA,KAAA,CAAA;AAC1D,IAAA,MAAM,UACJ,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,6BAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAgC,KAAhC,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAwC,eAAxC,IAAsD,GAAA,EAAA,GAAA,KAAA,CAAA;AAExD,IAAM,MAAA,YAAA,GAAe,KAAM,CAAA,UAAA,CAAW,2BAA2B,CAAA,CAAA;AACjE,IAAA,MAAM,eAAe,CAAC,YAAA,CAAA;AACtB,IAAM,MAAA,WAAA,GAAc,UAAW,CAAA,YAAA,EAAc,IAAM,EAAA;AAAA,MACjD,MAAQ,EAAA,YAAA,GAAe,UAAc,IAAA,MAAA,GAAS,YAAa,CAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ3D,aAAA,EAAe,aAAa,KAAQ,GAAA,aAAA;AAAA,KACrC,CAAA,CAAA;AAED,IAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,MACtB,MAAA,EAAQ,YAAe,GAAA,KAAA,CAAA,GAAY,EAAC;AAAA,KACtC,CAAA,CAAA;AAGA,IAAA,mBAAA,CAAoB,KAAK,OAAO;AAAA,MAC9B,OAAO,MAAM;AAvEnB,QAAAE,IAAAA,GAAAA,CAAAA;AAwEQ,QAAA,CAAAA,GAAA,GAAA,WAAA,CAAY,YAAZ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,IAA2B,CAAA,WAAA,EAAA,KAAA,CAAA,CAAA;AAAA,OAC7B;AAAA,MACA,MAAM,MAAM;AA1ElB,QAAAA,IAAAA,GAAAA,CAAAA;AA2EQ,QAAA,CAAAA,GAAA,GAAA,WAAA,CAAY,YAAZ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,IAA2B,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,OAC7B;AAAA,KACA,CAAA,CAAA,CAAA;AAEF,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,YAAA;AAAA,MAAAN,eAAA,CAAAC,gBAAA,CAAA,EAAA,EACK,WADL,CAAA,EAAA;AAAA,QAEC,SAAA,EAAW,GAAG,cAAkB,CAAA,CAAA,EAAA,iBAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AAAA,sBAEhC,KAAA,CAAA,aAAA,CAAC,KAAM,EAAA,EAAA,SAAA,EAAA,EAAuB,QAAS,CAAA;AAAA,KACzC,CAAA;AAAA,GAEJ;AACF,CAAA,CAAA;AAEa,MAAA,oBAAA,GAAuB,kBAAkB,OAAO,CAAA,CAAA;AAEtD,MAAM,0BAA6C,GAAA;AAAA,EACxD,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,SAAA;AAAA,IACP,OAAS,EAAA,CAAA;AAAA,IACT,GAAK,EAAA,MAAA;AAAA,IACL,cAAgB,EAAA,YAAA;AAAA,IAChB,UAAY,EAAA,YAAA;AAAA,GACd;AAAA,EACA,QAAU,EAAA;AAAA,IACR;AAAA,MACE,IAAM,EAAA,MAAA;AAAA,MACN,KAAO,EAAA,SAAA;AAAA,MACP,GAAK,EAAA,IAAA;AAAA,KACP;AAAA,IACA;AAAA,MACE,IAAM,EAAA,MAAA;AAAA,MACN,KAAO,EAAA,kBAAA;AAAA,KACT;AAAA,IACA;AAAA,MACE,IAAM,EAAA,MAAA;AAAA,MACN,KAAO,EAAA,4CAAA;AAAA,MACP,MAAQ,EAAA;AAAA,QACN,UAAY,EAAA,GAAA;AAAA,OACd;AAAA,KACF;AAAA,IACA;AAAA,MACE,IAAM,EAAA,MAAA;AAAA,MACN,KACE,EAAA,8EAAA;AAAA,KACJ;AAAA,GACF;AACF,CAAA,CAAA;AAEgB,SAAA,aAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,oBAAA;AAAA,MACN,WAAa,EAAA,YAAA;AAAA,MACb,UAAY,EAAA,8CAAA;AAAA,MACZ,UAAY,EAAA,WAAA;AAAA,MACZ,aAAe,EAAA,IAAA;AAAA,MACf,aAAe,EAAA;AAAA;AAAA,QAEb,QAAU,EAAA,OAAA;AAAA,QACV,GAAK,EAAA,KAAA;AAAA,QACL,IAAM,EAAA,KAAA;AAAA,QACN,KAAO,EAAA,KAAA;AAAA,QACP,SAAW,EAAA,kBAAA;AAAA,QACX,WAAa,EAAA,KAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,OAAS,EAAA,MAAA;AAAA,QACT,QAAU,EAAA,OAAA;AAAA,QACV,eAAiB,EAAA,SAAA;AAAA,OACnB;AAAA,MACA,UAAY,EAAA;AAAA,QACV,IAAM,EAAA;AAAA,UACJ,WAAa,EAAA,gBAAA;AAAA,UACb,UAAU,EAAC;AAAA,SACb;AAAA,QACA,KAAO,EAAA;AAAA,UACL,WAAa,EAAA,iBAAA;AAAA,UACb,UAAU,EAAC;AAAA,SACb;AAAA,OACF;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA,0BAAA;AAAA,SAChB;AAAA,QACA,iBAAmB,EAAA;AAAA,UACjB,IAAM,EAAA,OAAA;AAAA,UACN,WAAa,EAAA,eAAA;AAAA,SACf;AAAA,QACA,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,SAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,aAAA;AAAA,UAClB,gBAAkB,EAAA,IAAA;AAAA,UAClB,YAAc,EAAA,IAAA;AAAA,UACd,MAAQ,EAAA,SAAA;AAAA,SACV;AAAA,QACA,aAAe,EAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WACE,EAAA,gEAAA;AAAA,SACJ;AAAA,QACA,yBAA2B,EAAA;AAAA,UACzB,IAAM,EAAA,SAAA;AAAA,UACN,WACE,EAAA,wEAAA;AAAA,SACJ;AAAA,QACA,YAAc,EAAA;AAAA,UACZ,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,QAAU,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SAChD;AAAA,QACA,cAAgB,EAAA;AAAA,UACd,IAAM,EAAA,iBAAA;AAAA,SACR;AAAA,OACF;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,QAAA;AAAA,UACX,YAAc,EAAA,cAAA;AAAA,UACd,YAAc,EAAA,SAAA;AAAA,UACd,MAAQ,EAAA,SAAA;AAAA,SACV;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7LO,SAAS,kBAAkB,KAA+B,EAAA;AAvBjE,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAwBE,EAA6C,MAAA,EAAA,GAAA,KAAA,EAArC,EAAS,OAAA,EAAA,MAAA,EAAQ,MAxB3B,EAAA,GAwB+C,IAAT,IAAS,GAAAG,WAAA,CAAA,EAAA,EAAT,CAA5B,SAAA,EAAS,QAAQ,EAAA,QAAA,CAAA,CAAA,CAAA;AAEzB,EAAA,MAAM,EAAE,UAAY,EAAA,gBAAA,MAClB,EAAgC,GAAA,CAAA,EAAA,GAAA,6BAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA,KAAhC,YAA0C,EAAC,CAAA;AAC7C,EAAM,MAAA,UAAA,GAAa,qBAAqB,SAAa,IAAA,UAAA,CAAA;AAErD,EAAM,MAAA,WAAA,GAAcJ,qCACf,IADe,CAAA,EAAA;AAAA,IAElB,MAAA,EAAA,CAAS,EAAc,GAAA,UAAA,IAAA,MAAA,KAAd,IAAyB,GAAA,EAAA,GAAA,KAAA;AAAA,GACpC,CAAA,CAAA;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,2BAA4B,CAAA,QAAA,EAA5B,EAAqC,KAAA,EAAO,WAC3C,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,aAAkB,EAAAC,gBAAA,CAAA,EAAA,EAAA,WAAA,CAAA,EAChB,OACA,EAAA,MACH,CACF,CAAA,CAAA;AAEJ,CAAA;AAEgB,SAAA,qBAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,iBAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,eAAe,CAAA;AAAA,MACvC,WAAa,EAAA,qBAAA;AAAA,MACb,UAAY,EAAA,sDAAA;AAAA,MACZ,UAAY,EAAA,mBAAA;AAAA,MACZ,aAAe,EAAA,KAAA;AAAA,MACf,KAAO,EAAA;AAAA,QACL,OAAS,EAAA;AAAA,UACP,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,WAAA;AAAA,YACN,IAAM,EAAA,qBAAA;AAAA,YACN,KAAO,EAAA;AAAA,cACL,QAAU,EAAA;AAAA,gBACR,IAAM,EAAA,MAAA;AAAA,gBACN,KAAO,EAAA,aAAA;AAAA,eACT;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,IAAM,EAAA,oBAAA;AAAA,cACN,KAAO,EAAA;AAAA,gBACL,QAAU,EAAA;AAAA,kBACR,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,qBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA,0BAAA;AAAA,mBACZ;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,SAAA;AAAA,UACN,gBAAkB,EAAA,KAAA;AAAA,UAClB,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,aAAA;AAAA,SACpB;AAAA,QACA,YAAc,EAAA;AAAA,UACZ,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,QAAU,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SAChD;AAAA,OACF;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,QAAA;AAAA,UACX,YAAc,EAAA,cAAA;AAAA,UACd,YAAc,EAAA,SAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGO,SAAS,YAAY,EAAqC,EAAA;AAArC,EAAA,IAAA,EAAA,GAAA,EAAA,EAAE,EAX9B,QAAA,EAAA,GAW4B,EAAe,EAAA,IAAA,GAAAG,WAAA,CAAf,IAAe,CAAb,UAAA,CAAA,CAAA,CAAA;AAC5B,EAAA,2CACG,OAAY,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAZ,EAAkB,KAAA,EAAO,kBACvB,QACH,CAAA,CAAA;AAEJ,CAAA;AAEA,MAAM,sBAAA,GAAyB,kBAAkB,SAAS,CAAA,CAAA;AAG1C,SAAA,eAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,sBAAA;AAAA,MACN,WAAa,EAAA,2BAAA;AAAA,MACb,UAAY,EAAA,gDAAA;AAAA,MACZ,UAAY,EAAA,aAAA;AAAA,MACZ,aAAe,EAAA;AAAA,QACb,QAAU,EAAA,MAAA;AAAA,QACV,UAAY,EAAA,MAAA;AAAA,QACZ,YAAc,EAAA,MAAA;AAAA,OAChB;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,SAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,IAAM,EAAA;AAAA,UACJ,IAAM,EAAA,QAAA;AAAA,UACN,YAAc,EAAA,OAAA;AAAA,UACd,QAAQ,MAAM,IAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;ACvCA,MAAM,sBAAyB,GAAA;AAAA;AAAA,EAE7B,cAAA;AAAA,EACA,eAAA;AAAA,EACA,gBAAA;AACF,CAAA,CAAA;AAQA,MAAM,YAAEC,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,sBAAA;AACF,CAAA,CAAA;AAEO,SAAS,gBAAiB,CAAA;AAAA,EAC/B,QAAA;AAAA,EACA,oBAAA;AAAA,EACA,SAAA;AACF,CAA0B,EAAA;AACxB,EAAM,MAAA,cAAA,GAAiB,KAAM,CAAA,UAAA,CAAW,cAAc,CAAA,CAAA;AACtD,EAAM,MAAA,cAAA,GAAiB,KAAM,CAAA,UAAA,CAAW,cAAc,CAAA,CAAA;AACtD,EAAM,MAAA,YAAA,GAAe,CAAC,cAAA,IAAkB,CAAC,cAAA,CAAA;AACzC,EAAA,MAAM,YACJ,mBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,YAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAOF,gBAAE,CAAA,EAAA,UAAA,EAAY,GAAQ,EAAA,EAAA,aAAA,CAAA;AAAA,MAC7B,SAAA;AAAA,KAAA;AAAA,IAEC,CAAC,EAAE,SAAA,EACF,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,cAAc,SAAc,KAAA,KAAA;AAAA,QAC5B,eAAe,SAAc,KAAA,MAAA;AAAA,QAC7B,gBAAgB,SAAc,KAAA,OAAA;AAAA,OAChC;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAEJ,CAAA;AAEF,EAAA,IAAI,YAAc,EAAA;AAChB,IAAA,2CAAQ,KAAI,EAAA,EAAA,KAAA,EAAO,EAAE,QAAU,EAAA,UAAA,MAAe,YAAa,CAAA,CAAA;AAAA,GAC7D;AACA,EAAO,OAAA,YAAA,CAAA;AACT,CAAA;AAEa,MAAA,4BAAA,GAA+B,kBAAkB,cAAc,CAAA,CAAA;AAE5D,SAAA,oBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,gBAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,4BAAA;AAAA,MACN,WAAa,EAAA,oBAAA;AAAA,MACb,UAAY,EAAA,qDAAA;AAAA,MACZ,UAAY,EAAA,kBAAA;AAAA,MACZ,aAAe,EAAA,KAAA;AAAA,gBACfD,UAAA;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,YAAc,EAAA,SAAA;AAAA,SAChB;AAAA,OACF;AAAA,KACF;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA,MAAM,cAAiB,GAAA;AAAA,EACrB,UAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAaA,MAAM,YAAEA,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,cAAc,CAAA,CAAA;AAEnC,SAAS,UAAU,KAAuB,EAAA;AAC/C,EAAA,MAMI,EALF,GAAA,KAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,KAAA;AAAA,GA/CJ,GAiDM,EADC,EAAA,IAAA,GAAAC,WAAA,CACD,EADC,EAAA;AAAA,IAJH,UAAA;AAAA,IACA,uBAAA;AAAA,IACA,sBAAA;AAAA,IACA,OAAA;AAAA,GAAA,CAAA,CAAA;AAGF,EAAM,MAAA,YAAA,GAAe,KAAM,CAAA,UAAA,CAAW,wBAAwB,CAAA,CAAA;AAC9D,EAAA,MAAM,eAAe,CAAC,YAAA,CAAA;AACtB,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAI,SAAiB,EAAE,CAAA,CAAA;AAE3D,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,EAAC,6CAAc,SAAW,CAAA,EAAA;AAC5B,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,MAAM,OAAU,GAAA,YAAA,CAAa,SAAU,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AACrD,IAAA,eAAA,CAAgB,OAAO,CAAA,CAAA;AAEvB,IAAA,OAAO,MAAM;AACX,MAAa,YAAA,CAAA,SAAA,CAAU,WAAW,OAAO,CAAA,CAAA;AACzC,MAAA,eAAA,CAAgB,EAAE,CAAA,CAAA;AAAA,KACpB,CAAA;AAAA,GACC,EAAA,CAAC,KAAO,EAAA,YAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAc,SAAS,CAAC,CAAA,CAAA;AAEnC,EAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,IACtB,MAAQ,EAAA,YAAA;AAAA,IACR,UAAU,MAAM;AACd,MAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,QAAO,OAAA,uBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,OAAO,UAAU,QAAU,EAAA;AAC7B,QAAO,OAAA,wBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,KAAM,CAAA,IAAA,EAAQ,EAAA;AACjB,QAAO,OAAA,uBAAA,CAAA;AAAA,OACT;AACA,MAAI,IAAA,CAAC,YAAgB,IAAA,KAAA,IAAS,YAAc,EAAA;AAC1C,QAAO,OAAA,sBAAA,CAAA;AAAA,OACT;AACA,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACN,GAAA;AAAA,GACL,CAAA,CAAA;AAEA,EAAA,MAAM,KACJ,mBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EACK,IADL,CAAA,EAAA;AAAA,MAEC,KAAO,EAAA,YAAA;AAAA,MACP,GAAK,EAAA,YAAA;AAAA,MACL,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,CAAC;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,cAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,MACA,UAAA;AAAA,KAEA,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,QAAU,EAAA,UAAA;AAAA,QACV,QAAU,EAAA,UAAA;AAAA,QACV,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAEJ,CAAA;AAGF,EAAA,IAAI,YAAc,EAAA;AAChB,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,kBAAY,KAAM,CAAA,CAAA;AAAA,GAC5B;AAEA,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAEa,MAAA,wBAAA,GAA2B,CAAC,KAAmC,MAAA;AAAA,EAC1E,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA;AAAA,IACN,OAAS,EAAA,MAAA;AAAA,IACT,UAAY,EAAA,QAAA;AAAA,IACZ,GAAK,EAAA,MAAA;AAAA,IACL,OAAS,EAAA,CAAA;AAAA,GACX;AAAA,EACA,QAAU,EAAA;AAAA,IACR;AAAA,MACE,IAAM,EAAA,KAAA;AAAA,MACN,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA,KAAA;AAAA,QACP,MAAQ,EAAA,KAAA;AAAA,QACR,YAAc,EAAA,MAAA;AAAA,QACd,WAAa,EAAA,KAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,QACb,WAAa,EAAA,OAAA;AAAA,OACf;AAAA,KACF;AAAA,IACA;AAAA,MACE,IAAM,EAAA,WAAA;AAAA,MACN,IAAM,EAAA,oBAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,KAAO,EAAA,KAAA;AAAA,SACT;AAAA,OACF;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA,CAAA;AAEgB,SAAA,aAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,OAAO,CAAA;AAAA,MAC/B,WAAa,EAAA,YAAA;AAAA,MACb,UAAY,EAAA,8CAAA;AAAA,MACZ,UAAY,EAAA,WAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAA+B,OAAS,EAAA;AAAA,QACzC,YAAA;AAAA,QACA,WAAA;AAAA,QACA,YAAA;AAAA,OACD,CALI,CAAA,EAAA;AAAA,QAML,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAA,EAAc,yBAAyB,OAAO,CAAA;AAAA,SAChD;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,WACE,EAAA,oEAAA;AAAA,UACF,SAAW,EAAA,CAAC,MAAQ,EAAA,MAAA,EAAQ,GAAQ,KAAA;AAClC,YAAA,IAAI,2BAAK,OAAS,EAAA;AAChB,cAAA,OAAO,GAAI,CAAA,OAAA,CAAA;AAAA,aACb;AACA,YAAO,OAAA,IAAA,CAAA;AAAA,WACT;AAAA,SACF;AAAA,OACF,CAAA;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLA,MAAM,oBAAA,GAAuB,CAAC,UAAA,EAAqB,UAAmB,CAAA,CAAA;AAStE,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,oBAAoB,CAAA,CAAA;AAEzC,SAAS,eAAe,KAA4B,EAAA;AACzD,EACE,MAAA,EAAA,GAAA,KAAA,EADM,EAAU,QAAA,EAAA,oBAAA,EAAsB,qBApC1C,EAAA,GAqCI,IADgE,IAChE,GAAAC,WAAA,CAAA,EAAA,EADgE,CAA1D,UAAA,EAAU,sBAAsB,EAAA,uBAAA,CAAA,CAAA,CAAA;AAGxC,EAAA,MAAM,CAAC,GAAK,EAAA,MAAM,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA,CAAA;AAC3C,EAAA,MAAM,YAAY,OAAQ,CAAA,MAAM,IAAI,oBAAqB,EAAA,EAAG,EAAE,CAAA,CAAA;AAE9D,EAAA,SAAA,CAAU,MAAM;AACd,IAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,MACtB,MAAQ,EAAA,GAAA;AAAA,KACV,CAAA,CAAA;AAAA,GACC,EAAA,CAAC,GAAK,EAAA,qBAAqB,CAAC,CAAA,CAAA;AAE/B,EAAA,SAAA,CAAU,MAAM;AACd,IAAU,SAAA,CAAA,SAAA,CAAU,CAAC,IAAmB,KAAA;AACtC,MAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AAAA,KACZ,CAAA,CAAA;AAAA,GACH,EAAG,CAAC,SAAS,CAAC,CAAA,CAAA;AAEd,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,yBAAyB,QAAzB,EAAA,EAAkC,OAAOJ,eAAK,CAAAC,gBAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAL,EAAY,SAAU,EAAA,CAAA,EAAA,sCAC7D,UAAe,EAAAD,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAf,EAAqB,KAAO,EAAA,aAAA,EAAA,CAAA,EAC1B,CAAC,EAAE,UAAA,EAAY,YACd,KAAAE,oBAAA;AAAA,IACE,QAAA;AAAA,IACA;AAAA,MACE,QAAU,EAAA,UAAA;AAAA,MACV,QAAU,EAAA,UAAA;AAAA,KACZ;AAAA,IACA,oBAAA;AAAA,GAGN,CACF,CAAA,CAAA;AAEJ,CAAA;AAEA,MAAM,0BAAA,GAA6B,kBAAkB,YAAY,CAAA,CAAA;AAEjD,SAAA,kBAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,MAAM,QAAW,GAAA,sBAAA;AAAA,IACf,SAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,SAAA,CAAA,mBAAA;AAAA,IACX,0BAAA;AAAA,GACF,CAAA;AAEA,EAAA,MAAM,YAAY,aAAc,CAAA,MAAA,EAAQ,EAAE,mBAAA,EAAqB,UAAU,CAAA,CAAA;AAEzE,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,cAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,0BAAA;AAAA,MACN,WAAa,EAAA,iBAAA;AAAA,MACb,UAAY,EAAA,mDAAA;AAAA,MACZ,UAAY,EAAA,gBAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAoC,aAAe,EAAA;AAAA,QACpD,MAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,OACD,CAPI,CAAA,EAAA;AAAA,QAQL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,OAAS,EAAA,MAAA;AAAA,gBACT,GAAK,EAAA,KAAA;AAAA,gBACL,OAAS,EAAA,CAAA;AAAA,gBACT,UAAY,EAAA,YAAA;AAAA,eACd;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,oBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,aAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,MAAM,SAAU,CAAA,IAAA;AAAA,kBAChB,KAAO,EAAA;AAAA,oBACL,QAAA,EAAU,yBAAyB,SAAS,CAAA;AAAA,oBAC5C,KAAO,EAAA,QAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,MAAM,SAAU,CAAA,IAAA;AAAA,kBAChB,KAAO,EAAA;AAAA,oBACL,QAAA,EAAU,yBAAyB,SAAS,CAAA;AAAA,oBAC5C,KAAO,EAAA,QAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,MAAM,SAAU,CAAA,IAAA;AAAA,kBAChB,KAAO,EAAA;AAAA,oBACL,QAAA,EAAU,yBAAyB,SAAS,CAAA;AAAA,oBAC5C,KAAO,EAAA,QAAA;AAAA,mBACT;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,0BAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KACE,EAAA,oDAAA;AAAA,qBACJ;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,eAAA;AAAA,UACb,gBAAkB,EAAA,cAAA;AAAA,UAClB,WAAa,EAAA,mBAAA;AAAA,UACb,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,MAAS,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,MAAM,CAAA,GAAI,EAAC;AAAA,UACnE,WAAa,EAAA,KAAA;AAAA,SACf;AAAA,QACA,SAAW,EAAA;AAAA,UACT,WAAa,EAAA,SAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,oCAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,kBAAoB,EAAA;AAAA,UAClB,IAAM,EAAA,QAAA;AAAA,UACN,OAAA,EAAS,CAAC,QAAA,EAAU,MAAM,CAAA;AAAA,UAC1B,WACE,EAAA,gKAAA;AAAA,UACF,gBAAkB,EAAA,QAAA;AAAA,SACpB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,OAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;AC5KA,SAAS,eAAe,KAAY,EAAA;AA9BpC,EAAA,IAAA,EAAA,CAAA;AA+BE,EAAM,MAAA,EAAE,MAAM,KAAM,EAAA,GAAA,CAAI,WAAM,UAAW,CAAA,kBAAkB,CAAnC,KAAA,IAAA,GAAA,EAAA,GAAwC,EAAC,CAAA;AACjE,EAAY,WAAA,CAAA;AAAA,IACV,KAAA;AAAA,IACA,MAAM,MAAM;AACV,MAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,EAAA,CAAA;AAEA,MAAA,UAAA,CAAW,MAAM;AArCvB,QAAA,IAAAK,GAAA,EAAA,EAAA,CAAA;AAoDQ,QAAC,CAAA,EAAA,GAAA,CAAAA,MAAA,MAAO,CAAA,MAAA,CAAO,SAAS,aAAvB,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,GAAsD,CAAA,IAAA,KAAtD,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,EAAAA,CAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA;AAAA,SACA,CAAC,CAAA,CAAA;AAAA,KACN;AAAA,IACA,KAAA;AAAA,GACD,CAAA,CAAA;AAED,EAAO,OAAA,IAAA,CAAA;AACT,CAAA;AAOa,MAAA,eAAA,GAAkB,CAAC,KAAgC,KAAA;AAC9D,EAAA,MAAM,EAAE,QAAA,EAAU,SAAW,EAAA,SAAA,EAAc,GAAA,KAAA,CAAA;AAC3C,EAAM,MAAA,WAAA,GAAc,YAAY,QAAW,GAAA,gBAAA,CAAA;AAC3C,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,SAAsB,EAAA,KAAA,EAAO,iBACvC,CAAC,EAAE,aAAe,EAAA,YAAA,EACjB,qBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,aAAgB,GAAA,WAAA,GAAc,YAAa,CAElD,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,MAAM,WAAA,GAAc,kBAAkB,QAAQ,CAAA,CAAA;AAM9C,MAAM,eAAkB,GAAA;AAAA,EACtB,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,EAAE,QAAA,EAAU,oBAAqB,EAAA,GACrC,0BAA0B,eAAe,CAAA,CAAA;AAUpC,SAAS,WAAW,KAAwB,EAAA;AACjD,EAAM,MAAA;AAAA,IACJ,WAAA;AAAA,IACA,iBAAA;AAAA,IACA,YAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAA;AAAA,IACA,YAAA;AAAA,IACA,IAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,YAAc,EAAA,SAAA;AAAA,GACZ,GAAA,KAAA,CAAA;AAEJ,EAAA,MAAM,YAAY,OAAQ,CAAA,MAAM,IAAI,oBAAqB,EAAA,EAAG,EAAE,CAAA,CAAA;AAE9D,EAAA,SAAA,CAAU,MAAM;AACd,IAAU,SAAA,CAAA,SAAA,CAAU,CAAC,GAAkB,KAAA;AACrC,MAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,QACtB,OAAS,EAAA,GAAA;AAAA,OACX,CAAA,CAAA;AAAA,KACD,CAAA,CAAA;AAAA,GACH,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,MAAM,aAAgB,GAAA,WAAA;AAAA,IACpB,CAAC;AAAA,MACC,UAAY,EAAA,WAAA;AAAA,MACZ,cAAA;AAAA,MACA,SAAA;AAAA,KACuB,KAAA;AACvB,MAAuB,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAA;AAAA,QACrB,QAAU,EAAA,WAAA;AAAA,QACV,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,OAChB,CAAA,CAAA;AACA,MAAA,OAAO,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA;AAAA,KACtB;AAAA,IACA,CAAC,WAAW,oBAAoB,CAAA;AAAA,GAClC,CAAA;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAAL,gBAAA,CAAA;AAAA,MACC,WAAA;AAAA,MACA,iBAAA;AAAA,MACA,YAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAW,EAAA,aAAA;AAAA,MACX,KAAO,EAAA,aAAA;AAAA,MACP,IAAA;AAAA,MACA,YAAA;AAAA,MACA,YAAY,EAAA,SAAA;AAAA,KAAA,EACR,wBAAwB,KAAK,CAAA,CAAA;AAAA,oBAEjC,KAAA,CAAA,aAAA,CAAC,qCAAmB,KAAO,CAAA,CAAA;AAAA,oBAC1B,KAAA,CAAA,aAAA,CAAA,4BAAA,CAA6B,QAA7B,EAAA,EAAsC,OAAO,IAC5C,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,qBAAsB,CAAA,QAAA;AAAA,MAAtB;AAAA,QACC,KAAO,EAAA;AAAA,UACL,SAAA;AAAA,SACF;AAAA,OAAA;AAAA,MAEC,QAAA;AAAA,KAEL,CAAA;AAAA,GACF,CAAA;AAEJ,CAAA;AAEO,SAAS,eAAe,MAAuB,EAAA;AACpD,EAAM,MAAA,eAAA,GAAkB,uBAAwB,CAAA,MAAA,EAAQ,eAAiB,EAAA;AAAA,IACvE,IAAA,EAAM,kBAAkB,cAAc,CAAA;AAAA,IACtC,WAAa,EAAA,qBAAA;AAAA,IACb,UAAY,EAAA,+CAAA;AAAA,IACZ,UAAY,EAAA,iBAAA;AAAA,IACZ,mBAAqB,EAAA,WAAA;AAAA,IACrB,KAAO,EAAA;AAAA,MACL,SAAW,EAAA;AAAA,QACT,IAAM,EAAA,SAAA;AAAA,QACN,WAAa,EAAA,uBAAA;AAAA,QACb,YAAc,EAAA,IAAA;AAAA,QACd,WAAa,EAAA,2CAAA;AAAA,OACf;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,WAAa,EAAA,aAAA;AAAA,QACb,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,gBAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,MAAQ,EAAA,CAAC,KAAU,KAAA,CAAC,KAAM,CAAA,SAAA;AAAA,OAC5B;AAAA,KACF;AAAA,IACA,UAAY,EAAA,IAAA;AAAA,GACb,CAAA,CAAA;AAED,EAAA,uBAAA,CAAwB,QAAQ,UAAY,EAAA;AAAA,IAC1C,IAAM,EAAA,WAAA;AAAA,IACN,WAAa,EAAA,aAAA;AAAA,IACb,UAAY,EAAA,+CAAA;AAAA,IACZ,UAAY,EAAA,YAAA;AAAA,IACZ,QAAU,EAAA,oBAAA;AAAA,IACV,KAAA,EAAOD,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAgC,QAAU,EAAA;AAAA,MAC3C,MAAA;AAAA,MACA,YAAA;AAAA,MACA,YAAA;AAAA,MACA,WAAA;AAAA,KACD,CANI,CAAA,EAAA;AAAA,MAOL,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,QAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,gBAAkB,EAAA,oBAAA;AAAA,QAClB,WAAa,EAAA,uBAAA;AAAA,QACb,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAU,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,OAAO,CAAA,GAAI,EAAC;AAAA;AAAA,QAErE,WAAa,EAAA,KAAA;AAAA,OACf;AAAA,MACA,iBAAmB,EAAA;AAAA,QACjB,IAAM,EAAA,cAAA;AAAA,QACN,UAAU,CAAC,EAAE,MAAM,eAAiB,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,OACtD;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,QAAA;AAAA,QACN,WAAa,EAAA,iBAAA;AAAA,QACb,WACE,EAAA,qGAAA;AAAA,QACF,OAAA,EAAS,CAAC,MAAA,EAAQ,GAAS,KAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAU,IAAA,KAAA,CAAM,IAAK,CAAA,GAAA,CAAI,OAAO,CAAA,GAAI,EAAC;AAAA,QACrE,WAAa,EAAA,IAAA;AAAA,QACb,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,YAAc,EAAA,KAAA;AAAA;AAAA,QAEd,QAAQ,MAAM,IAAA;AAAA,OAChB;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,cAAA;AAAA,QACN,UAAU,CAAC,EAAE,MAAM,QAAU,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,OAChD;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,eAAiB,EAAA,IAAA;AAAA,QACjB,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,MAAA;AAAA,YACN,MAAQ,EAAA;AAAA,cACN,cAAgB,EAAA,YAAA;AAAA,cAChB,UAAY,EAAA,YAAA;AAAA,cACZ,KAAO,EAAA,OAAA;AAAA,cACP,OAAS,EAAA,CAAA;AAAA,aACX;AAAA,YACA,QAAU,EAAA;AAAA,cACR;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,oBAAA;AAAA,gBACN,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR,IAAM,EAAA,MAAA;AAAA,oBACN,KAAO,EAAA,OAAA;AAAA,mBACT;AAAA,iBACF;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,qBAAA;AAAA,gBACN,MAAQ,EAAA;AAAA,kBACN,KAAO,EAAA,MAAA;AAAA,kBACP,OAAS,EAAA,UAAA;AAAA,kBACT,UAAY,EAAA,OAAA;AAAA,iBACd;AAAA,gBACA,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR,IAAM,EAAA,MAAA;AAAA,oBACN,MAAQ,EAAA;AAAA,sBACN,KAAO,EAAA,SAAA;AAAA,sBACP,cAAgB,EAAA,eAAA;AAAA,sBAChB,UAAY,EAAA,QAAA;AAAA,sBACZ,OAAS,EAAA,CAAA;AAAA,qBACX;AAAA,oBACA,QAAU,EAAA;AAAA,sBACR;AAAA,wBACE,IAAM,EAAA,WAAA;AAAA,wBACN,MAAM,eAAgB,CAAA,IAAA;AAAA,uBACxB;AAAA,sBACA,SAAA;AAAA,qBACF;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,sBAAA;AAAA,gBACN,MAAQ,EAAA;AAAA,kBACN,eAAiB,EAAA,OAAA;AAAA,kBACjB,OAAS,EAAA,MAAA;AAAA,kBACT,QAAU,EAAA,QAAA;AAAA,kBACV,KAAO,EAAA,OAAA;AAAA,iBACT;AAAA,gBACA,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR;AAAA,sBACE,IAAM,EAAA,WAAA;AAAA,sBACN,IAAM,EAAA,uBAAA;AAAA,sBACN,KAAO,EAAA;AAAA,wBACL,aAAe,EAAA,QAAA;AAAA,uBACjB;AAAA,sBACA,MAAQ,EAAA;AAAA,wBACN,WAAa,EAAA,CAAA;AAAA,wBACb,KAAO,EAAA,SAAA;AAAA,uBACT;AAAA,qBACF;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,KACF,CAAA;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,aAAe,EAAA;AAAA,QACb,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,aAAA;AAAA,QACX,YAAc,EAAA,mBAAA;AAAA,QACd,YAAc,EAAA,MAAA;AAAA,OAChB;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,QAAA;AAAA,QACX,YAAc,EAAA,cAAA;AAAA,QACd,YAAc,EAAA,SAAA;AAAA,OAChB;AAAA,KACF;AAAA,IACA,UAAY,EAAA,IAAA;AAAA,GACb,CAAA,CAAA;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxUA,MAAM,sBAAA,GAAyB,CAAC,UAAmB,CAAA,CAAA;AAOnD,MAAM,YAAEC,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,sBAAA;AACF,CAAA,CAAA;AAEO,SAAS,iBAAiB,KAA8B,EAAA;AAC7D,EAAoD,MAAA,EAAA,GAAA,KAAA,EAA5C,wBAAsB,QAvBhC,EAAA,GAuBsD,IAAT,IAAS,GAAAC,WAAA,CAAA,EAAA,EAAT,CAAnC,sBAAsB,EAAA,UAAA,CAAA,CAAA,CAAA;AAC9B,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,mDAAiB,IAAjB,CAAA,EAAA,EAAuB,OAAO,aAC5B,EAAA,CAAA,EAAA,CAAC,EAAE,UAAA,EACF,KAAAD,oBAAA;AAAA,IACE,QAAA;AAAA,IACA;AAAA,MACE,QAAU,EAAA,UAAA;AAAA,KACZ;AAAA,IACA,oBAAA;AAAA,GAGN,CAAA,CAAA;AAEJ,CAAA;AAEa,MAAA,4BAAA,GAA+B,kBAAkB,cAAc,CAAA,CAAA;AAE5D,SAAA,oBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,gBAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,4BAAA;AAAA,MACN,WAAa,EAAA,oBAAA;AAAA,MACb,UAAY,EAAA,qDAAA;AAAA,MACZ,UAAY,EAAA,kBAAA;AAAA,gBACZD,UAAA;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,eAAiB,EAAA,IAAA;AAAA,UACjB,IAAM,EAAA,MAAA;AAAA,SACR;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;ACrDA,MAAM,sBAAsB,SAAkD,CAAA;AAAA,EAC5E,YAAY,KAA2B,EAAA;AACrC,IAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AACX,IAAK,IAAA,CAAA,KAAA,GAAQ,EAAE,QAAA,EAAU,KAAM,EAAA,CAAA;AAAA,GACjC;AAAA,EAEA,OAAO,yBAAyB,CAA8B,EAAA;AAE5D,IAAO,OAAA,EAAE,UAAU,IAAK,EAAA,CAAA;AAAA,GAC1B;AAAA,EAEA,MAAS,GAAA;AACP,IAAI,IAAA,IAAA,CAAK,MAAM,QAAU,EAAA;AACvB,MAAA,OAAO,KAAK,KAAM,CAAA,QAAA,CAAA;AAAA,KACpB;AAEA,IAAA,OAAO,KAAK,KAAM,CAAA,QAAA,CAAA;AAAA,GACpB;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA,MAAM,qBAAwB,GAAA;AAAA,EAC5B,UAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEA,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,qBAAA;AACF,CAAA,CAAA;AAOO,SAAS,gBAAgB,EAKP,EAAA;AALO,EAC9B,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,QAAA;AAAA,IACA,oBAAA;AAAA,GAhCF,GA6BgC,EAI3B,EAAA,IAAA,GAAAC,WAAA,CAJ2B,EAI3B,EAAA;AAAA,IAHH,UAAA;AAAA,IACA,UAAA;AAAA,IACA,sBAAA;AAAA,GAAA,CAAA,CAAA;AAGA,EAAA,MAAM,KACJ,mBAAA,KAAA,CAAA,aAAA,CAAC,WAAgB,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAhB,EAAsB,KAAO,EAAA,aAAA,EAAA,CAAA,EAC3B,CAAC,EAAE,UAAY,EAAA,SAAA,EAAW,SAAW,EAAA,cAAA,EAAgB,YACpD,KAAAE,oBAAA;AAAA,oBACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAW,GAAA,QAAA,GAAW,KAAU,CAAA,CAAA;AAAA,IACnC;AAAA,MACE,QAAU,EAAA,UAAA;AAAA,MACV,OAAS,EAAA,SAAA;AAAA,MACT,OAAS,EAAA,SAAA;AAAA,MACT,YAAc,EAAA,cAAA;AAAA,MACd,QAAU,EAAA,UAAA;AAAA,KACZ;AAAA,IACA,oBAAA;AAAA,GAGN,CAAA,CAAA;AAGF,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA;AAAA,MAGC,QACE,kBAAA,KAAA,CAAA,aAAA,CAAC,MAAO,EAAA,EAAA,KAAA,EAAO,EAAE,MAAA,EAAQ,MAAQ,EAAA,KAAA,EAAO,MAAO,EAAA,EAAA,kBAC5C,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,IAAA,EAAa,KAAM,CACtB,CAAA;AAAA,KAAA;AAAA,IAGD,KAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AAEa,MAAA,2BAAA,GAA8B,kBAAkB,aAAa,CAAA,CAAA;AAE1D,SAAA,mBAAA,CACd,QACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,eAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,2BAAA;AAAA,MACN,WAAa,EAAA,mBAAA;AAAA,MACb,UAAY,EAAA,oDAAA;AAAA,MACZ,UAAY,EAAA,iBAAA;AAAA,MACZ,aAAe,EAAA;AAAA,QACb,QAAU,EAAA,UAAA;AAAA,QACV,GAAK,EAAA,KAAA;AAAA,QACL,KAAO,EAAA,MAAA;AAAA,QACP,MAAQ,EAAA,MAAA;AAAA,QACR,eAAiB,EAAA,SAAA;AAAA,QACjB,YAAc,EAAA,MAAA;AAAA,QACd,MAAQ,EAAA,SAAA;AAAA,OACV;AAAA,gBACAD,UAAA;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAqC,cAAgB,EAAA;AAAA,QACtD,MAAA;AAAA,QACA,YAAA;AAAA,QACA,WAAA;AAAA,OACD,CALI,CAAA,EAAA;AAAA,QAML,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,UAAA;AAAA,UACb,WACE,EAAA,gEAAA;AAAA,SACJ;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,MAAQ,EAAA,CAAC,KAAU,KAAA,CAAC,KAAM,CAAA,QAAA;AAAA,SAC5B;AAAA,OACF,CAAA;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA,MAAM,qBAAA,GAAwB,CAAC,SAAkB,CAAA,CAAA;AAEjD,MAAM,YAAEC,UAAU,sBAAAC,oBAAA,EAAuB,GAAA,yBAAA;AAAA,EACvC,qBAAA;AACF,CAAA,CAAA;AASA,SAAS,kBAAkB,KAA8C,EAAA;AACvE,EAAA,OAAO,KAAM,CAAA,OAAA,CAAQ,KAAK,CAAA,IAAK,MAAM,MAAS,GAAA,CAAA,CAAA;AAChD,CAAA;AAEO,SAAS,gBAAgB,KAA6B,EAAA;AAC3D,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,UAAA,CAAW,oBAAoB,CAAA,CAAA;AACrD,EAAA,MAAM,eAAe,CAAC,OAAA,CAAA;AACtB,EAAiE,MAAA,EAAA,GAAA,KAAA,EAAzD,EAAU,QAAA,EAAA,WAAA,EAAa,oBApCjC,EAAA,GAoCmE,IAAT,IAAS,GAAAC,WAAA,CAAA,EAAA,EAAT,CAAhD,UAAA,EAAU,aAAa,EAAA,sBAAA,CAAA,CAAA,CAAA;AAE/B,EAAM,MAAA,YAAA,GACJ,WAAW,iBAAkB,CAAA,OAAA,CAAQ,KAAK,CAAI,GAAA,OAAA,CAAQ,MAAM,MAAS,GAAA,CAAA,CAAA;AACvE,EAAA,MAAM,eAAe,YAAe,GAAA,CAAA,CAAA;AAEpC,EAAA,MAAM,EAAE,QAAA,EAAU,QAAS,EAAA,GAAI,QAAQ,MAAM;AAC3C,IAAA,IAAI,gBAAgB,CAAG,EAAA;AACrB,MAAA,OAAO,EAAE,QAAA,EAAU,CAAG,EAAA,QAAA,EAAU,CAAE,EAAA,CAAA;AAAA,KACpC;AACA,IAAA,OAAO,EAAE,QAAA,EAAU,CAAG,EAAA,QAAA,EAAU,eAAe,CAAE,EAAA,CAAA;AAAA,GACnD,EAAG,CAAC,YAAY,CAAC,CAAA,CAAA;AAYjB,EAAM,MAAA,MAAA,GAAS,QAAQ,MAAM;AAC3B,IAAM,MAAA,UAAA,GAAa,gBAAgB,QAAQ,CAAA,CAAA;AAC3C,IAAI,IAAA,CAAC,cAAc,UAAW,CAAA,MAAA,KAAW,KAAK,CAAC,SAAA,CAAU,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,KAAK,CAAG,EAAA;AACxE,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AAEA,IAAA,MAAM,MAAS,GAAA,SAAA,CAAU,OAAO,CAAA,GAC5B,MAAM,OAAQ,CAAA,OAAA,CAAQ,KAAK,CAAA,GACzB,QAAQ,KACR,GAAA,CAAC,OAAQ,CAAA,KAAK,IAChB,EAAC,CAAA;AAGL,IAAA,MAAM,SAAY,GAAA,UAAA,CAAW,UAAW,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;AAElD,IAAA,OAAO,MAAO,CAAA,GAAA,CAAI,CAAC,CAAA,EAAG,CAAM,KAAA;AAC1B,MAAM,MAAA,YAAA,GAAe,WAAW,CAAC,CAAA,CAAA;AAEjC,MAAI,IAAA,CAAA,IAAK,WAAW,MAAQ,EAAA;AAC1B,QAAI,IAAA,KAAA,CAAM,cAAe,CAAA,SAAS,CAAG,EAAA;AACnC,UAAO,OAAA,KAAA,CAAM,aAAa,SAAW,EAAA;AAAA,YACnC,KAAO,EAAA,CAAA;AAAA,WACY,CAAA,CAAA;AAAA,SACvB;AAAA,OACF;AACA,MAAA,IAAI,CAAC,KAAA,CAAM,cAAe,CAAA,YAAY,CAAG,EAAA;AACvC,QAAO,OAAA,IAAA,CAAA;AAAA,OACT;AACA,MAAO,OAAA,KAAA,CAAM,aAAa,YAAc,EAAA;AAAA,QACtC,KAAO,EAAA,CAAA;AAAA,OACY,CAAA,CAAA;AAAA,KACtB,CAAA,CAAA;AAAA,GACA,EAAA,CAAC,QAAU,EAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,KAAK,CAAC,CAAA,CAAA;AAE7B,EAAA,MAAM,KACJ,mBAAA,KAAA,CAAA,aAAA,CAAC,WAAY,EAAAH,gBAAA,CAAA,EAAA,KAAA,EAAO,EAAE,QAAU,EAAA,UAAA,EAAkB,EAAA,EAAA,IAAA,CAAA,EAC/C,CAAC,EAAE,KAAO,EAAA,SAAA,uBAEN,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAAE,oBAAA;AAAA,oBAEG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA;AAAA,UACL,KAAO,EAAA,CAAA,EAAA,CACJ,CAAC,YAAA,GACE,MAAM,eAAgB,CAAA,QAAQ,CAC9B,GAAA,KAAA,CAAM,gBAAgB,QAAQ,CAAA,GAC9B,KAAM,CAAA,eAAA,CAAgB,QAAQ,CAAK,IAAA,GAAA,CAAA,CAAA,CAAA;AAAA,UAEzC,MAAQ,EAAA,MAAA;AAAA,UACR,QAAU,EAAA,UAAA;AAAA,UACV,GAAK,EAAA,CAAA;AAAA,UACL,IAAA,EAAM,CAAC,YACH,GAAA,CAAA,GACA,MAAM,eAAgB,CAAA,QAAQ,IAAI,GAAM,GAAA,GAAA;AAAA,SAC9C;AAAA,OAAA;AAAA,MAEC,WAAA;AAAA,OAEF,MACH,CAAA;AAAA,IACA;AAAA,MACE,OAAS,EAAA,SAAA;AAAA,KACX;AAAA,IACA,oBAAA;AAAA,GAEJ,CAEJ,CAAA,CAAA;AAGF,EAAA,IAAI,YAAc,EAAA;AAChB,IACE,uBAAA,KAAA,CAAA,aAAA,CAAC,UAAO,KAAO,EAAAF,gBAAA,CAAA,EAAE,QAAQ,MAAQ,EAAA,KAAA,EAAO,MAAW,EAAA,EAAA,aAAA,CAAA,EAAA,EAChD,KACH,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAEa,MAAA,2BAAA,GAA8B,kBAAkB,aAAa,CAAA,CAAA;AAE1D,SAAA,mBAAA,CACd,eACA,EAAA,MAAA,EACA,SACA,EAAA;AACA,EAAO,OAAA,uBAAA;AAAA,IACL,MAAA;AAAA,IACA,eAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,2BAAA;AAAA,MACN,WAAa,EAAA,mBAAA;AAAA,MACb,UAAY,EAAA,oDAAA;AAAA,MACZ,UAAY,EAAA,iBAAA;AAAA,gBACZC,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,SAAA;AAAA,QACP,eAAiB,EAAA,MAAA;AAAA,QACjB,QAAU,EAAA,UAAA;AAAA,QACV,MAAQ,EAAA,MAAA;AAAA,QACR,OAAS,EAAA,CAAA;AAAA,OACX;AAAA,MACA,KAAO,EAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMN,WAAa,EAAA,QAAA;AAAA,UACb,WACE,EAAA,8EAAA;AAAA,UACF,iBAAA,EAAmB,CAAC,eAAA,CAAgB,IAAI,CAAA;AAAA,UACxC,gBAAkB,EAAA,IAAA;AAAA,UAClB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,aACxB;AAAA,WACF;AAAA,SACF;AAAA,QACA,WAAa,EAAA;AAAA,UACX,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,WAAa,EAAA,cAAA;AAAA,UACb,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,KAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,MAAQ,EAAA,MAAA;AAAA,gBACR,KAAO,EAAA,MAAA;AAAA,gBACP,eAAiB,EAAA,SAAA;AAAA,gBACjB,OAAS,EAAA,CAAA;AAAA,eACX;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,YAAc,EAAA;AAAA,UACZ,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,QACA,aAAe,EAAA;AAAA,UACb,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SACpD;AAAA,OACF;AAAA,KACF;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtMA,MAAM,qBAAA,GAAwB,kBAAkB,QAAQ,CAAA,CAAA;AACxD,MAAM,2BAAA,GAA8B,kBAAkB,cAAc,CAAA,CAAA;AACpE,MAAM,eAAA,GAAkB,CAAC,UAAmB,CAAA,CAAA;AAE5C,MAAM,YAAEA,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,eAAe,CAAA,CAAA;AAQpC,SAAS,WACd,KACA,EAAA;AACA,EAAoD,MAAA,EAAA,GAAA,KAAA,EAA5C,YAAU,oBAjCpB,EAAA,GAiCsD,IAAT,IAAS,GAAAC,WAAA,CAAA,EAAA,EAAT,CAAnC,UAAU,EAAA,sBAAA,CAAA,CAAA,CAAA;AAClB,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,oBAAqB,CAAA,QAAA;AAAA,IAArB;AAAA,MACC,KAAA,EAAOJ,qCACF,IADE,CAAA,EAAA;AAAA;AAAA,QAGL,UAAU,IAAK,CAAA,QAAA;AAAA,QACf,aAAa,IAAK,CAAA,WAAA;AAAA,OACpB,CAAA;AAAA,KAAA;AAAA,oBAEA,KAAA,CAAA,aAAA,CAAC,6CAAc,IAAd,CAAA,EAAA,EAAoB,OAAO,aACzB,EAAA,CAAA,EAAA,CAAC,EAAE,UAAA,EACF,KAAAG,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KAGN,CAAA;AAAA,GACF,CAAA;AAEJ,CAAA;AAEA,SAAS,oBAEE,GAAA;AACT,EAAO,OAAA;AAAA,IACL,WAAa,EAAA;AAAA,MACX,IAAM,EAAA,QAAA;AAAA,MACN,OAAA,EAAS,CAAC,YAAA,EAAc,UAAU,CAAA;AAAA,MAClC,gBAAkB,EAAA,YAAA;AAAA,MAClB,YAAc,EAAA,YAAA;AAAA,KAChB;AAAA,IACA,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,QAAA;AAAA,MACN,WAAa,EAAA,iCAAA;AAAA,MACb,gBAAkB,EAAA,CAAA;AAAA,KACpB;AAAA,IACA,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,QAAA;AAAA,MACN,WAAa,EAAA,iCAAA;AAAA,MACb,gBAAkB,EAAA,GAAA;AAAA,KACpB;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,IAAM,EAAA,QAAA;AAAA,MACN,WAAa,EAAA,8BAAA;AAAA,MACb,gBAAkB,EAAA,CAAA;AAAA,KACpB;AAAA,GACF,CAAA;AACF,CAAA;AAEgB,SAAA,cAAA,CACd,QACA,SACA,EAAA;AACA,EAAM,MAAA,gBAAA,GAAmB,qBAAqB,MAAQ,EAAA;AAAA,IACpD,mBAAqB,EAAA,qBAAA;AAAA,GACtB,CAAA,CAAA;AAED,EAAM,MAAA,eAAA,GAAkB,oBAAoB,MAAQ,EAAA;AAAA,IAClD,mBAAqB,EAAA,qBAAA;AAAA,GACtB,CAAA,CAAA;AACD,EAAM,MAAA,eAAA,GAAkB,mBAAoB,CAAA,eAAA,EAAiB,MAAQ,EAAA;AAAA,IACnE,mBAAqB,EAAA,qBAAA;AAAA,GACtB,CAAA,CAAA;AAGD,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,2BAAA;AAAA,MACN,WAAa,EAAA,mBAAA;AAAA,MACb,UAAY,EAAA,+CAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,gBACZD,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,OAAA;AAAA,OACT;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAAA,gBAAA,CAAA,EAAA,EAAA,cAAA,CAA0C,QAAU,EAAA;AAAA,QACrD,YAAA;AAAA,QACA,YAAA;AAAA,OACD,CACE,CAAA,EAAA,oBAAA,EALE,CAAA,EAAA;AAAA,QAML,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,OAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,eAAA;AAAA,UACb,gBAAkB,EAAA,cAAA;AAAA,UAClB,WAAa,EAAA,gCAAA;AAAA,UACb,YAAA,EAAc,CAAC,EAAA,EAAI,EAAE,CAAA;AAAA,UACrB,SAAA,EAAW,CAAC,KAAU,KAAA;AACpB,YAAA,IAAI,CAAC,KAAA,CAAM,OAAQ,CAAA,KAAK,CAAG,EAAA;AACzB,cAAO,OAAA,yBAAA,CAAA;AAAA,aACT;AAEA,YAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,QAAQ,CAAK,EAAA,EAAA;AACrC,cAAA,IAAI,MAAM,CAAC,CAAA,GAAI,KAAM,CAAA,CAAA,GAAI,CAAC,CAAG,EAAA;AAC3B,gBAAO,OAAA,4CAAA,CAAA;AAAA,eACT;AAAA,aACF;AAEA,YAAO,OAAA,IAAA,CAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,KAAO,EAAA,SAAA;AAAA,gBACP,cAAgB,EAAA,eAAA;AAAA,gBAChB,OAAS,EAAA,SAAA;AAAA,eACX;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,oBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,OAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,MAAM,gBAAiB,CAAA,IAAA;AAAA,kBACvB,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,QAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,cACtB,KAAO,EAAA;AAAA,gBACL,QAAU,EAAA;AAAA,kBACR;AAAA,oBACE,IAAM,EAAA,WAAA;AAAA,oBACN,MAAM,eAAgB,CAAA,IAAA;AAAA,mBACxB;AAAA,kBACA;AAAA,oBACE,IAAM,EAAA,WAAA;AAAA,oBACN,MAAM,eAAgB,CAAA,IAAA;AAAA,oBACtB,MAAQ,EAAA;AAAA,sBACN,eAAiB,EAAA,MAAA;AAAA,qBACnB;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,QACA,WAAa,EAAA;AAAA,UACX,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,OAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA;AAAA,MACE,mBAAqB,EAAA,qBAAA;AAAA,KACvB;AAAA,GACF,CAAA;AAEA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,qBAAA;AAAA,MACN,WAAa,EAAA,aAAA;AAAA,MACb,UAAY,EAAA,+CAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,gBACZC,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,KAAO,EAAA,OAAA;AAAA,OACT;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAAA,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAwC,QAAU,EAAA;AAAA,QACnD,YAAA;AAAA,QACA,YAAA;AAAA,OACD,CACE,CAAA,EAAA,oBAAA,EALE,CAAA,EAAA;AAAA,QAML,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,KAAO,EAAA,SAAA;AAAA,gBACP,cAAgB,EAAA,eAAA;AAAA,gBAChB,OAAS,EAAA,SAAA;AAAA,eACX;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,oBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,OAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,gBACA;AAAA,kBACE,IAAM,EAAA,WAAA;AAAA,kBACN,MAAM,gBAAiB,CAAA,IAAA;AAAA,kBACvB,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,QAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,MAAM,eAAgB,CAAA,IAAA;AAAA,aACxB;AAAA,WACF;AAAA,SACF;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,eAAA;AAAA,UACb,gBAAkB,EAAA,cAAA;AAAA,UAClB,WAAa,EAAA,iCAAA;AAAA,UACb,gBAAkB,EAAA,CAAA;AAAA,UAClB,YAAc,EAAA,CAAA;AAAA,SAChB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,QACA,WAAa,EAAA;AAAA,UACX,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,OAAS,EAAA,IAAA,EAAM,UAAU,CAAA;AAAA,SAC9C;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,QAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpSA,MAAM,eAAkB,GAAA;AAAA,EACtB,SAAA;AAAA,EACA,SAAA;AAAA,EACA,SAAA;AAAA,EACA,cAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,eAAe,CAAA,CAAA;AAQpC,SAAS,WAAW,KAAwB,EAAA;AACjD,EAAoD,MAAA,EAAA,GAAA,KAAA,EAA5C,YAAU,oBAlCpB,EAAA,GAkCsD,IAAT,IAAS,GAAAC,WAAA,CAAA,EAAA,EAAT,CAAnC,UAAU,EAAA,sBAAA,CAAA,CAAA,CAAA;AAClB,EAAA,2CACG,MAAW,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAX,EAAiB,KAAA,EAAO,kBACtB,CAAC;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,UAAA;AAAA,IACA,UAAA;AAAA,IACA,UAAA;AAAA,GAEA,KAAAE,oBAAA;AAAA,IACE,QAAA;AAAA,IACA;AAAA,MACE,OAAS,EAAA,SAAA;AAAA,MACT,OAAS,EAAA,SAAA;AAAA,MACT,OAAS,EAAA,SAAA;AAAA,MACT,YAAc,EAAA,cAAA;AAAA,MACd,QAAU,EAAA,UAAA;AAAA,MACV,QAAU,EAAA,UAAA;AAAA,MACV,QAAU,EAAA,UAAA;AAAA,KACZ;AAAA,IACA,oBAAA;AAAA,GAGN,CAAA,CAAA;AAEJ,CAAA;AAEgB,SAAA,cAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,QAAQ,CAAA;AAAA,MAChC,WAAa,EAAA,aAAA;AAAA,MACb,UAAY,EAAA,+CAAA;AAAA,MACZ,UAAY,EAAA,YAAA;AAAA,gBACZD,UAAA;AAAA,MACA,aAAe,EAAA;AAAA,QACb,OAAS,EAAA,MAAA;AAAA,QACT,aAAe,EAAA,QAAA;AAAA,QACf,UAAY,EAAA,QAAA;AAAA,QACZ,cAAgB,EAAA,YAAA;AAAA,QAChB,OAAS,EAAA,CAAA;AAAA,OACX;AAAA,MACA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAgC,QAAU,EAAA;AAAA,QAC3C,MAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,WAAA;AAAA,QACA,YAAA;AAAA,OACD,CAPI,CAAA,EAAA;AAAA,QAQL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ;AAAA,cACE,IAAM,EAAA,MAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,OAAS,EAAA,MAAA;AAAA,gBACT,UAAY,EAAA,QAAA;AAAA,gBACZ,cAAgB,EAAA,QAAA;AAAA,gBAChB,GAAK,EAAA,MAAA;AAAA,gBACL,OAAS,EAAA,CAAA;AAAA,eACX;AAAA,cACA,QAAU,EAAA;AAAA,gBACR;AAAA;AAAA,kBAEE,IAAM,EAAA,MAAA;AAAA,kBACN,MAAQ,EAAA;AAAA,oBACN,KAAO,EAAA,MAAA;AAAA,oBACP,MAAQ,EAAA,MAAA;AAAA,oBACR,OAAS,EAAA,CAAA;AAAA,oBACT,eAAiB,EAAA,SAAA;AAAA,oBACjB,MAAQ,EAAA,SAAA;AAAA,oBACR,YAAc,EAAA,OAAA;AAAA,mBAChB;AAAA,kBACA,QAAU,EAAA;AAAA;AAAA,oBAER,IAAM,EAAA,MAAA;AAAA,oBACN,MAAQ,EAAA;AAAA,sBACN,KAAO,EAAA,MAAA;AAAA,sBACP,MAAQ,EAAA,MAAA;AAAA,sBACR,QAAU,EAAA,UAAA;AAAA,sBACV,GAAK,EAAA,KAAA;AAAA,sBACL,IAAM,EAAA,KAAA;AAAA,sBACN,YAAc,EAAA,MAAA;AAAA,sBACd,eAAiB,EAAA,MAAA;AAAA,sBACjB,OAAS,EAAA,CAAA;AAAA,sBACT,kBAAoB,EAAA,KAAA;AAAA,sBACpB,kBAAoB,EAAA,MAAA;AAAA,sBACpB,wBAA0B,EAAA,aAAA;AAAA,qBAC5B;AAAA,mBACF;AAAA,iBACF;AAAA,gBACA;AAAA;AAAA,kBAEE,IAAM,EAAA,WAAA;AAAA,kBACN,IAAM,EAAA,oBAAA;AAAA,kBACN,KAAO,EAAA;AAAA,oBACL,QAAU,EAAA;AAAA,sBACR,IAAM,EAAA,MAAA;AAAA,sBACN,KAAO,EAAA,OAAA;AAAA,qBACT;AAAA,mBACF;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,YACA;AAAA,cACE,IAAM,EAAA,WAAA;AAAA,cACN,IAAM,EAAA,0BAAA;AAAA,cACN,MAAQ,EAAA;AAAA,gBACN,QAAU,EAAA,MAAA;AAAA,eACZ;AAAA,cACA,KAAO,EAAA;AAAA,gBACL,QAAU,EAAA;AAAA,kBACR,IAAM,EAAA,MAAA;AAAA,kBACN,KAAO,EAAA,oDAAA;AAAA,iBACT;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA,UACN,WACE,EAAA,iFAAA;AAAA,UACF,gBAAkB,EAAA,IAAA;AAAA,SACpB;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,SAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,kBAAA;AAAA,UACb,gBAAkB,EAAA,iBAAA;AAAA,UAClB,WAAa,EAAA,kDAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,YAAc,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SACpD;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,YAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,SAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA,MAAM,iBAAoB,GAAA;AAAA,EACxB,SAAA;AAAA,EACA,cAAA;AAAA,EACA,SAAA;AAAA,EACA,UAAA;AACF,CAAA,CAAA;AAEA,MAAM,YAAEC,UAAA,EAAa,GAAA,yBAAA,CAA0B,iBAAiB,CAAA,CAAA;AASzD,MAAM,YAAe,GAAA;AAAA,EAC1B,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA;AAAA,MACL,mBAAA,EAAqB,CAAC,CAAqC,KAAA;AACzD,QAAA,OAAO,EAAE,MAAO,CAAA,KAAA,CAAA;AAAA,OAClB;AAAA,KACF;AAAA,GACF;AACF,CAAA,CAAA;AAEO,SAAS,aAAa,KAA0B,EAAA;AACrD,EACE,MAAA,EAAA,GAAA,KAAA,EADM,EAAW,SAAA,EAAA,oBAAA,EAAsB,qBA1C3C,EAAA,GA2CI,IADiE,IACjE,GAAAE,WAAA,CAAA,EAAA,EADiE,CAA3D,WAAA,EAAW,sBAAsB,EAAA,uBAAA,CAAA,CAAA,CAAA;AAGzC,EAAM,MAAA,gBAAA,GAAmB,KAAM,CAAA,UAAA,CAAW,uBAAuB,CAAA,CAAA;AAEjE,EAAwB,qBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA;AAAA,IACtB,MAAQ,EAAA,gBAAA;AAAA,GACV,CAAA,CAAA;AAEA,EAAA,MAAM,aAAgB,GAAA,WAAA;AAAA,IACpB,CAAC;AAAA,MACC,UAAA;AAAA,MACA,cAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,KACsB,KAAA;AACtB,MAAuB,oBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,oBAAA,CAAA;AAAA,QACrB,QAAU,EAAA,UAAA;AAAA,QACV,OAAS,EAAA,SAAA;AAAA,QACT,YAAc,EAAA,cAAA;AAAA,QACd,OAAS,EAAA,SAAA;AAAA,OACX,CAAA,CAAA;AACA,MAAA,OAAO,SAAa,IAAA,IAAA,GAAA,SAAA,GAAA,EAAA,CAAA;AAAA,KACtB;AAAA,IACA,CAAC,WAAW,oBAAoB,CAAA;AAAA,GAClC,CAAA;AAEA,EAAM,MAAA,WAAA,GAAc,WAAW,IAAM,EAAA;AAAA,IACnC,SAAW,EAAA,aAAA;AAAA,GACZ,CAAA,CAAA;AAED,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,QAAA,EAAAJ,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAa,WAAb,CAAA,EAAA,EAA0B,OAAO,aAAe,EAAA,CAAA,CAAA,CAAA;AAC1D,CAAA;AAEgB,SAAA,gBAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,YAAA;AAAA,IACA;AAAA,MACE,IAAA,EAAM,kBAAkB,UAAU,CAAA;AAAA,MAClC,WAAa,EAAA,eAAA;AAAA,MACb,UAAY,EAAA,iDAAA;AAAA,MACZ,UAAY,EAAA,cAAA;AAAA,gBACZC,UAAA;AAAA,MACA,KAAA,EAAOD,gBACF,CAAA,EAAA,EAAA,cAAA,CAAkC,WAAa,EAAA;AAAA,QAChD,MAAA;AAAA,QACA,UAAA;AAAA,QACA,UAAA;AAAA,QACA,WAAA;AAAA,QACA,YAAA;AAAA,QACA,UAAA;AAAA,QACA,aAAA;AAAA,QACA,OAAA;AAAA,QACA,WAAA;AAAA,QACA,WAAA;AAAA,QACA,WAAA;AAAA,QACA,UAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,oBAAA;AAAA,QACA,kBAAA;AAAA,QACA,qBAAA;AAAA,QACA,UAAA;AAAA,QACA,eAAA;AAAA,QACA,SAAA;AAAA,OACD,CAAA,CAAA;AAAA,MAEH,MAAQ,EAAA;AAAA,QACN,KAAO,EAAAA,gBAAA,CAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,MAAA;AAAA,SAAA,EACX,aAAa,MAAO,CAAA,KAAA,CAAA;AAAA,OAE3B;AAAA,MACA,gBAAkB,EAAA;AAAA,QAChB,OAAS,EAAA,YAAA;AAAA,QACT,UAAY,EAAA,cAAA;AAAA,QACZ,UAAY,EAAA,iDAAA;AAAA,OACd;AAAA,KACF;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA,MAAM,mBAAA,GAAsB,CAAC,UAAA,EAAqB,UAAmB,CAAA,CAAA;AAarE,MAAM,YAAEC,UAAA,sBAAUC,oBAAmB,EAAA,GACnC,0BAA0B,mBAAmB,CAAA,CAAA;AAExC,SAAS,cAAc,KAA2B,EAAA;AACvD,EAAkE,MAAA,EAAA,GAAA,KAAA,EAA1D,EAAU,QAAA,EAAA,oBAAA,EAAsB,YAjC1C,EAAA,GAiCoE,IAAT,IAAS,GAAA,SAAA,CAAA,EAAA,EAAT,CAAjD,UAAA,EAAU,sBAAsB,EAAA,cAAA,CAAA,CAAA,CAAA;AAExC,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,uBAAA,CAAwB,QAAxB,EAAA,EAAiC,OAAO,KACvC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,SAAA;AAAA,IAAAH,eAAA,CAAAC,gBAAA,CAAA;AAAA,MACC,YAAA,EAAc,oBAAoB,YAAY,CAAA;AAAA,KAAA,EAC1C,IAFL,CAAA,EAAA;AAAA,MAGC,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,CAAC,EAAE,UAAY,EAAA,UAAA,EACd,KAAAE,oBAAA;AAAA,MACE,QAAA;AAAA,MACA;AAAA,QACE,QAAU,EAAA,UAAA;AAAA,QACV,QAAU,EAAA,UAAA;AAAA,OACZ;AAAA,MACA,oBAAA;AAAA,KACF;AAAA,GAGN,CAAA,CAAA;AAEJ,CAAA;AAEa,MAAA,yBAAA,GAA4B,kBAAkB,WAAW,CAAA,CAAA;AAEtD,SAAA,iBAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,aAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,yBAAA;AAAA,MACN,WAAa,EAAA,gBAAA;AAAA,MACb,UAAY,EAAA,kDAAA;AAAA,MACZ,UAAY,EAAA,eAAA;AAAA,gBACZD,UAAA;AAAA;AAAA,MAEA,KAAA,EAAOF,eACF,CAAAC,gBAAA,CAAA,EAAA,EAAA,cAAA,CAAmC,YAAc,EAAA;AAAA,QAClD,MAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,WAAA;AAAA,QACA,YAAA;AAAA,QACA,YAAA;AAAA,QACA,OAAA;AAAA,QACA,WAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,MAAA;AAAA,QACA,WAAA;AAAA,QACA,oBAAA;AAAA,QACA,cAAA;AAAA,QACA,UAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,eAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,QAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAA;AAAA,QACA,oBAAA;AAAA,QACA,kBAAA;AAAA,QACA,qBAAA;AAAA,QACA,UAAA;AAAA,QACA,eAAA;AAAA,QACA,SAAA;AAAA,OACD,CA/BI,CAAA,EAAA;AAAA,QAgCL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,MAAQ,EAAA;AAAA,cACN,cAAgB,EAAA,YAAA;AAAA,cAChB,UAAY,EAAA,YAAA;AAAA,cACZ,KAAO,EAAA,OAAA;AAAA,cACP,GAAK,EAAA,KAAA;AAAA,cACL,OAAS,EAAA,CAAA;AAAA,aACX;AAAA,YACA,QAAU,EAAA;AAAA,cACR;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,oBAAA;AAAA,gBACN,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR,IAAM,EAAA,MAAA;AAAA,oBACN,KAAO,EAAA,OAAA;AAAA,mBACT;AAAA,iBACF;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,oBAAA;AAAA,gBACN,MAAQ,EAAA;AAAA,kBACN,KAAO,EAAA,MAAA;AAAA,iBACT;AAAA,eACF;AAAA,cACA;AAAA,gBACE,IAAM,EAAA,WAAA;AAAA,gBACN,IAAM,EAAA,0BAAA;AAAA,gBACN,KAAO,EAAA;AAAA,kBACL,QAAU,EAAA;AAAA,oBACR,IAAM,EAAA,MAAA;AAAA,oBACN,KAAO,EAAA,mBAAA;AAAA,mBACT;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QAEA,SAAW,EAAA;AAAA;AAAA,UAET,WAAa,EAAA,SAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,UACN,WAAa,EAAA,oCAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,SACpB;AAAA,QACA,sBAAwB,EAAA;AAAA;AAAA,UAEtB,IAAM,EAAA,OAAA;AAAA,UACN,WAAa,EAAA,8BAAA;AAAA,SACf;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,OAAA;AAAA,UACX,YAAc,EAAA,UAAA;AAAA,UACd,YAAc,EAAA,MAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;AC3JA,MAAM,gBAAmB,GAAA;AAAA,EACvB,cAAA;AAAA,EACA,iBAAA;AAAA,EACA,eAAA;AAAA,EACA,gBAAA;AACF,CAAA,CAAA;AAiBA,MAAM,EAAE,QAAA,EAAU,kBAAmB,EAAA,GACnC,0BAA0B,gBAAgB,CAAA,CAAA;AAa5C,SAAS,cAAe,CAAA,EAAE,QAAU,EAAA,SAAA,EAAkC,EAAA;AACpE,EAAM,MAAA,GAAA,GAAM,KAAM,CAAA,MAAA,CAA8B,IAAI,CAAA,CAAA;AACpD,EAAA,MAAM,EAAE,cAAe,EAAA,GAAI,YAAa,CAAA,IAAI,GAAG,CAAA,CAAA;AAC/C,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA,aAAA,CAAA,cAAA,CAAA;AAAA,MACC,GAAA;AAAA,MACA,SAAA;AAAA,KAAA,EACI,cAHL,CAAA,EAAA;AAAA,MAIC,KAAO,EAAA,aAAA;AAAA,KAAA,CAAA;AAAA,IAEN,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AAEO,SAAS,YAAY,KAAyB,EAAA;AAtErD,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAuEE,EAAM,MAAA;AAAA,IACJ,QAAA;AAAA,IACA,UAAA;AAAA,IACA,KAAA;AAAA,IACA,UAAA;AAAA,IACA,OAAA;AAAA,IACA,MAAA;AAAA,IACA,WAAA;AAAA,IACA,cAAA;AAAA,IACA,cAAA;AAAA,IACA,SAAA;AAAA,IACA,MAAA;AAAA,IACA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,oBAAA;AAAA,GACE,GAAA,KAAA,CAAA;AAEJ,EAAA,MAAM,EAAE,UAAY,EAAA,gBAAA,MAClB,EAAgC,GAAA,CAAA,EAAA,GAAA,6BAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA,KAAhC,YAA0C,EAAC,CAAA;AAC7C,EAAM,MAAA,UAAA,GAAa,qBAAqB,UAAc,IAAA,UAAA,CAAA;AACtD,EAAM,MAAA,OAAA,GAAA,CAAW,EAAc,GAAA,UAAA,IAAA,MAAA,KAAd,IAAyB,GAAA,EAAA,GAAA,KAAA,CAAA;AAE1C,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,cAAA;AAAA,IAAA;AAAA,MACC,UAAA;AAAA,MACA,KAAA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,MAAQ,EAAA,OAAA;AAAA,MACR,WAAA;AAAA,MACA,YAAA;AAAA,KAAA;AAAA,oBAEC,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,EAAe,SAAW,EAAA,cAAA,EAAA,EAAiB,QAAS,CAAA;AAAA,oBACrD,KAAA,CAAA,aAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,MAAQ,EAAA,OAAA;AAAA,QACR,MAAA;AAAA,QACA,WAAA;AAAA,QACA,UAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAW,EAAA,cAAA;AAAA,QACX,YAAA;AAAA,QACA,SAAA;AAAA,OAAA;AAAA,MAEC,CAAC,EAAE,SAAW,EAAA,UAAA,EACb,KAAA,kBAAA;AAAA,kEACK,cAAe,CAAA;AAAA,QAClB;AAAA,UACE,cAAc,UAAe,KAAA,KAAA;AAAA,UAC7B,iBAAiB,UAAe,KAAA,QAAA;AAAA,UAChC,eAAe,UAAe,KAAA,MAAA;AAAA,UAC9B,gBAAgB,UAAe,KAAA,OAAA;AAAA,SACjC;AAAA,QACA,oBAAA;AAAA,OACF;AAAA,KAEJ;AAAA,GACF,CAAA;AAEJ,CAAA;AAEgB,SAAA,eAAA,CACd,QACA,SACA,EAAA;AACA,EAAA,uBAAA;AAAA,IACE,MAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,MACE,IAAM,EAAA,4BAAA;AAAA,MACN,WAAa,EAAA,cAAA;AAAA,MACb,UAAY,EAAA,gDAAA;AAAA,MACZ,UAAY,EAAA,aAAA;AAAA,MACZ,YAAc,EAAA,IAAA;AAAA,MACd,aAAe,EAAA,KAAA;AAAA,MACf,QAAA;AAAA,MACA,KAAO,EAAA,aAAA,CAAA,cAAA,CAAA;AAAA,QACL,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,WAAa,EAAA,SAAA;AAAA,UACb,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,WAAA;AAAA,YACP,MAAQ,EAAA;AAAA,cACN,KAAO,EAAA,KAAA;AAAA,aACT;AAAA,WACF;AAAA,SACF;AAAA,QACA,cAAgB,EAAA;AAAA,UACd,IAAM,EAAA,MAAA;AAAA,UACN,eAAiB,EAAA,IAAA;AAAA,UACjB,WAAa,EAAA,iBAAA;AAAA;AAAA,UAEb,YAAc,EAAA;AAAA,YACZ,IAAM,EAAA,MAAA;AAAA,YACN,KAAO,EAAA,qBAAA;AAAA,YACP,MAAQ,EAAA;AAAA,cACN,UAAY,EAAA,OAAA;AAAA,cACZ,KAAO,EAAA,OAAA;AAAA,cACP,OAAS,EAAA,KAAA;AAAA,cACT,YAAc,EAAA,KAAA;AAAA,aAChB;AAAA,WACF;AAAA,SACF;AAAA,QACA,cAAgB,EAAA;AAAA,UACd,IAAM,EAAA,iBAAA;AAAA,SACR;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,SAAA;AAAA,SACR;AAAA,QACA,KAAO,EAAA;AAAA,UACL,IAAM,EAAA,QAAA;AAAA;AAAA,UAEN,YAAc,EAAA,CAAA;AAAA,UACd,gBAAkB,EAAA,CAAA;AAAA,UAClB,WACE,EAAA,yDAAA;AAAA,SACJ;AAAA,QACA,UAAY,EAAA;AAAA,UACV,IAAM,EAAA,QAAA;AAAA;AAAA,UAEN,YAAc,EAAA,CAAA;AAAA,UACd,gBAAkB,EAAA,CAAA;AAAA,UAClB,WAAa,EAAA,uDAAA;AAAA,SACf;AAAA,QACA,OAAS,EAAA;AAAA,UACP,IAAM,EAAA,QAAA;AAAA,UACN,OAAA,EAAS,CAAC,OAAA,EAAS,iBAAiB,CAAA;AAAA,UACpC,gBAAkB,EAAA,iBAAA;AAAA,SACpB;AAAA,OAAA,EACG,sBAAwC,SAAW,EAAA;AAAA,QACpD,SAAA,EAAW,EAAE,gBAAA,EAAkB,KAAM,EAAA;AAAA,QACrC,MAAA,EAAQ,EAAE,gBAAA,EAAkB,CAAE,EAAA;AAAA,QAC9B,gBAAA,EAAkB,EAAE,gBAAA,EAAkB,EAAG,EAAA;AAAA,QACzC,WAAA,EAAa,EAAE,gBAAA,EAAkB,CAAE,EAAA;AAAA,OACpC,CA5DI,CAAA,EAAA;AAAA,QA6DL,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,SAAA;AAAA,UACN,QAAU,EAAA,IAAA;AAAA,UACV,gBAAkB,EAAA,aAAA;AAAA,UAClB,WAAa,EAAA,wCAAA;AAAA,UACb,gBAAkB,EAAA,KAAA;AAAA,UAClB,QAAQ,MAAM,IAAA;AAAA,SAChB;AAAA,QACA,YAAc,EAAA;AAAA,UACZ,IAAM,EAAA,cAAA;AAAA,UACN,UAAU,CAAC,EAAE,MAAM,QAAU,EAAA,IAAA,EAAM,WAAW,CAAA;AAAA,SAChD;AAAA,OACF,CAAA;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,UAAA;AAAA,UACN,SAAW,EAAA,QAAA;AAAA,UACX,YAAc,EAAA,cAAA;AAAA,UACd,YAAc,EAAA,SAAA;AAAA,SAChB;AAAA,OACF;AAAA,MACA,UAAY,EAAA,IAAA;AAAA,KACd;AAAA,IACA,SAAA;AAAA,GACF,CAAA;AACF;;AChNO,SAAS,YAAY,MAAuB,EAAA;AACjD,EAAA,YAAA,CAAa,MAAM,CAAA,CAAA;AACnB,EAAA,eAAA,CAAgB,MAAM,CAAA,CAAA;AACtB,EAAA,mBAAA,CAAoB,MAAM,CAAA,CAAA;AAC1B,EAAA,cAAA,CAAe,MAAM,CAAA,CAAA;AACrB,EAAA,oBAAA,CAAqB,MAAM,CAAA,CAAA;AAC3B,EAAA,cAAA,CAAe,MAAM,CAAA,CAAA;AACrB,EAAA,gBAAA,CAAiB,MAAM,CAAA,CAAA;AACvB,EAAA,cAAA,CAAe,MAAM,CAAA,CAAA;AACrB,EAAA,aAAA,CAAc,MAAM,CAAA,CAAA;AACpB,EAAA,eAAA,CAAgB,MAAM,CAAA,CAAA;AACtB,EAAA,eAAA,CAAgB,MAAM,CAAA,CAAA;AACtB,EAAA,gBAAA,CAAiB,MAAM,CAAA,CAAA;AACvB,EAAA,aAAA,CAAc,MAAM,CAAA,CAAA;AACpB,EAAA,cAAA,CAAe,MAAM,CAAA,CAAA;AAErB,EAAA,gBAAA,CAAiB,MAAM,CAAA,CAAA;AACvB,EAAA,qBAAA,CAAsB,MAAM,CAAA,CAAA;AAC5B,EAAA,kBAAA,CAAmB,MAAM,CAAA,CAAA;AACzB,EAAA,iBAAA,CAAkB,MAAM,CAAA,CAAA;AACxB,EAAA,aAAA,CAAc,MAAM,CAAA,CAAA;AACpB,EAAA,eAAA,CAAgB,MAAM,CAAA,CAAA;AACtB,EAAA,qBAAA,CAAsB,MAAM,CAAA,CAAA;AAC5B,EAAA,cAAA,CAAe,MAAM,CAAA,CAAA;AACvB;;;;"}