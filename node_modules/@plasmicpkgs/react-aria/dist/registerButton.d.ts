import React from "react";
import type { ButtonProps, LinkProps } from "react-aria-components";
import { CodeComponentMetaOverrides, Registerable } from "./utils";
import { WithVariants } from "./variant-utils";
declare const BUTTON_VARIANTS: ("disabled" | "hovered" | "pressed" | "focused" | "focusVisible")[];
type CommonProps = {
    children: React.ReactNode;
} & Omit<ButtonProps, "className" | "children"> & Omit<LinkProps, "className" | "children">;
type LinkSpecificProps = Pick<LinkProps, "href" | "target">;
type ButtonSpecificProps = {
    resetsForm?: boolean;
    submitsForm?: boolean;
};
interface BaseButtonProps extends CommonProps, LinkSpecificProps, ButtonSpecificProps, WithVariants<typeof BUTTON_VARIANTS> {
    children: React.ReactNode;
    className?: string;
}
export declare const BaseButton: React.ForwardRefExoticComponent<BaseButtonProps & React.RefAttributes<HTMLAnchorElement | HTMLButtonElement>>;
export declare const BUTTON_COMPONENT_NAME: string;
export declare function registerButton(loader?: Registerable, overrides?: CodeComponentMetaOverrides<typeof BaseButton>): void;
export {};
